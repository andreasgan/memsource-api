---
swagger: "2.0"
info:
  description: "Welcome to Memsource's API documentation. To view our legacy APIs\
    \ please [visit our documentation](https://wiki.memsource.com/wiki/Memsource_API)\
    \ and for more information about our new APIs, [visit our blog](https://www.memsource.com/blog/2017/10/24/introducing-rest-apis-qa-with-the-memsource-api-team/).\
    \ \n\n If you have any questions, please contact [Memsource Support](https://get-help.memsource.com)."
  version: "All"
  title: "Memsource REST API"
host: "cloud.memsource.com"
basePath: "/web"
tags:
- name: "Analysis"
- name: "Analytics"
- name: "Async Request"
- name: "Authentication"
- name: "Bilingual File"
- name: "Business Unit"
- name: "Client"
- name: "Connector"
- name: "Conversations"
- name: "Domain"
- name: "Email Template"
- name: "File"
- name: "Import settings"
- name: "Job"
- name: "Machine Translation"
- name: "Machine Translation Settings"
- name: "Mapping"
- name: "Net Rate Scheme"
- name: "Price List"
- name: "Project"
- name: "Project Reference File"
- name: "Project Template"
- name: "Provider"
- name: "Quality Assurance"
- name: "Quote"
- name: "SCIM"
- name: "Segment"
- name: "Segmentation Rules"
- name: "Spell Check"
- name: "SubDomain"
- name: "Supported Languages"
- name: "Term Base"
- name: "Translation"
- name: "Translation Memory"
- name: "User"
- name: "Vendor"
- name: "Webhook"
- name: "Workflow Step"
- name: "Workflow changes"
paths:
  /api2/v1/analyses:
    post:
      tags:
      - "Analysis"
      summary: "Create analysis"
      description: ""
      operationId: "createAnalyseAsync"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateAnalyseAsyncDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncAnalyseResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/analyses/bulk:
    put:
      tags:
      - "Analysis"
      summary: "Edit analyses (batch)"
      description: ""
      operationId: "batchEditAnalyses"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BulkEditAnalyseDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AnalyseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    delete:
      tags:
      - "Analysis"
      summary: "Delete analyses (batch)"
      description: ""
      operationId: "bulkDeleteAnalyses"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BulkDeleteAnalyseDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analyses/{analyseId}/analyseLanguageParts/{analyseLanguagePartId}:
    get:
      tags:
      - "Analysis"
      summary: "Get analysis language part"
      description: "Returns analysis language pair"
      operationId: "getAnalyseLanguagePart"
      produces:
      - "application/json"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseId"
      - name: "analyseLanguagePartId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseLanguagePartId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyseLanguagePartDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analyses/{analyseId}/analyseLanguageParts/{analyseLanguagePartId}/jobs:
    get:
      tags:
      - "Analysis"
      summary: "List jobs of analyses"
      description: "Returns list of job's analyses"
      operationId: "listJobParts"
      produces:
      - "application/json"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseId"
      - name: "analyseLanguagePartId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseLanguagePartId"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAnalyseJobDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analyses/{analyseId}/jobs/{jobUid}:
    get:
      tags:
      - "Analysis"
      summary: "Get jobs analysis"
      description: "Returns job's analyse"
      operationId: "getJobPartAnalyse"
      produces:
      - "application/json"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseId"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyseJobDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analyses/{analyseId}/download:
    get:
      tags:
      - "Analysis"
      summary: "Download analysis"
      description: ""
      operationId: "downloadAnalyse"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseId"
      - name: "format"
        in: "query"
        required: true
        type: "string"
        enum:
        - "CSV"
        - "CSV_EXTENDED"
        - "LOG"
        x-exportParamName: "Format"
      responses:
        "200":
          description: "application/octet-stream"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analyses/{analyseId}:
    get:
      tags:
      - "Analysis"
      summary: "Get analysis"
      description: ""
      operationId: "getAnalyse"
      produces:
      - "application/json"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    delete:
      tags:
      - "Analysis"
      summary: "Delete analysis"
      description: ""
      operationId: "delete"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "AnalyseId"
      - name: "purge"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "Purge"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analyses/byProviders:
    post:
      tags:
      - "Analysis"
      summary: "Create analyses by providers"
      description: ""
      operationId: "createAnalysesForProviders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateAnalyseListAsyncDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncAnalyseListResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analyses/byLanguages:
    post:
      tags:
      - "Analysis"
      summary: "Create analyses by languages"
      description: ""
      operationId: "createAnalysesForLangs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateAnalyseListAsyncDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncAnalyseListResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/analytics/{type}:
    post:
      tags:
      - "Analytics"
      summary: "Run analytics aggregation"
      description: "For more information check <a target=\"_blank\" href=\"https://wiki.memsource.com/wiki/Analytics_Aggregations\"\
        >Memsource Wiki</a>"
      operationId: "aggregate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        description: "This value is case sensitive"
        required: true
        type: "string"
        enum:
        - "analysis"
        - "api"
        - "costs"
        - "jobPart"
        - "lqa"
        x-exportParamName: "Type_"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AnalyticsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyticsResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/async:
    get:
      tags:
      - "Async Request"
      summary: "List pending requests"
      description: ""
      operationId: "listPendingRequests"
      produces:
      - "application/json"
      parameters:
      - name: "all"
        in: "query"
        description: "Pending requests for organization instead of current user. Only\
          \ for ADMIN."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "All"
        x-optionalDataType: "Bool"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAsyncRequestDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/async/{asyncRequestId}:
    get:
      tags:
      - "Async Request"
      summary: "Get asynchronous request"
      description: ""
      operationId: "getAsyncRequest"
      produces:
      - "application/json"
      parameters:
      - name: "asyncRequestId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AsyncRequestId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncRequestDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/auth/login:
    post:
      tags:
      - "Authentication"
      summary: "Login"
      description: ""
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/LoginDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/auth/logout:
    post:
      tags:
      - "Authentication"
      summary: "Logout"
      description: ""
      operationId: "logout"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Token"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/auth/loginOther:
    post:
      tags:
      - "Authentication"
      summary: "Login as another user"
      description: "Available only for admin"
      operationId: "loginOther"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/LoginOtherDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/auth/loginToSession:
    post:
      tags:
      - "Authentication"
      summary: "Login to session"
      description: ""
      operationId: "loginToSession"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/LoginToSessionDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginToSessionResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/auth/whoAmI:
    get:
      tags:
      - "Authentication"
      summary: "Who am I"
      description: ""
      operationId: "whoAmI"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginUserDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/auth/loginWithGoogle:
    post:
      tags:
      - "Authentication"
      summary: "Login with Google"
      description: ""
      operationId: "loginByGoogle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/LoginWithGoogleDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/bilingualFiles/convert:
    post:
      tags:
      - "Bilingual File"
      summary: "Convert bilingual file"
      description: ""
      operationId: "convertBilingualFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      - name: "from"
        in: "query"
        required: true
        type: "string"
        enum:
        - "MXLF"
        - "DOCX"
        x-exportParamName: "From"
      - name: "to"
        in: "query"
        required: true
        type: "string"
        enum:
        - "MXLF"
        - "DOCX"
        x-exportParamName: "To"
      responses:
        "200":
          description: "application/octet-stream"
          headers:
            Content-Disposition:
              type: "string"
              description: "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/bilingualFiles:
    put:
      tags:
      - "Bilingual File"
      - "Job"
      summary: "Upload bilingual file"
      description: "Returns updated job parts"
      operationId: "uploadBilingualFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "MXLF"
        enum:
        - "MXLF"
        - "DOCX"
        - "XLIFF"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "saveToTransMemory"
        in: "query"
        required: false
        type: "string"
        default: "Confirmed"
        enum:
        - "All"
        - "Confirmed"
        - "None"
        x-exportParamName: "SaveToTransMemory"
        x-optionalDataType: "String"
      - name: "setCompleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "SetCompleted"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/bilingualFiles/compare:
    post:
      tags:
      - "Bilingual File"
      summary: "Compare bilingual file"
      description: "Compares bilingual file to job state. Returns list of compared\
        \ segments."
      operationId: "compareBilingualFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      - name: "workflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "WorkflowLevel"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ComparedSegmentsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/bilingualFiles/preview:
    post:
      tags:
      - "Bilingual File"
      summary: "Download preview"
      description: "Supports mxliff format"
      operationId: "getPreviewFile"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "application/octet-stream"
          headers:
            Content-Disposition:
              type: "string"
              description: "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/businessUnits/{businessUnitId}:
    get:
      tags:
      - "Business Unit"
      summary: "Get business unit"
      description: ""
      operationId: "getBusinessUnit"
      produces:
      - "application/json"
      parameters:
      - name: "businessUnitId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BusinessUnitId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BusinessUnitDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Business Unit"
      summary: "Edit business unit"
      description: ""
      operationId: "updateBusinessUnit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "businessUnitId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BusinessUnitId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BusinessUnitEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BusinessUnitDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Business Unit"
      summary: "Delete business unit"
      description: ""
      operationId: "deleteBusinessUnit"
      parameters:
      - name: "businessUnitId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "BusinessUnitId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/businessUnits:
    get:
      tags:
      - "Business Unit"
      summary: "List business units"
      description: ""
      operationId: "listBusinessUnits"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Unique name of the business unit"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoBusinessUnitDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Business Unit"
      summary: "Create business unit"
      description: ""
      operationId: "createBusinessUnit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BusinessUnitEditDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/BusinessUnitDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/clients/{clientId}:
    get:
      tags:
      - "Client"
      summary: "Get client"
      description: ""
      operationId: "getClient"
      produces:
      - "application/json"
      parameters:
      - name: "clientId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ClientDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Client"
      summary: "Edit client"
      description: ""
      operationId: "updateClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "clientId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ClientEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ClientDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Client"
      summary: "Delete client"
      description: ""
      operationId: "deleteClient"
      parameters:
      - name: "clientId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/clients:
    get:
      tags:
      - "Client"
      summary: "List clients"
      description: ""
      operationId: "listClients"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Unique name of the Client"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoClientDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Client"
      summary: "Create client"
      description: ""
      operationId: "createClient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ClientEditDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/ClientDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/connectors/{connectorId}:
    get:
      tags:
      - "Connector"
      summary: "Get a connector"
      description: ""
      operationId: "getConnector"
      produces:
      - "application/json"
      parameters:
      - name: "connectorId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConnectorId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConnectorDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/connectors:
    get:
      tags:
      - "Connector"
      summary: "List connectors"
      description: ""
      operationId: "getConnectorList"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConnectorListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/connectors/{connectorId}/folders:
    get:
      tags:
      - "Connector"
      summary: "List files in root"
      description: "List files in a root folder of the selected connector"
      operationId: "getRootFolder"
      produces:
      - "application/json"
      parameters:
      - name: "connectorId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConnectorId"
      - name: "fileType"
        in: "query"
        required: false
        type: "string"
        default: "ALL"
        pattern: "ALL|FILES_ONLY|FOLDERS_ONLY"
        x-exportParamName: "FileType"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        required: false
        type: "string"
        default: "NAME"
        pattern: "NAME|SIZE|LAST_MODIFIED"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        required: false
        type: "string"
        default: "ASCENDING"
        pattern: "ASCENDING|DESCENDING"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FileListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/connectors/{connectorId}/folders/{folder}:
    get:
      tags:
      - "Connector"
      summary: "List files in a subfolder"
      description: "List files in a subfolder of the selected connector"
      operationId: "getFolder"
      produces:
      - "application/json"
      parameters:
      - name: "connectorId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConnectorId"
      - name: "folder"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Folder"
      - name: "fileType"
        in: "query"
        required: false
        type: "string"
        default: "ALL"
        pattern: "ALL|FILES_ONLY|FOLDERS_ONLY"
        x-exportParamName: "FileType"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        required: false
        type: "string"
        default: "NAME"
        pattern: "NAME|SIZE|LAST_MODIFIED"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "direction"
        in: "query"
        required: false
        type: "string"
        default: "ASCENDING"
        pattern: "ASCENDING|DESCENDING"
        x-exportParamName: "Direction"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FileListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Connector"
      summary: "Upload a file to a subfolder of the selected connector"
      description: "Upload a file to a subfolder of the selected connector"
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "connectorId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConnectorId"
      - name: "folder"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Folder"
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
        enum:
        - "multipart/form-data"
        x-exportParamName: "ContentType"
      - name: "file"
        in: "formData"
        description: "Translated file to upload"
        required: true
        type: "file"
        x-exportParamName: "File"
      - name: "sourceFileName"
        in: "formData"
        description: "Name or ID of the original file"
        required: false
        type: "string"
        x-exportParamName: "SourceFileName"
        x-optionalDataType: "String"
      - name: "subfolderName"
        in: "formData"
        description: "Optional subfolder to upload the file to"
        required: false
        type: "string"
        x-exportParamName: "SubfolderName"
        x-optionalDataType: "String"
      - name: "mimeType"
        in: "formData"
        description: "Mime type of the file to upload"
        required: false
        type: "string"
        x-exportParamName: "MimeType"
        x-optionalDataType: "String"
      - name: "commitMessage"
        in: "formData"
        description: "Commit message for upload to Git, etc."
        required: false
        type: "string"
        x-exportParamName: "CommitMessage"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UploadResultDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/connectors/{connectorId}/folders/{folder}/files/{file}:
    get:
      tags:
      - "Connector"
      summary: "Download file"
      description: "Download a file from a subfolder of the selected connector"
      operationId: "getFile"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "connectorId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConnectorId"
      - name: "folder"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Folder"
      - name: "file"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "File"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/InputStreamLength"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/conversations/find:
    post:
      tags:
      - "Conversations"
      summary: "Find all conversation"
      description: ""
      operationId: "findConversations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/FindConversationsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConversationListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations:
    get:
      tags:
      - "Conversations"
      summary: "List all conversations"
      description: ""
      operationId: "listAllConversations"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "includeDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeDeleted"
        x-optionalDataType: "Bool"
      - name: "since"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Since"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConversationListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/netRateSchemes/{netRateSchemeId}:
    get:
      tags:
      - "Net Rate Scheme"
      summary: "Get net rate scheme"
      description: ""
      operationId: "getDiscountScheme"
      produces:
      - "application/json"
      parameters:
      - name: "netRateSchemeId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetRateSchemeId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/NetRateScheme"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/netRateSchemes:
    get:
      tags:
      - "Net Rate Scheme"
      summary: "List net rate schemes"
      description: ""
      operationId: "getDiscountSchemes"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoNetRateSchemeReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Net Rate Scheme"
      summary: "Create net rate scheme"
      description: ""
      operationId: "createDiscountScheme"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DiscountSchemeCreateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/NetRateScheme"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/netRateSchemes/{netRateSchemeId}/workflowStepNetSchemes/{netRateSchemeWorkflowStepId}:
    get:
      tags:
      - "Net Rate Scheme"
      summary: "Get scheme for workflow step"
      description: ""
      operationId: "getDiscountSchemeWorkflowStep"
      produces:
      - "application/json"
      parameters:
      - name: "netRateSchemeId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetRateSchemeId"
      - name: "netRateSchemeWorkflowStepId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetRateSchemeWorkflowStepId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/NetRateSchemeWorkflowStep"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/netRateSchemes/{netRateSchemeId}/workflowStepNetSchemes:
    get:
      tags:
      - "Net Rate Scheme"
      summary: "List schemes for workflow step"
      description: ""
      operationId: "getDiscountSchemeWorkflowSteps"
      produces:
      - "application/json"
      parameters:
      - name: "netRateSchemeId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "NetRateSchemeId"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoNetRateSchemeWorkflowStepReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/domains:
    get:
      tags:
      - "Domain"
      summary: "List of domains"
      description: ""
      operationId: "listDomains"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoDomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Domain"
      summary: "Create domain"
      description: ""
      operationId: "createDomain"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DomainEditDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/DomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/domains/{domainId}:
    get:
      tags:
      - "Domain"
      summary: "Get domain"
      description: ""
      operationId: "getDomain"
      produces:
      - "application/json"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DomainId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/DomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Domain"
      summary: "Edit domain"
      description: ""
      operationId: "updateDomain"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DomainId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DomainEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/DomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Domain"
      summary: "Delete domain"
      description: ""
      operationId: "deleteDomain"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "DomainId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/emailTemplates:
    get:
      tags:
      - "Email Template"
      summary: "List email templates"
      description: ""
      operationId: "listOrgEmailTemplates"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Type_"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoOrganizationEmailTemplateDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/emailTemplates/{templateId}:
    get:
      tags:
      - "Email Template"
      summary: "Get email template"
      description: ""
      operationId: "getOrgEmailTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "templateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TemplateId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OrganizationEmailTemplateDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/files/{fileUid}:
    get:
      tags:
      - "File"
      summary: "Get file"
      description: "Get uploaded file as <b>octet-stream</b> or as <b>json</b> based\
        \ on 'Accept' header"
      operationId: "getFileJson"
      produces:
      - "application/json"
      parameters:
      - name: "fileUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "FileUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UploadedFileDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "File"
      summary: "Delete file"
      description: ""
      operationId: "deletesFile"
      consumes:
      - "application/json"
      parameters:
      - name: "fileUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "FileUid"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/files:
    get:
      tags:
      - "File"
      summary: "List files"
      description: ""
      operationId: "getFiles"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "types"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Types"
      - name: "createdBy"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "CreatedBy"
        x-optionalDataType: "Int64"
      - name: "biggerThan"
        in: "query"
        description: "Size in bytes"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BiggerThan"
        x-optionalDataType: "Int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoUploadedFileDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "File"
      summary: "Upload file"
      description: "Accepts multipart/form-data, application/octet-stream or application/json."
      operationId: "createUrlFile"
      consumes:
      - "application/json"
      - "application/octet-stream"
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "file"
        required: true
        schema:
          $ref: "#/definitions/RemoteUploadedFileDto"
        x-exportParamName: "Body"
      - name: "Content-Disposition"
        in: "header"
        description: "must match pattern `((inline|attachment); )?filename\\*=UTF-8''(.+)`"
        required: true
        type: "string"
        x-exportParamName: "ContentDisposition"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/UploadedFileDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/transMemories/wildCardSearch:
    post:
      tags:
      - "Job"
      - "Translation Memory"
      summary: "Wildcard search job's translation memories"
      description: ""
      operationId: "wildCardSearchByJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WildCardSearchByJobRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/transMemories/search:
    post:
      tags:
      - "Translation Memory"
      - "Job"
      summary: "Search job's translation memories"
      description: "<b>This API is incorrectly implemented, use\n            endpoint\
        \ <a href=\"#operation/searchSegmentByJob\">Search translation memory for\
        \ segment by job</a>.</b> </br>\n            Returns at most <i>maxSegments</i>\
        \ records with <i>score >= scoreThreshold</i> and at most\n            <i>maxSubsegments</i>\
        \ records which are subsegment, i.e. the source text is substring of the query\
        \ text."
      operationId: "searchByJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTMByJobRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/transMemories/searchSegment:
    post:
      tags:
      - "Translation Memory"
      - "Job"
      summary: "Search translation memory for segment by job"
      description: "Returns at most <i>maxSegments</i>\n            records with <i>score\
        \ >= scoreThreshold</i> and at most <i>maxSubsegments</i> records which are\
        \ subsegment,\n            i.e. the source text is substring of the query\
        \ text."
      operationId: "searchSegmentByJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTMByJobRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/lqas/{conversationId}:
    get:
      tags:
      - "Conversations"
      summary: "Get LQA conversation"
      description: ""
      operationId: "getLQAConversation"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LQAConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Conversations"
      summary: "Edit LQA conversation"
      description: ""
      operationId: "updateLQAConversation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditLQAConversationDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LQAConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Conversations"
      summary: "Delete conversation"
      description: ""
      operationId: "deleteLQAConversation"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/lqas:
    get:
      tags:
      - "Conversations"
      summary: "List LQA conversations"
      description: ""
      operationId: "listLQAConversations"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "includeDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeDeleted"
        x-optionalDataType: "Bool"
      - name: "since"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Since"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LQAConversationsListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Conversations"
      summary: "Create LQA conversation"
      description: ""
      operationId: "createLQAConversation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateLQAConversationDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/LQAConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/lqas/{conversationId}/comments:
    post:
      tags:
      - "Conversations"
      summary: "Add LQA comment"
      description: ""
      operationId: "addLQAComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AddCommentDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/LQAConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/lqas/{conversationId}/comments/{commentId}:
    put:
      tags:
      - "Conversations"
      summary: "Edit LQA comment"
      description: ""
      operationId: "updateLQAComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - name: "commentId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CommentId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AddCommentDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LQAConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Conversations"
      summary: "Delete LQA comment"
      description: ""
      operationId: "deleteLQAComment"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - name: "commentId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CommentId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/languages:
    get:
      tags:
      - "Supported Languages"
      summary: "List supported languages"
      description: ""
      operationId: "listOfLanguages"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LanguageListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/machineTranslateSettings:
    get:
      tags:
      - "Machine Translation Settings"
      summary: "List machine translate settings"
      description: ""
      operationId: "getList"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoMachineTranslateSettingsPbmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/machineTranslateSettings/{mtsUid}/status:
    get:
      tags:
      - "Machine Translation Settings"
      summary: "Get status of machine translate engine"
      description: ""
      operationId: "getStatus"
      produces:
      - "application/json"
      parameters:
      - name: "mtsUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MtsUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MachineTranslateStatusDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/machineTranslateSettings/{mtsUid}:
    get:
      tags:
      - "Machine Translation Settings"
      summary: "Get machine translate settings"
      description: ""
      operationId: "getMTSettings"
      produces:
      - "application/json"
      parameters:
      - name: "mtsUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "MtsUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MachineTranslateSettingsPbmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/machineTranslations/{mtSettingsId}/translate:
    post:
      tags:
      - "Machine Translation"
      summary: "Translate with MT"
      description: ""
      operationId: "machineTranslation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mtSettingsId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "MtSettingsId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationRequestExtendedDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MachineTranslateResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/mappings/tasks/{id}:
    get:
      tags:
      - "Mapping"
      summary: "Returns mapping for taskId (mxliff)"
      description: ""
      operationId: "getMappingForTask"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "workflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "WorkflowLevel"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TaskMappingDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/importSettings:
    get:
      tags:
      - "Import settings"
      summary: "List import settings"
      description: ""
      operationId: "listImportSettings"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoImportSettingsReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Import settings"
      summary: "Create import settings"
      description: "Pre-defined import settings is handy for [Create Job](#operation/createJob).\n\
        \                  See [supported file types](https://wiki.memsource.com/wiki/API_File_Type_List)"
      operationId: "createImportSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ImportSettingsCreateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/ImportSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/importSettings/{uid}:
    get:
      tags:
      - "Import settings"
      summary: "Get import settings"
      description: ""
      operationId: "getImportSettings"
      produces:
      - "application/json"
      parameters:
      - name: "uid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Uid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ImportSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Import settings"
      summary: "Delete import settings"
      description: ""
      operationId: "deleteImportSettings"
      parameters:
      - name: "uid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Uid"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/importSettings/default:
    get:
      tags:
      - "Import settings"
      summary: "Get organization's default import settings"
      description: ""
      operationId: "getImportSettings_1"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ImportSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/plains/{conversationId}/comments:
    post:
      tags:
      - "Conversations"
      summary: "Add plain comment"
      description: ""
      operationId: "addPlainComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AddCommentDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/PlainConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/plains/{conversationId}:
    get:
      tags:
      - "Conversations"
      summary: "Get plain conversation"
      description: ""
      operationId: "getPlainConversation"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlainConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Conversations"
      summary: "Edit plain conversation"
      description: ""
      operationId: "updatePlainConversation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditPlainConversationDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlainConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Conversations"
      summary: "Delete plain conversation"
      description: ""
      operationId: "deletePlainConversation"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/plains:
    get:
      tags:
      - "Conversations"
      summary: "List plain conversations"
      description: ""
      operationId: "listPlainConversations"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "includeDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeDeleted"
        x-optionalDataType: "Bool"
      - name: "since"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Since"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlainConversationsListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Conversations"
      summary: "Create plain conversation"
      description: ""
      operationId: "createSegmentTargetConversation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreatePlainConversationDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/PlainConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/jobs/{jobUid}/conversations/plains/{conversationId}/comments/{commentId}:
    put:
      tags:
      - "Conversations"
      summary: "Edit plain comment"
      description: ""
      operationId: "updatePlainComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - name: "commentId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CommentId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AddCommentDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PlainConversationDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Conversations"
      summary: "Delete plain comment"
      description: ""
      operationId: "deletePlainComment"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "conversationId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConversationId"
      - name: "commentId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "CommentId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/qaSettings:
    get:
      tags:
      - "Project"
      summary: "Get quality assurance settings"
      description: ""
      operationId: "getProjectQASettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QASettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    put:
      tags:
      - "Project"
      summary: "Edit quality assurance settings"
      description: ""
      operationId: "editProjectQualityAssuranceSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditQASettingsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QASettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/importSettings:
    get:
      tags:
      - "Project"
      summary: "Get projects's default import settings"
      description: ""
      operationId: "getImportSettings_2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FileImportSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects:
    get:
      tags:
      - "Project"
      summary: "List projects"
      description: ""
      operationId: "listProjects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int64"
      - name: "clientName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ClientName"
        x-optionalDataType: "String"
      - name: "businessUnitName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "BusinessUnitName"
        x-optionalDataType: "String"
      - name: "statuses"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ASSIGNED"
          - "COMPLETED"
          - "ACCEPTED_BY_VENDOR"
          - "DECLINED_BY_VENDOR"
          - "COMPLETED_BY_VENDOR"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "Statuses"
      - name: "targetLangs"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TargetLangs"
      - name: "domainName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DomainName"
        x-optionalDataType: "String"
      - name: "subDomainName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SubDomainName"
        x-optionalDataType: "String"
      - name: "costCenterId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "CostCenterId"
        x-optionalDataType: "Int64"
      - name: "costCenterName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CostCenterName"
        x-optionalDataType: "String"
      - name: "dueInHours"
        in: "query"
        description: "-1 for projects that are overdue"
        required: false
        type: "integer"
        minimum: -1
        format: "int32"
        x-exportParamName: "DueInHours"
        x-optionalDataType: "Int32"
      - name: "createdInLastHours"
        in: "query"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
        x-exportParamName: "CreatedInLastHours"
        x-optionalDataType: "Int32"
      - name: "sourceLangs"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SourceLangs"
      - name: "ownerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "OwnerId"
        x-optionalDataType: "Int64"
      - name: "jobStatuses"
        in: "query"
        description: "Allowed for linguists only"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ACCEPTED"
          - "DECLINED"
          - "DELIVERED"
          - "EMAILED"
          - "COMPLETED"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "JobStatuses"
      - name: "jobStatusGroup"
        in: "query"
        description: "Allowed for linguists only"
        required: false
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "COMPLETED"
        x-exportParamName: "JobStatusGroup"
        x-optionalDataType: "String"
      - name: "buyerId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "BuyerId"
        x-optionalDataType: "Int64"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAbstractProjectDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Project"
      summary: "Create project"
      description: ""
      operationId: "createProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateProjectDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/AbstractProjectDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/assignableTemplates:
    get:
      tags:
      - "Project"
      - "Project Template"
      summary: "List assignable templates"
      description: ""
      operationId: "assignableTemplates"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AssignableTemplatesDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/applyTemplate/{templateId}/assignProviders:
    post:
      tags:
      - "Project"
      - "Project Template"
      summary: "Assigns providers from template"
      description: ""
      operationId: "assignLinguistsFromTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "templateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TemplateId"
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/applyTemplate/{templateId}/assignProviders/forJobParts:
    post:
      tags:
      - "Project"
      - "Project Template"
      summary: "Assigns providers from template (specific jobs)"
      description: ""
      operationId: "assignLinguistsFromTemplateToJobParts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "templateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TemplateId"
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartReferences"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/applyTemplate/{templateId}:
    post:
      tags:
      - "Project"
      - "Project Template"
      summary: "Create project from template"
      description: ""
      operationId: "createProjectFromTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "templateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TemplateId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateProjectFromTemplateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/AbstractProjectDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}:
    get:
      tags:
      - "Project"
      summary: "Get project"
      description: ""
      operationId: "getProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AbstractProjectDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project"
      summary: "Edit project"
      description: ""
      operationId: "editProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditProjectDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AbstractProjectDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Project"
      summary: "Delete project"
      description: ""
      operationId: "deleteProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "purge"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Purge"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/targetLangs:
    post:
      tags:
      - "Project"
      summary: "Add target languages"
      description: "Add target languages to project"
      operationId: "addTargetLanguageToProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AddTargetLangDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/workflowSteps:
    get:
      tags:
      - "Project"
      summary: "Get workflow steps"
      description: ""
      operationId: "getProjectWorkflowSteps"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectWorkflowStepListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Project"
      summary: "Add workflow steps"
      description: ""
      operationId: "addWorkflowSteps"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AddWorkflowStepsDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/assignVendor:
    post:
      tags:
      - "Project"
      summary: "Assign vendor"
      description: "\nTo unassign Vendor from Project, use empty body:\n```\n{}\n\
        ```\n    "
      operationId: "assignVendorToProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AssignVendorDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/clone:
    post:
      tags:
      - "Project"
      summary: "Clone project"
      description: ""
      operationId: "cloneProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CloneProjectDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/AbstractProjectDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/providers:
    get:
      tags:
      - "Project"
      - "Provider"
      summary: "List project providers"
      description: ""
      operationId: "getProjectAssignments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "providerName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ProviderName"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoProviderReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/setStatus:
    post:
      tags:
      - "Project"
      summary: "Edit project status"
      description: ""
      operationId: "setProjectStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SetProjectStatusDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/termBases:
    get:
      tags:
      - "Project"
      summary: "Get term bases"
      description: ""
      operationId: "getProjectTermBases"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTermBaseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project"
      summary: "Edit term bases"
      description: ""
      operationId: "setProjectTermBases"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SetTermBaseDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTermBaseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/accessSettings:
    get:
      tags:
      - "Project"
      summary: "Get access and security settings"
      description: ""
      operationId: "getProjectAccessSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectSecuritySettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project"
      summary: "Edit access and security settings"
      description: ""
      operationId: "editProjectAccessSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditProjectSecuritySettingsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectSecuritySettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/financialSettings:
    get:
      tags:
      - "Project"
      summary: "Get financial settings"
      description: ""
      operationId: "getFinancialSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FinancialSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project"
      summary: "Edit financial settings"
      description: ""
      operationId: "setFinancialSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SetFinancialSettingsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FinancialSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/qaSettingsChecks:
    get:
      tags:
      - "Project"
      summary: "Get QA checks"
      description: "Returns enabled quality assurance settings."
      operationId: "enabledQualityChecks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/EnabledQualityChecksDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/lqaSettings:
    get:
      tags:
      - "Project"
      summary: "Get LQA settings"
      description: ""
      operationId: "getProjectSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "workflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "WorkflowLevel"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LqaSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/analyses:
    get:
      tags:
      - "Project"
      - "Analysis"
      summary: "List analyses by project"
      description: ""
      operationId: "listByProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAnalyseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/mtSettings:
    get:
      tags:
      - "Project"
      summary: "Get machine translate settings"
      description: ""
      operationId: "getMtSettingsForProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MTSettingsPerLanguageListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project"
      summary: "Edit machine translate settings"
      description: "This will erase all mtSettings per language for project.\n   \
        \     To remove all machine translate settings from project call without a\
        \ machineTranslateSettings parameter."
      operationId: "setMtSettingsForProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditProjectMTSettingsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MTSettingsPerLanguageListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/quotes:
    get:
      tags:
      - "Project"
      summary: "List quotes"
      description: ""
      operationId: "getQuotesForProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoQuoteDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/mtSettingsPerLanguage:
    put:
      tags:
      - "Project"
      summary: "Edit machine translate settings per language"
      description: "This will erase mtSettings for project"
      operationId: "setMtSettingsPerLanguageForProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditProjectMTSettPerLangListDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MTSettingsPerLanguageListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/providers/suggest:
    post:
      tags:
      - "Project"
      - "Provider"
      summary: "Get suggested providers"
      description: ""
      operationId: "listProviders"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProviderListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/references:
    post:
      tags:
      - "Project"
      - "Project Reference File"
      summary: "Create project reference file"
      description: "Accepts application/octet-stream or application/json.<br>\n  \
        \                                                                  <b>application/json</b>\
        \ - Note will be converted to .txt.<br>\n                                \
        \                                    <b>application/octet-stream</b> - Content-Disposition\
        \ header is required"
      operationId: "createNoteRef"
      consumes:
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateReferenceFileNoteDto"
        x-exportParamName: "Body"
      - name: "Content-Disposition"
        in: "header"
        description: "<b>Required</b> for application/octet-stream.<br> Example: filename*=UTF-8''YourFileName.txt"
        required: false
        type: "string"
        x-exportParamName: "ContentDisposition"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/ReferenceFileReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/references/{referenceFileId}:
    get:
      tags:
      - "Project"
      - "Project Reference File"
      summary: "Get project reference"
      description: ""
      operationId: "downloadReference"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "referenceFileId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ReferenceFileId"
      responses:
        "200":
          description: "application/octet-stream"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/preTranslateSettings:
    get:
      tags:
      - "Project"
      summary: "Get Pre-translate settings"
      description: ""
      operationId: "getPreTranslateSettingsForProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PreTranslateSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/analyseSettings:
    get:
      tags:
      - "Project"
      summary: "Get analyse settings"
      description: ""
      operationId: "getAnalyseSettingsForProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyseSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/analyses:
    get:
      tags:
      - "Analysis"
      - "Job"
      summary: "List analyses"
      description: ""
      operationId: "listPartAnalyse"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAnalyseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/setStatus:
    post:
      tags:
      - "Job"
      summary: "Edit job status"
      description: ""
      operationId: "setStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobStatusChangeActionDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}:
    get:
      tags:
      - "Job"
      summary: "Get job"
      description: ""
      operationId: "getPart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartExtendedDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Job"
      summary: "Edit job"
      description: ""
      operationId: "editPart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartUpdateSingleDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartExtendedDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/webEditor:
    post:
      tags:
      - "Job"
      summary: "Get Web Editor URL"
      description: "\nPossible warning codes are: \n  - `NOT_ACCEPTED_BY_LINGUIST`\
        \ - Job is not accepted by linguist \n  - `NOT_ASSIGNED_TO_LINGUIST` - Job\
        \ is not assigned to linguist \n  - `PDF` - One of requested jobs is PDF\n\
        \  - `PREVIOUS_WORKFLOW_NOT_COMPLETED` - Previous workflow step is not completed\
        \ \n  - `PREVIOUS_WORKFLOW_NOT_COMPLETED_STRICT` - Previous workflow step\
        \ is not completed and project has strictWorkflowFinish set to true\n\nPossible\
        \ error codes are: \n  - `ASSIGNED_TO_OTHER_USER` - Job is accepted by other\
        \ user \n  - `NOT_UNIQUE_TARGET_LANG` - Requested jobs contains different\
        \ target locales \n  - `TOO_MANY_SEGMENTS` - Count of requested job's segments\
        \ is higher than **40000**\n  \nWarning response example:\n```\n{\n    \"\
        warnings\": [\n        {\n            \"message\": \"Not accepted by linguist\"\
        ,\n            \"args\": {\n                \"jobs\": [\n                \
        \    \"abcd1234\"\n                ]\n            },\n            \"code\"\
        : \"NOT_ACCEPTED_BY_LINGUIST\"\n        },\n        {\n            \"message\"\
        : \"Previous workflow step not completed\",\n            \"args\": {\n   \
        \             \"jobs\": [\n                    \"abcd1234\"\n            \
        \    ]\n            },\n            \"code\": \"PREVIOUS_WORKFLOW_NOT_COMPLETED\"\
        \n        }\n    ],\n    \"url\": \"/web/job/abcd1234-efgh5678/translate\"\
        \n}\n```\n\nError response example:\nStatus: `400 Bad Request`\n```\n{\n \
        \   \"errorCode\": \"NOT_UNIQUE_TARGET_LANG\",\n    \"errorDescription\":\
        \ \"Only files with identical target languages can be joined\",\n    \"errorDetails\"\
        : [\n        {\n            \"code\": \"NOT_UNIQUE_TARGET_LANG\",\n      \
        \      \"args\": {\n                \"targetLocales\": [\n               \
        \     \"de\",\n                    \"en\"\n                ]\n           \
        \ },\n            \"message\": \"Only files with identical target languages\
        \ can be joined\"\n        },\n        {\n            \"code\": \"TOO_MANY_SEGMENTS\"\
        ,\n            \"args\": {\n                \"maxSegments\": 40000,\n    \
        \            \"segments\": 400009\n            },\n            \"message\"\
        : \"Up to 40000 segments can be opened in the Memsource Web Editor, job has\
        \ 400009 segments\"\n        }\n    ]\n}\n```\n"
      operationId: "webEditorLink"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateWebEditorLinkDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebEditorLinkDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/providers/suggest:
    post:
      tags:
      - "Provider"
      - "Job"
      summary: "Get suggested providers"
      description: ""
      operationId: "listProviders_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProviderListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/statusChanges:
    get:
      tags:
      - "Job"
      summary: "Get status changes"
      description: ""
      operationId: "statusChanges"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartStatusChangesDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/pseudoTranslate:
    post:
      tags:
      - "Job"
      summary: "Pseudo-translates job"
      description: ""
      operationId: "pseudoTranslateJobPart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PseudoTranslateActionDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/pseudoTranslate:
    post:
      tags:
      - "Job"
      summary: "Pseudo-translate job"
      description: ""
      operationId: "pseudoTranslate"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartReadyReferences"
        x-exportParamName: "Body"
      - name: "replacement"
        in: "query"
        required: false
        type: "string"
        default: "$"
        x-exportParamName: "Replacement"
        x-optionalDataType: "String"
      - name: "prefix"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Prefix"
        x-optionalDataType: "String"
      - name: "suffix"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Suffix"
        x-optionalDataType: "String"
      - name: "length"
        in: "query"
        required: false
        type: "number"
        default: 1
        format: "double"
        x-exportParamName: "Length"
        x-optionalDataType: "Float64"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/translationResources:
    get:
      tags:
      - "Job"
      - "Machine Translation Settings"
      - "Term Base"
      - "Translation Memory"
      summary: "Get translation resources"
      description: ""
      operationId: "getTranslationResources"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TranslationResourcesDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/segments:
    get:
      tags:
      - "Job"
      - "Segment"
      summary: "Get segments"
      description: ""
      operationId: "listSegments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "beginIndex"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "BeginIndex"
        x-optionalDataType: "Int32"
      - name: "endIndex"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "EndIndex"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SegmentListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/original:
    get:
      tags:
      - "Job"
      summary: "Download original file"
      description: ""
      operationId: "getOriginalFile"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "application/octet-stream"
          headers:
            Content-Disposition:
              type: "string"
              description: "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/preview:
    get:
      tags:
      - "Job"
      summary: "Download preview file"
      description: ""
      operationId: "filePreviewJob"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "application/octet-stream"
          headers:
            Content-Disposition:
              type: "string"
              description: "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Job"
      summary: "Download preview file"
      description: "Takes bilingual file (.mxliff only) as argument. If not passed,\
        \ data will be taken from database"
      operationId: "filePreview"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "application/octet-stream"
          headers:
            Content-Disposition:
              type: "string"
              description: "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/targetFile:
    get:
      tags:
      - "Job"
      summary: "Download target file"
      description: "This call will return target file with translation. This means\
        \ even for other jobs that were created via 'split jobs' etc."
      operationId: "completedFile"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "ORIGINAL"
        enum:
        - "ORIGINAL"
        - "PDF"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "application/octet-stream"
          headers:
            Content-Disposition:
              type: "string"
              description: "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/targetFileWarnings:
    get:
      tags:
      - "Job"
      summary: "Get target file's warnings"
      description: "\nThis call will return target file's warnings. This means even\
        \ for other jobs that were created via 'split jobs' etc.\n"
      operationId: "getCompletedFileWarnings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TargetFileWarningsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/previewUrl:
    get:
      tags:
      - "Job"
      summary: "Get PDF preview"
      description: ""
      operationId: "previewUrls"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "workflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "WorkflowLevel"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PreviewUrlsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs:
    get:
      tags:
      - "Job"
      summary: "List jobs"
      description: ""
      operationId: "listParts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "count"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Count"
        x-optionalDataType: "Bool"
      - name: "workflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "WorkflowLevel"
        x-optionalDataType: "Int32"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ACCEPTED"
          - "DECLINED"
          - "REJECTED"
          - "DELIVERED"
          - "EMAILED"
          - "COMPLETED"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "Status"
      - name: "assignedLinguist"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AssignedLinguist"
        x-optionalDataType: "Int64"
      - name: "dueInHours"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DueInHours"
        x-optionalDataType: "Int32"
      - name: "filename"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filename"
        x-optionalDataType: "String"
      - name: "targetLang"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TargetLang"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoJobPartReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    post:
      tags:
      - "Job"
      summary: "Create job"
      description: "\nJob file can be provided directly in the message body or downloaded\
        \ from connector. \n\nPlease supply job metadata in `Memsource` header. \n\
        \nFor file in the request body provide also the filename in `Content-Disposition`\
        \ header.\n\nAccepted metadata: \n\n  - `targetLangs` - **required**\n  -\
        \ `due` - ISO 8601\n  - `workflowSettings` - project with workflow - see examples\
        \ bellow\n  - `assignments` - project without workflows - see examples bellow\n\
        \  - `importSettings` - re-usable import settings - see [Create import settings](#operation/createImportSettings)\n\
        \  - `useProjectFileImportSettings` - mutually exclusive with importSettings\n\
        \  - `callbackUrl` - consumer callback\n  - `path` - original destination\
        \ directory\n  \n  for remote file jobs also `remoteFile` - see examples bellow:\n\
        \  - `connectorToken` - remote connector token\n  - `remoteFolder` \n  - `remoteFileName`\n\
        \  - `continuous` - true for continuous job\n\nCreate and assign job in project\
        \ without workflow step:\n```\n\n{\n  \"targetLangs\": [\n    \"cs_cz\"\n\
        \  ],\n  \"callbackUrl\": \"https://my-shiny-service.com/consumeCallback\"\
        ,\n  \"importSettings\": {\n    \"uid\": \"abcd123\"\n  },\n  \"due\": \"\
        2007-12-03T10:15:30.00Z\",\n  \"path\": \"destination directory\",\n  \"assignments\"\
        : [\n    {\n      \"targetLang\": \"cs_cz\",\n      \"providers\": [\n   \
        \     {\n          \"id\": \"4321\",\n          \"type\": \"USER\"\n     \
        \   }\n      ]\n    }\n  ],\n  \"notifyProvider\": {\n    \"organizationEmailTemplate\"\
        : {\n      \"id\": \"39\"\n    },\n    \"notificationIntervalInMinutes\":\
        \ \"10\"\n  }\n}\n```\n\nCreate job from remote file without workflow steps:\n\
        ```\n\n{\n  \"remoteFile\": {\n    \"connectorToken\": \"948123ef-e1ef-4cd3-a90e-af1617848af3\"\
        ,\n    \"remoteFolder\": \"/\",\n    \"remoteFileName\": \"Few words.docx\"\
        ,\n    \"continuous\": false\n  },\n  \"assignments\": [],\n  \"workflowSettings\"\
        : [],\n  \"targetLangs\": [\n    \"cs\"\n  ]\n}\n```\n\nCreate and assign\
        \ job in project with workflow step:\n```\n\n{\n  \"targetLangs\": [\n   \
        \ \"de\"\n  ],\n  \"useProjectFileImportSettings\": \"true\",\n  \"workflowSettings\"\
        : [\n    {\n      \"id\": \"64\",\n      \"due\": \"2007-12-03T10:15:30.00Z\"\
        ,\n      \"assignments\": [\n        {\n          \"targetLang\": \"de\",\n\
        \          \"providers\": [\n            {\n              \"id\": \"3\",\n\
        \              \"type\": \"VENDOR\"\n            }\n          ]\n        }\n\
        \      ],\n      \"notifyProvider\": {\n        \"organizationEmailTemplate\"\
        : {\n          \"id\": \"39\"\n        },\n        \"notificationIntervalInMinutes\"\
        : \"10\"\n      }\n    }\n  ]\n}\n```\n    "
      operationId: "createJob"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "Memsource"
        in: "header"
        required: false
        type: "string"
        format: "application/json"
        x-exportParamName: "Memsource"
        x-optionalDataType: "String"
      - name: "Content-Disposition"
        in: "header"
        description: "must match pattern `((inline|attachment); )?(filename\\*=UTF-8''(.+)|filename=\"\
          ?(.+)\"?)`"
        required: false
        type: "string"
        x-exportParamName: "ContentDisposition"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/JobListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/batch:
    put:
      tags:
      - "Job"
      summary: "Edit jobs (batch)"
      description: "\nReturns only jobs which were updated by the batch operation.\n"
      operationId: "editParts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartUpdateBatchDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Job"
      summary: "Delete job (batch)"
      description: ""
      operationId: "deleteParts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartReferences"
        x-exportParamName: "Body"
      - name: "purge"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Purge"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/preTranslate:
    post:
      tags:
      - "Translation"
      summary: "Pre-translate job"
      description: ""
      operationId: "preTranslate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PreTranslateJobsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncRequestWrapperDto"
        "202":
          description: "Accepted"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/humanTranslate:
    post:
      tags:
      - "Translation"
      summary: "Human translate (Gengo or Unbabel)"
      description: ""
      operationId: "humanTranslate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/HumanTranslateJobsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncRequestWrapperDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/notifyAssigned:
    post:
      tags:
      - "Job"
      summary: "Notify assigned users"
      description: ""
      operationId: "notifyAssigned"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/NotifyJobPartsRequestDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/compare:
    post:
      tags:
      - "Job"
      summary: "Compare jobs on workflow levels"
      description: ""
      operationId: "comparePart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartReadyReferences"
        x-exportParamName: "Body"
      - name: "atWorkflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "AtWorkflowLevel"
        x-optionalDataType: "Int32"
      - name: "withWorkflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "WithWorkflowLevel"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ComparedSegmentsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/bilingualFile:
    post:
      tags:
      - "Job"
      - "Bilingual File"
      summary: "Download bilingual file"
      description: ""
      operationId: "getBilingualFile"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartReadyReferences"
        x-exportParamName: "Body"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "MXLF"
        enum:
        - "MXLF"
        - "DOCX"
        - "XLIFF"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "application/octet-stream"
          headers:
            Content-Disposition:
              type: "string"
              description: "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/translations:
    delete:
      tags:
      - "Job"
      summary: "Delete all translations"
      description: ""
      operationId: "deleteAllTranslations"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartReadyReferences"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/ignoreChecks:
    post:
      tags:
      - "Quality Assurance"
      summary: "Edit ignored checks"
      description: ""
      operationId: "updateIgnoredChecks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UpdateIgnoredChecksDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/ignoredWarnings:
    post:
      tags:
      - "Quality Assurance"
      summary: "Add ignored warnings"
      description: ""
      operationId: "addIgnoredWarnings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UpdateIgnoredWarningsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UpdateIgnoredWarningsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Quality Assurance"
      summary: "Delete ignored warnings"
      description: ""
      operationId: "deleteIgnoredWarnings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UpdateIgnoredWarningsDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance"
      description: ""
      operationId: "runQaForJobPart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceRunDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/jobs/qualityAssurances/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance (batch)"
      description: ""
      operationId: "runQaForJobParts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceBatchRunDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/workflowStep:
    get:
      tags:
      - "Job"
      summary: "Get job's workflowStep"
      description: ""
      operationId: "getPartsWorkflowStep"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectWorkflowStepDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/search:
    post:
      tags:
      - "Job"
      summary: "Search jobs in project"
      description: ""
      operationId: "searchPartsInProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchJobsRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchJobsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/segmentsCount:
    post:
      tags:
      - "Job"
      - "Segment"
      summary: "Get segments count"
      description: "Provides segments count (progress data)"
      operationId: "getSegmentsCount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/JobPartReadyReferences"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SegmentsCountsResponseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/split:
    post:
      tags:
      - "Job"
      summary: "Split job"
      description: "\nSplits job by one of the following methods:\n* **After specific\
        \ segments** - fill in `segmentOrdinals`\n* **Into X parts** - fill in `partCount`\
        \ \n* **Into parts with specific size** - fill in `partSize`. partSize represents\
        \ segment count in each part.\n* **Into parts with specific word count** -\
        \ fill in `wordCount`  \n* **By document parts** - fill in `byDocumentParts`,\
        \ works only with **PowerPoint** files \n\nOnly one option at a time is allowed."
      operationId: "split"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SplitJobActionDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobPartsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projectTemplates:
    get:
      tags:
      - "Project Template"
      summary: "List project templates"
      description: ""
      operationId: "getProjectTemplates"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int64"
      - name: "clientName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ClientName"
        x-optionalDataType: "String"
      - name: "ownerUid"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "OwnerUid"
        x-optionalDataType: "String"
      - name: "domainName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DomainName"
        x-optionalDataType: "String"
      - name: "subDomainName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SubDomainName"
        x-optionalDataType: "String"
      - name: "costCenterId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "CostCenterId"
        x-optionalDataType: "Int64"
      - name: "costCenterName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "CostCenterName"
        x-optionalDataType: "String"
      - name: "businessUnitName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "BusinessUnitName"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoProjectTemplateReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Project Template"
      summary: "Create project template"
      description: ""
      operationId: "createProjectTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ProjectTemplateCreateActionDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/ProjectTemplateDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projectTemplates/{projectTemplateId}:
    get:
      tags:
      - "Project Template"
      summary: "Get project template"
      description: ""
      operationId: "getProjectTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectTemplateId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTemplateDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project Template"
      summary: "Edit project template"
      description: ""
      operationId: "editProjectTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectTemplateId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ProjectTemplateEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "Edited"
          schema:
            $ref: "#/definitions/ProjectTemplateDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Project Template"
      summary: "Delete project template"
      description: ""
      operationId: "deleteProjectTemplate"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectTemplateId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projectTemplates/{projectTemplateId}/analyseSettings:
    get:
      tags:
      - "Project Template"
      summary: "Get analyse settings"
      description: ""
      operationId: "getAnalyseSettingsForProjectTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectTemplateId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyseSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projectTemplates/{projectTemplateId}/preTranslateSettings:
    get:
      tags:
      - "Project Template"
      summary: "Get Pre-translate settings"
      description: ""
      operationId: "getPreTranslateSettingsForProjectTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectTemplateId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PreTranslateSettingsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projectTemplates/{projectTemplateId}/mtSettings:
    get:
      tags:
      - "Project Template"
      - "Machine Translation Settings"
      summary: "Get machine translate settings"
      description: ""
      operationId: "getMachineTranslateSettingsForProjectTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectTemplateId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MTSettingsPerLanguageListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projectTemplates/{projectTemplateId}/termBases:
    get:
      tags:
      - "Project Template"
      - "Term Base"
      summary: "Get term bases"
      description: ""
      operationId: "getProjectTemplateTermBases"
      produces:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectTemplateId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTemplateTermBaseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project Template"
      - "Term Base"
      summary: "Edit term bases in project template"
      description: ""
      operationId: "setProjectTemplateTermBases"
      consumes:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectTemplateId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SetProjectTemplateTermBaseDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTemplateTermBaseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projectTemplates/{projectTemplateId}/transMemories:
    get:
      tags:
      - "Project Template"
      - "Translation Memory"
      summary: "Get translation memories"
      description: ""
      operationId: "getProjectTemplateTransMemories"
      produces:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectTemplateId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTemplateTransMemoryListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project Template"
      - "Translation Memory"
      summary: "Edit translation memories"
      description: ""
      operationId: "setProjectTemplateTransMemories"
      consumes:
      - "application/json"
      parameters:
      - name: "projectTemplateId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectTemplateId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SetProjectTemplateTransMemoriesDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTemplateTransMemoryListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/termBases/searchByJob:
    post:
      tags:
      - "Term Base"
      - "Job"
      summary: "Search job's term bases"
      description: "Search all read term bases assigned to the job"
      operationId: "searchTermsByJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTBByJobRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTbDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/termBases/createByJob:
    post:
      tags:
      - "Term Base"
      - "Job"
      summary: "Create term in job's term bases"
      description: "Create new term in the write term base assigned to the job"
      operationId: "createTermByJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateTermsDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TermPairDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/termBases/searchInTextByJob:
    post:
      tags:
      - "Term Base"
      - "Job"
      summary: "Search terms in text"
      description: "Search in text in all read term bases assigned to the job"
      operationId: "searchTermsInTextByJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchInTextByJobRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchInTextResponseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/transMemories:
    get:
      tags:
      - "Project"
      summary: "Get translation memories"
      description: ""
      operationId: "getProjectTransMemories"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTransMemoryListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project"
      summary: "Edit translation memories"
      description: ""
      operationId: "setProjectTransMemories"
      consumes:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SetProjectTransMemoriesDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTransMemoryListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/projects/{projectUid}/transMemories/searchSegmentInProject:
    post:
      tags:
      - "Project"
      - "Translation Memory"
      summary: "Search translation memory for segment in the project"
      description: "Returns at most <i>maxSegments</i>\n            records with <i>score\
        \ >= scoreThreshold</i> and at most <i>maxSubsegments</i> records which are\
        \ subsegment,\n            i.e. the source text is substring of the query\
        \ text."
      operationId: "searchSegment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTMRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/quotes/{quoteId}:
    get:
      tags:
      - "Quote"
      summary: "Get quote"
      description: ""
      operationId: "get_1"
      produces:
      - "application/json"
      parameters:
      - name: "quoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "QuoteId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QuoteDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Quote"
      summary: "Delete quote"
      description: ""
      operationId: "deleteQuote"
      parameters:
      - name: "quoteId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "QuoteId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/quotes:
    post:
      tags:
      - "Quote"
      summary: "Create quote"
      description: ""
      operationId: "createQuote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QuoteCreateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QuoteDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/scim/ServiceProviderConfig:
    get:
      tags:
      - "SCIM"
      summary: "Retrieve the Service Provider's Configuration"
      description: ""
      operationId: "getServiceProviderConfigDto"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ServiceProviderConfigDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/scim/Schemas:
    get:
      tags:
      - "SCIM"
      summary: "Get supported SCIM Schemas"
      description: ""
      operationId: "getSchemas"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScimResourceSchema"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/scim/Schemas/{schemaUrn}:
    get:
      tags:
      - "SCIM"
      summary: "Get supported SCIM Schema by urn"
      description: ""
      operationId: "getSchemaByUrn"
      produces:
      - "application/json"
      parameters:
      - name: "schemaUrn"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SchemaUrn"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScimResourceSchema"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/scim/ResourceTypes:
    get:
      tags:
      - "SCIM"
      summary: "List the types of SCIM Resources available"
      description: ""
      operationId: "getResourceTypes"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScimResourceTypeSchema"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/scim/Users/{userId}:
    get:
      tags:
      - "SCIM"
      summary: "Get user"
      description: ""
      operationId: "getScimUser"
      produces:
      - "application/json"
      - "application/scim+json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
        x-optionalDataType: "String"
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScimUserCoreDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "SCIM"
      summary: "Edit user using SCIM"
      description: ""
      operationId: "editUser"
      consumes:
      - "application/json"
      - "application/scim+json"
      produces:
      - "application/json"
      - "application/scim+json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ScimUserCoreDto"
        x-exportParamName: "Body"
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
        x-optionalDataType: "String"
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Updated"
          schema:
            $ref: "#/definitions/ScimUserCoreDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "SCIM"
      summary: "Delete user using SCIM"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      - "application/scim+json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
        x-optionalDataType: "String"
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    patch:
      tags:
      - "SCIM"
      summary: "Patch user using SCIM"
      description: ""
      operationId: "patchUser"
      produces:
      - "application/json"
      - "application/scim+json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-exportParamName: "Body"
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
        x-optionalDataType: "String"
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "Patched"
          schema:
            $ref: "#/definitions/ScimUserCoreDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/scim/Users:
    get:
      tags:
      - "SCIM"
      summary: "Search users"
      description: "\nThis operation supports <a href=\"http://ldapwiki.com/wiki/SCIM%20Filtering\"\
        \ target=\"_blank\">SCIM Filter</a>, \n<a href=\"http://ldapwiki.com/wiki/SCIM%20Search%20Request\"\
        \ target=\"_blank\">SCIM attributes</a> and \n<a href=\"http://ldapwiki.com/wiki/SCIM%20Sorting\"\
        \ target=\"_blank\">SCIM sort</a>\n\nSupported attributes:\n  - `id`\n  -\
        \ `active`\n  - `userName`\n  - `name.givenName`\n  - `name.familyName`\n\
        \  - `emails.value`\n  - `meta.created`\n"
      operationId: "searchUsers"
      produces:
      - "application/json"
      - "application/scim+json"
      parameters:
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
        x-optionalDataType: "String"
      - name: "filter"
        in: "query"
        description: "See method description"
        required: false
        type: "string"
        x-exportParamName: "Filter"
        x-optionalDataType: "String"
      - name: "attributes"
        in: "query"
        description: "See method description"
        required: false
        type: "string"
        x-exportParamName: "Attributes"
        x-optionalDataType: "String"
      - name: "sortBy"
        in: "query"
        description: "See method description"
        required: false
        type: "string"
        x-exportParamName: "SortBy"
        x-optionalDataType: "String"
      - name: "sortOrder"
        in: "query"
        description: "See method description"
        required: false
        type: "string"
        default: "ascending"
        enum:
        - "ascending"
        - "descending"
        x-exportParamName: "SortOrder"
        x-optionalDataType: "String"
      - name: "startIndex"
        in: "query"
        description: "The 1-based index of the first search result. Default 1"
        required: false
        type: "integer"
        default: 1
        minimum: 1
        format: "int32"
        x-exportParamName: "StartIndex"
        x-optionalDataType: "Int32"
      - name: "count"
        in: "query"
        description: "Non-negative Integer. Specifies the desired maximum number of\
          \ search results per page; e.g., 10."
        required: false
        type: "integer"
        default: 50
        maximum: 100
        minimum: 0
        format: "int32"
        x-exportParamName: "Count"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ScimResourceDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "SCIM"
      summary: "Create user using SCIM"
      description: "\nSupported schema: `\"urn:ietf:params:scim:schemas:core:2.0:User\"\
        `\n\nCreate active user:\n```\n{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\
        \n    ],\n    \"active\": true,\n    \"userName\": \"john.doe\",\n    \"emails\"\
        : [\n        {\n            \"primary\": true,\n            \"value\": \"\
        john.doe@example.com\",\n            \"type\": \"work\"\n        }\n    ],\n\
        \    \"name\": {\n        \"givenName\": \"John\",\n        \"familyName\"\
        : \"Doe\"\n    }\n}\n```\n"
      operationId: "createUserSCIM"
      consumes:
      - "application/json"
      - "application/scim+json"
      produces:
      - "application/json"
      - "application/scim+json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ScimUserCoreDto"
        x-exportParamName: "Body"
      - name: "Authorization"
        in: "header"
        required: false
        type: "string"
        x-exportParamName: "Authorization"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/ScimUserCoreDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/segmentationRules:
    get:
      tags:
      - "Segmentation Rules"
      summary: "List segmentation rules"
      description: ""
      operationId: "getListOfSegmentationRules"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoSegmentationRuleReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Segmentation Rules"
      summary: "Create segmentation rule"
      description: "Creates new Segmentation Rule with file and segRule JSON Object\
        \ as header parameter. The same object is used for GET action."
      operationId: "createSegmentationRule"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "streamed file"
        required: true
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      - name: "segRule"
        in: "header"
        required: true
        type: "string"
        maxLength: 255
        minLength: 0
        format: "application/json: {name:'name', locale:'en', primary:'false', filename:'extra_file.xml'}"
        x-example: "{name:'name', locale:'en', primary:'false', filename:'extra_file.xml'}"
        x-exportParamName: "SegRule"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/SegmentationRuleDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/segmentationRules/{segRuleId}:
    get:
      tags:
      - "Segmentation Rules"
      summary: "Get segmentation rule"
      description: ""
      operationId: "getSegmentationRule"
      produces:
      - "application/json"
      parameters:
      - name: "segRuleId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SegRuleId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SegmentationRuleDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Segmentation Rules"
      summary: "Edit segmentation rule"
      description: ""
      operationId: "updatesSegmentationRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditSegmentationRuleDto"
        x-exportParamName: "Body"
      - name: "segRuleId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SegRuleId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SegmentationRuleDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Segmentation Rules"
      summary: "Delete segmentation rule"
      description: ""
      operationId: "deletesSegmentationRule"
      consumes:
      - "application/json"
      parameters:
      - name: "segRuleId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SegRuleId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/spellCheck/suggest:
    post:
      tags:
      - "Spell Check"
      summary: "Suggest a word"
      description: "Spell check suggest using the users's spell check dictionary"
      operationId: "suggest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SuggestRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SuggestResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/spellCheck/check/{jobUid}:
    post:
      tags:
      - "Spell Check"
      summary: "Spell check for job"
      description: "Spell check using the settings from the project of the job"
      operationId: "checkByJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SpellCheckRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SpellCheckResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/spellCheck/words:
    post:
      tags:
      - "Spell Check"
      summary: "Add word to dictionary"
      description: ""
      operationId: "addWord"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/DictionaryItemDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/spellCheck/check:
    post:
      tags:
      - "Spell Check"
      summary: "Spell check"
      description: "Spell check using the settings of the user's organization"
      operationId: "check"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SpellCheckRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SpellCheckResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/subDomains:
    get:
      tags:
      - "SubDomain"
      summary: "List subdomains"
      description: ""
      operationId: "listSubDomains"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoSubDomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "SubDomain"
      summary: "Create subdomain"
      description: ""
      operationId: "createSubDomain"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SubDomainEditDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/SubDomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/subDomains/{subDomainId}:
    get:
      tags:
      - "SubDomain"
      summary: "Get subdomain"
      description: ""
      operationId: "getSubDomain"
      produces:
      - "application/json"
      parameters:
      - name: "subDomainId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SubDomainId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubDomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "SubDomain"
      summary: "Edit subdomain"
      description: ""
      operationId: "updateSubDomain"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subDomainId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SubDomainId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SubDomainEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubDomainDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "SubDomain"
      summary: "Delete subdomain"
      description: ""
      operationId: "deleteSubDomain"
      parameters:
      - name: "subDomainId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "SubDomainId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}:
    get:
      tags:
      - "Term Base"
      summary: "Get term base"
      description: ""
      operationId: "getTermBase"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TermBaseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Term Base"
      summary: "Edit term base"
      description: "It is possible to add new languages only"
      operationId: "updateTermBase"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TermBaseEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TermBaseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Term Base"
      summary: "Delete term base"
      description: ""
      operationId: "deleteTermBase"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "purge"
        in: "query"
        description: "purge=false - the Termbase is can later be restored, \n    \
          \                \"purge=true - the Termbase is completely deleted and cannot\
          \ be restored"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Purge"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases:
    get:
      tags:
      - "Term Base"
      summary: "List term bases"
      description: ""
      operationId: "listTermBases"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "lang"
        in: "query"
        description: "Language of the term base"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Lang"
      - name: "clientId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ClientId"
        x-optionalDataType: "String"
      - name: "domainId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DomainId"
        x-optionalDataType: "String"
      - name: "subDomainId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SubDomainId"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoTermBaseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Term Base"
      summary: "Create term base"
      description: ""
      operationId: "createTermBase"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TermBaseEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "Created"
          schema:
            $ref: "#/definitions/TermBaseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/upload:
    post:
      tags:
      - "Term Base"
      summary: "Upload term base"
      description: "\nTerms can be imported from XLS/XLSX and TBX file formats into\
        \ a term base.\nSee <a target=\"_blank\" href=\"https://help.memsource.com/hc/en-us/articles/115003681851-Term-Bases\"\
        >Memsource Wiki</a>\n"
      operationId: "importTermBase"
      consumes:
      - "application/octet-stream"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      - name: "Content-Disposition"
        in: "header"
        description: "must match pattern `((inline|attachment); )?filename\\*=UTF-8''(.+)`"
        required: true
        type: "string"
        x-exportParamName: "ContentDisposition"
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "charset"
        in: "query"
        required: false
        type: "string"
        default: "UTF-8"
        x-exportParamName: "Charset"
        x-optionalDataType: "String"
      - name: "strictLangMatching"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "StrictLangMatching"
        x-optionalDataType: "Bool"
      - name: "updateTerms"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "UpdateTerms"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ImportResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/terms:
    post:
      tags:
      - "Term Base"
      summary: "Create term"
      description: "Set conceptId to assign the term to an existing concept, otherwise\
        \ a new concept will be created."
      operationId: "createTerm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TermCreateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/TermDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Term Base"
      summary: "Clear term base"
      description: "Deletes all terms"
      operationId: "clearTermBase"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/terms/{termId}:
    get:
      tags:
      - "Term Base"
      summary: "Get term"
      description: ""
      operationId: "getTerm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "termId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TermId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TermDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Term Base"
      summary: "Edit term"
      description: ""
      operationId: "updateTerm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "termId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TermId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TermEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TermDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Term Base"
      summary: "Delete term"
      description: ""
      operationId: "deleteTerm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "termId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TermId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/concepts/{conceptId}:
    delete:
      tags:
      - "Term Base"
      summary: "Delete concept"
      description: ""
      operationId: "deleteConcept"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "conceptId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConceptId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/concepts:
    delete:
      tags:
      - "Term Base"
      summary: "Delete concepts"
      description: ""
      operationId: "deleteConcepts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ConceptListReference"
        x-exportParamName: "Body"
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/concepts/{conceptId}/terms:
    get:
      tags:
      - "Term Base"
      summary: "Get terms of concept"
      description: ""
      operationId: "listTermsOfConcept"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "conceptId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ConceptId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConceptDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/lastBackgroundTask:
    get:
      tags:
      - "Term Base"
      summary: "Last import status"
      description: ""
      operationId: "getLastBackgroundTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BackgroundTasksTbDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/browse:
    post:
      tags:
      - "Term Base"
      summary: "Browse term base"
      description: ""
      operationId: "browseTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BrowseRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BrowseResponseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/search:
    post:
      tags:
      - "Term Base"
      summary: "Search term base"
      description: ""
      operationId: "searchTerms"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TermBaseSearchRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTbDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/export:
    get:
      tags:
      - "Term Base"
      summary: "Export term base"
      description: ""
      operationId: "exportTermBase"
      consumes:
      - "application/json"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "Tbx"
        enum:
        - "Tbx"
        - "Xlsx"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "charset"
        in: "query"
        required: false
        type: "string"
        default: "UTF-8"
        x-exportParamName: "Charset"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "application/octet-stream"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/termBases/{termBaseId}/metadata:
    get:
      tags:
      - "Term Base"
      summary: "Get term base metadata"
      description: ""
      operationId: "getTermBaseMetadata"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "termBaseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TermBaseId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MetadataTbDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/export:
    get:
      tags:
      - "Translation Memory"
      summary: "Export translation memory"
      description: ""
      operationId: "export"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "TMX"
        enum:
        - "TMX"
        - "XLSX"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      - name: "targetLang"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TargetLang"
      responses:
        "200":
          description: "application/octet-stream"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/transMemories/{transMemoryId}/lastBackgroundTask:
    get:
      tags:
      - "Translation Memory"
      summary: "Get last task information"
      description: ""
      operationId: "getBackgroundTasks"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BackgroundTasksTmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/metadata:
    get:
      tags:
      - "Translation Memory"
      summary: "Get translation memory metadata"
      description: ""
      operationId: "getMetadata"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - name: "byLanguage"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ByLanguage"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MetadataResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}:
    get:
      tags:
      - "Translation Memory"
      summary: "Get translation memory"
      description: ""
      operationId: "getTransMemory"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransMemoryDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Translation Memory"
      summary: "Edit translation memory"
      description: ""
      operationId: "editTransMemory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TransMemoryEditDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TransMemoryDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Translation Memory"
      summary: "Delete translation memory"
      description: ""
      operationId: "deleteTransMemory"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - name: "purge"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Purge"
        x-optionalDataType: "Bool"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories:
    get:
      tags:
      - "Translation Memory"
      summary: "List translation memories"
      description: ""
      operationId: "listTransMemories"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "sourceLang"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SourceLang"
        x-optionalDataType: "String"
      - name: "targetLang"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TargetLang"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ClientId"
        x-optionalDataType: "String"
      - name: "domainId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DomainId"
        x-optionalDataType: "String"
      - name: "subDomainId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "SubDomainId"
        x-optionalDataType: "String"
      - name: "businessUnitId"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "BusinessUnitId"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoTransMemoryDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Translation Memory"
      summary: "Create translation memory"
      description: ""
      operationId: "createTransMemory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TransMemoryCreateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/TransMemoryDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/targetLanguages:
    post:
      tags:
      - "Translation Memory"
      summary: "Add target language to translation memory"
      description: ""
      operationId: "addTargetLangToTransMemory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TargetLanguageDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/TransMemoryDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/segments:
    post:
      tags:
      - "Translation Memory"
      summary: "Insert segment"
      description: ""
      operationId: "insertToTransMemory"
      consumes:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SegmentDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Translation Memory"
      summary: "Delete all segments"
      description: ""
      operationId: "clearTransMemory"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/relatedProjects:
    get:
      tags:
      - "Translation Memory"
      summary: "List related projects"
      description: ""
      operationId: "getRelatedProjects"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAbstractProjectDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/import:
    post:
      tags:
      - "Translation Memory"
      summary: "Import segments"
      description: ""
      operationId: "importTransMemory"
      consumes:
      - "application/octet-stream"
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InputStream"
        x-exportParamName: "Body"
      - name: "Content-Disposition"
        in: "header"
        description: "must match pattern `((inline|attachment); )?filename\\*=UTF-8''(.+)`"
        required: true
        type: "string"
        x-exportParamName: "ContentDisposition"
      - name: "strictLangMatching"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "StrictLangMatching"
        x-optionalDataType: "Bool"
      - name: "stripNativeCodes"
        in: "query"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "StripNativeCodes"
        x-optionalDataType: "Bool"
      - name: "excludeNotConfirmedSegments"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "ExcludeNotConfirmedSegments"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ImportResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/segments/{segmentId}:
    put:
      tags:
      - "Translation Memory"
      summary: "Edit segment"
      description: ""
      operationId: "updateTranslation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - name: "segmentId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SegmentId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Translation Memory"
      summary: "Delete both source and translation"
      description: ""
      operationId: "deleteSourceAndTranslations"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - name: "segmentId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SegmentId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/segments/{segmentId}/lang/{lang}:
    delete:
      tags:
      - "Translation Memory"
      summary: "Delete segment of given language"
      description: ""
      operationId: "deleteTranslation"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - name: "segmentId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SegmentId"
      - name: "lang"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Lang"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/wildCardSearch:
    post:
      tags:
      - "Translation Memory"
      summary: "Wildcard search"
      description: ""
      operationId: "wildcardSearch"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WildCardSearchRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/downloadExport/{asyncRequestId}:
    get:
      tags:
      - "Translation Memory"
      summary: "Download export"
      description: ""
      operationId: "downloadSearchResult"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "asyncRequestId"
        in: "path"
        description: "Request ID"
        required: true
        type: "string"
        x-exportParamName: "AsyncRequestId"
      - name: "format"
        in: "query"
        required: false
        type: "string"
        default: "TMX"
        enum:
        - "TMX"
        - "XLSX"
        x-exportParamName: "Format"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "application/octet-stream"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/exportByQueryAsync:
    post:
      tags:
      - "Translation Memory"
      summary: "Search translation memory"
      description: "Use [this API](#operation/downloadSearchResult) to download result"
      operationId: "exportByQueryAsync"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ExportByQueryDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncExportTMByQueryResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/transMemories/{transMemoryId}/search:
    post:
      tags:
      - "Translation Memory"
      summary: "Search translation memory (sync)"
      description: ""
      operationId: "search"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/projects/{projectUid}/jobs/{jobUid}/translations/translateWithMachineTranslation:
    post:
      tags:
      - "Translation"
      summary: "Translate using machine translation"
      description: "Configured machine translate settings is used"
      operationId: "machineTranslationJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MachineTranslateResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/priceLists:
    get:
      tags:
      - "Price List"
      summary: "List price lists"
      description: ""
      operationId: "getListOfPriceList"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoTranslationPriceListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Price List"
      summary: "Create price list"
      description: ""
      operationId: "createPriceList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationPriceListCreateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/TranslationPriceListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/priceLists/{priceListId}:
    get:
      tags:
      - "Price List"
      summary: "Get price list"
      description: ""
      operationId: "getPriceList"
      produces:
      - "application/json"
      parameters:
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TranslationPriceListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Price List"
      summary: "Update price list"
      description: ""
      operationId: "updatePriceList"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationPriceListCreateDto"
        x-exportParamName: "Body"
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TranslationPriceListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Price List"
      summary: "Delete price list"
      description: ""
      operationId: "deletePriceList"
      consumes:
      - "application/json"
      parameters:
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/priceLists/{priceListId}/priceSets:
    get:
      tags:
      - "Price List"
      summary: "List price sets"
      description: ""
      operationId: "getPricesWithWorkflowSteps"
      produces:
      - "application/json"
      parameters:
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "sourceLanguages"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "SourceLanguages"
      - name: "targetLanguages"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TargetLanguages"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoTranslationPriceSetDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Price List"
      summary: "Add language pairs"
      description: ""
      operationId: "createLanguagePair"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationPriceSetCreateDto"
        x-exportParamName: "Body"
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/TranslationPriceSetListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Price List"
      summary: "Remove language pairs"
      description: ""
      operationId: "deleteLanguagePairs"
      consumes:
      - "application/json"
      parameters:
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationPriceSetBulkDeleteDto"
        x-exportParamName: "Body"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/priceLists/{priceListId}/priceSets/{sourceLanguage}/{targetLanguage}:
    delete:
      tags:
      - "Price List"
      summary: "Remove language pair"
      description: ""
      operationId: "deleteLanguagePair"
      consumes:
      - "application/json"
      parameters:
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      - name: "sourceLanguage"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SourceLanguage"
      - name: "targetLanguage"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TargetLanguage"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/priceLists/{priceListId}/priceSets/minimumPrices:
    post:
      tags:
      - "Price List"
      summary: "Edit minimum prices"
      description: ""
      operationId: "setMinimumPriceForSet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationPriceSetBulkMinimumPricesDto"
        x-exportParamName: "Body"
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TranslationPriceListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/priceLists/{priceListId}/priceSets/prices:
    post:
      tags:
      - "Price List"
      summary: "Edit prices"
      description: "If object contains only price, all languages and workflow steps\
        \ will be updated"
      operationId: "setPrices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/TranslationPriceSetBulkPricesDto"
        x-exportParamName: "Body"
      - name: "priceListId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "PriceListId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TranslationPriceListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}:
    get:
      tags:
      - "User"
      summary: "Get user"
      description: ""
      operationId: "getUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserDetailsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    put:
      tags:
      - "User"
      summary: "Edit user"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserEditDto"
        x-exportParamName: "Body"
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserDetailsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    delete:
      tags:
      - "User"
      summary: "Delete user"
      description: ""
      operationId: "deleteUser_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users:
    get:
      tags:
      - "User"
      summary: "List users"
      description: ""
      operationId: "getListOfUsersFiltered"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "firstName"
        in: "query"
        description: "Filter for first name, that starts with value"
        required: false
        type: "string"
        maxLength: 255
        minLength: 0
        x-exportParamName: "FirstName"
        x-optionalDataType: "String"
      - name: "lastName"
        in: "query"
        description: "Filter for last name, that starts with value"
        required: false
        type: "string"
        maxLength: 255
        minLength: 0
        x-exportParamName: "LastName"
        x-optionalDataType: "String"
      - name: "name"
        in: "query"
        description: "Filter for last name or first name, that starts with value"
        required: false
        type: "string"
        maxLength: 255
        minLength: 0
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "userName"
        in: "query"
        required: false
        type: "string"
        maxLength: 255
        minLength: 0
        x-exportParamName: "UserName"
        x-optionalDataType: "String"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        maxLength: 255
        minLength: 0
        x-exportParamName: "Email"
        x-optionalDataType: "String"
      - name: "role"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ADMIN"
          - "PROJECT_MANAGER"
          - "LINGUIST"
          - "GUEST"
          - "SUBMITTER"
        collectionFormat: "multi"
        x-exportParamName: "Role"
      - name: "includeDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeDeleted"
        x-optionalDataType: "Bool"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ID"
          - "LAST_NAME"
          - "FIRST_NAME"
        collectionFormat: "multi"
        x-exportParamName: "Sort"
      - name: "order"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ASC"
          - "DESC"
        collectionFormat: "multi"
        x-exportParamName: "Order"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoUserDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "User"
      summary: "Create user"
      description: ""
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserCreateDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/UserDetailsDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/users/{userId}/jobs:
    get:
      tags:
      - "User"
      summary: "List assigned jobs"
      description: ""
      operationId: "listJobs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ACCEPTED"
          - "DECLINED"
          - "DELIVERED"
          - "EMAILED"
          - "COMPLETED"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "Status"
      - name: "projectUid"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ProjectUid"
        x-optionalDataType: "String"
      - name: "targetLang"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TargetLang"
      - name: "workflowStepId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "WorkflowStepId"
        x-optionalDataType: "Int64"
      - name: "dueInHours"
        in: "query"
        description: "-1 for jobs that are overdue"
        required: false
        type: "integer"
        minimum: -1
        format: "int32"
        x-exportParamName: "DueInHours"
        x-optionalDataType: "Int32"
      - name: "filename"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filename"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAssignedJobDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}/updatePassword:
    post:
      tags:
      - "User"
      summary: "Update password"
      description: ""
      operationId: "updatePassword"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserPasswordEditDto"
        x-exportParamName: "Body"
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}/emailLoginInformation:
    post:
      tags:
      - "User"
      summary: "Send login information"
      description: ""
      operationId: "sendLoginInfo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}/undelete:
    post:
      tags:
      - "User"
      summary: "Restore user"
      description: ""
      operationId: "cancelDeletion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}/loginStatistics:
    get:
      tags:
      - "User"
      summary: "Login statistics"
      description: ""
      operationId: "loginActivity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserStatisticsListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}/workflowSteps:
    get:
      tags:
      - "User"
      - "Workflow Step"
      summary: "List assigned workflow steps"
      description: ""
      operationId: "listWorkflowSteps"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ACCEPTED"
          - "DECLINED"
          - "DELIVERED"
          - "EMAILED"
          - "COMPLETED"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "Status"
      - name: "projectUid"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ProjectUid"
        x-optionalDataType: "String"
      - name: "targetLang"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TargetLang"
      - name: "dueInHours"
        in: "query"
        description: "-1 for jobs that are overdue"
        required: false
        type: "integer"
        minimum: -1
        format: "int32"
        x-exportParamName: "DueInHours"
        x-optionalDataType: "Int32"
      - name: "filename"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filename"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoWorkflowStepReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}/targetLangs:
    get:
      tags:
      - "User"
      summary: "List assigned target languages"
      description: ""
      operationId: "listTargetLangs"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ACCEPTED"
          - "DECLINED"
          - "DELIVERED"
          - "EMAILED"
          - "COMPLETED"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "Status"
      - name: "projectUid"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ProjectUid"
        x-optionalDataType: "String"
      - name: "workflowStepId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "WorkflowStepId"
        x-optionalDataType: "Int64"
      - name: "dueInHours"
        in: "query"
        description: "-1 for jobs that are overdue"
        required: false
        type: "integer"
        minimum: -1
        format: "int32"
        x-exportParamName: "DueInHours"
        x-optionalDataType: "Int32"
      - name: "filename"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filename"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoString"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/{userId}/projects:
    get:
      tags:
      - "User"
      - "Project"
      summary: "List assigned projects"
      description: ""
      operationId: "listAssignedProjects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ACCEPTED"
          - "DECLINED"
          - "DELIVERED"
          - "EMAILED"
          - "COMPLETED"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "Status"
      - name: "targetLang"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "TargetLang"
      - name: "workflowStepId"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "WorkflowStepId"
        x-optionalDataType: "Int64"
      - name: "dueInHours"
        in: "query"
        description: "-1 for jobs that are overdue"
        required: false
        type: "integer"
        minimum: -1
        format: "int32"
        x-exportParamName: "DueInHours"
        x-optionalDataType: "Int32"
      - name: "filename"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filename"
        x-optionalDataType: "String"
      - name: "projectName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "ProjectName"
        x-optionalDataType: "String"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoProjectReference"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/users/lastLogins:
    get:
      tags:
      - "User"
      summary: "List last login dates"
      description: ""
      operationId: "user-lastLogins"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userName"
        in: "query"
        required: false
        type: "string"
        maxLength: 255
        minLength: 0
        x-exportParamName: "UserName"
        x-optionalDataType: "String"
      - name: "role"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ADMIN"
          - "PROJECT_MANAGER"
          - "LINGUIST"
          - "GUEST"
          - "SUBMITTER"
        collectionFormat: "multi"
        x-exportParamName: "Role"
      - name: "sort"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ID"
          - "LAST_LOGIN_DATE"
        collectionFormat: "multi"
        x-exportParamName: "Sort"
      - name: "order"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "ASC"
          - "DESC"
        collectionFormat: "multi"
        x-exportParamName: "Order"
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 100, default 100"
        required: false
        type: "integer"
        default: 100
        maximum: 100
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoLastLoginDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/vendors/{vendorId}:
    get:
      tags:
      - "Vendor"
      summary: "Get vendor"
      description: ""
      operationId: "getVendor"
      produces:
      - "application/json"
      parameters:
      - name: "vendorId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "VendorId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/VendorDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/vendors:
    get:
      tags:
      - "Vendor"
      summary: "List vendors"
      description: ""
      operationId: "listVendors"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoVendorDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/discoveredVendors:
    get:
      tags:
      - "Vendor"
      summary: "List discovered vendors"
      description: ""
      operationId: "listDiscovered"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoDiscoveredVendorDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v1/webhooks:
    get:
      tags:
      - "Webhook"
      summary: "Lists webhooks"
      description: ""
      operationId: "getWebHookList"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoWebHookDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    post:
      tags:
      - "Webhook"
      summary: "Create webhook"
      description: ""
      operationId: "createWebHook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WebHookDto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/WebHookDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/webhooks/{webHookId}:
    get:
      tags:
      - "Webhook"
      summary: "Get webhook"
      description: ""
      operationId: "getWebHook"
      produces:
      - "application/json"
      parameters:
      - name: "webHookId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "WebHookId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebHookDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    put:
      tags:
      - "Webhook"
      summary: "Edit webhook"
      description: ""
      operationId: "updateWebHook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "webHookId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "WebHookId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WebHookDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebHookDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
    delete:
      tags:
      - "Webhook"
      summary: "Delete webhook"
      description: ""
      operationId: "deleteWebHook"
      parameters:
      - name: "webHookId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "WebHookId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v1/workflowSteps:
    get:
      tags:
      - "Workflow Step"
      summary: "List workflow steps"
      description: ""
      operationId: "listWFSteps"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoWorkflowStepDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/analyses/{analyseId}:
    get:
      tags:
      - "Analysis"
      summary: "Get analysis"
      description: ""
      operationId: "getAnalyseV2"
      produces:
      - "application/json"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyseV2Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v2/analyses:
    post:
      tags:
      - "Analysis"
      summary: "Create analysis"
      description: "Returns created analyses - batching analyses by number of segments\
        \ (api.segment.count.approximation, default 100000), in case request contains\
        \ more segments than maximum (api.segment.max.count, default 300000), returns\
        \ 400 bad request."
      operationId: "createAnalyseAsync_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateAnalyseAsyncV2Dto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncAnalyseListResponseV2Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/analyses/bulk:
    put:
      tags:
      - "Analysis"
      summary: "Edit analyses (batch)"
      description: ""
      operationId: "analyses-batchEdit-v2"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BulkEditAnalyseV2Dto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalysesV2Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/jobs/workflowChanges:
    post:
      tags:
      - "Workflow changes"
      summary: "Download workflow changes report"
      description: ""
      operationId: "downloadWorkflowChanges"
      produces:
      - "text/html"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WorkflowChangesDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Response"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs/{jobUid}/transMemories/wildCardSearch:
    post:
      tags:
      - "Job"
      - "Translation Memory"
      summary: "Wildcard search job's translation memories"
      description: ""
      operationId: "wildCardSearchByJob2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WildCardSearchByJobRequestDtoV2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v2/projects/{projectUid}/jobs/{jobUid}/transMemories/search:
    post:
      tags:
      - "Job"
      summary: "Search job's translation memories"
      description: ""
      operationId: "searchByJob2"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTMByJobRequestDtoV2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v2/projects/{projectUid}/transMemories:
    put:
      tags:
      - "Project"
      summary: "Edit translation memories"
      description: ""
      operationId: "setProjectTransMemoriesV2"
      consumes:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SetProjectTransMemoriesV2Dto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProjectTransMemoryListDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/qaSettings:
    get:
      tags:
      - "Project"
      summary: "Get quality assurance settings"
      description: ""
      operationId: "getProjectQASettingsV2"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QASettingsDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Project"
      summary: "Edit quality assurance settings"
      description: ""
      operationId: "setProjectQASettingsV2"
      consumes:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/EditQASettingsDtoV2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QASettingsDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/applyTemplate/{templateId}:
    post:
      tags:
      - "Project"
      - "Project Template"
      summary: "Create project from template"
      description: ""
      operationId: "createProjectFromTemplateV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "templateId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TemplateId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateProjectFromTemplateV2Dto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/AbstractProjectDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/analyses:
    get:
      tags:
      - "Project"
      - "Analysis"
      summary: "List analyses by project"
      description: ""
      operationId: "listByProjectV2"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAnalyseV2Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs/{jobUid}/analyses:
    get:
      tags:
      - "Analysis"
      - "Job"
      summary: "List analyses"
      description: ""
      operationId: "listPartAnalyse_1"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoAnalyseV2Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs:
    get:
      tags:
      - "Job"
      summary: "List jobs"
      description: ""
      operationId: "listPartsV2"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "pageNumber"
        in: "query"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      - name: "count"
        in: "query"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Count"
        x-optionalDataType: "Bool"
      - name: "workflowLevel"
        in: "query"
        required: false
        type: "integer"
        default: 1
        maximum: 15
        minimum: 1
        format: "int32"
        x-exportParamName: "WorkflowLevel"
        x-optionalDataType: "Int32"
      - name: "status"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "NEW"
          - "ACCEPTED"
          - "DECLINED"
          - "REJECTED"
          - "DELIVERED"
          - "EMAILED"
          - "COMPLETED"
          - "CANCELLED"
        collectionFormat: "multi"
        x-exportParamName: "Status"
      - name: "assignedUser"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AssignedUser"
        x-optionalDataType: "Int64"
      - name: "dueInHours"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DueInHours"
        x-optionalDataType: "Int32"
      - name: "filename"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Filename"
        x-optionalDataType: "String"
      - name: "targetLang"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "TargetLang"
        x-optionalDataType: "String"
      - name: "assignedVendor"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
        x-exportParamName: "AssignedVendor"
        x-optionalDataType: "Int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoJobPartReferenceV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance"
      description: "Call \"Get QA settings\" endpoint to get the list of enabled QA\
        \ checks"
      operationId: "runQaForJobPartV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceRunDtoV2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v2/projects/{projectUid}/jobs/qualityAssurances/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance (batch)"
      description: "Call \"Get QA settings\" endpoint to get the list of enabled QA\
        \ checks"
      operationId: "runQaForJobPartsV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceBatchRunDtoV2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v2/projects/{projectUid}/jobs/qualityAssurances/segments/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance on selected segments"
      description: "Source and target language of jobs have to match"
      operationId: "runQaForSegments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceSegmentsRunDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponse"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
      deprecated: true
  /api2/v2/projects/{projectUid}/jobs/qualityAssurances/settings:
    get:
      tags:
      - "Quality Assurance"
      summary: "Get QA settings"
      description: "Returns enabled quality assurance checks and settings."
      operationId: "enabledQualityChecksForJob"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceChecksDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/settings:
    get:
      tags:
      - "Quality Assurance"
      summary: "Get QA settings for job"
      description: "Returns enabled quality assurance checks and settings for job."
      operationId: "enabledQualityChecksForJob_1"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceChecksDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs/webEditor:
    post:
      tags:
      - "Job"
      summary: "Get Web Editor URL"
      description: "\nPossible warning codes are:\n  - `NOT_ACCEPTED_BY_LINGUIST`\
        \ - Job is not accepted by linguist\n  - `NOT_ASSIGNED_TO_LINGUIST` - Job\
        \ is not assigned to linguist\n  - `PDF` - One of requested jobs is PDF\n\
        \  - `PREVIOUS_WORKFLOW_NOT_COMPLETED` - Previous workflow step is not completed\n\
        \  - `PREVIOUS_WORKFLOW_NOT_COMPLETED_STRICT` - Previous workflow step is\
        \ not completed and project has strictWorkflowFinish set to true\n  - `IN_DELIVERED_STATE`\
        \ - Jobs in DELIVERED state\n  - `IN_COMPLETED_STATE` - Jobs in COMPLETED\
        \ state\n  - `IN_REJECTED_STATE` - Jobs in REJECTED state\n\nPossible error\
        \ codes are:\n  - `ASSIGNED_TO_OTHER_USER` - Job is accepted by other user\n\
        \  - `NOT_UNIQUE_TARGET_LANG` - Requested jobs contains different target locales\n\
        \  - `TOO_MANY_SEGMENTS` - Count of requested job's segments is higher than\
        \ **40000**\n  - `COMPLETED_JOINED_WITH_OTHER` - Jobs in COMPLETED state cannot\
        \ be joined with jobs in other states\n  - `DELIVERED_JOINED_WITH_OTHER` -\
        \ Jobs in DELIVERED state cannot be joined with jobs in other states\n  -\
        \ `REJECTED_JOINED_WITH_OTHER` - Jobs in REJECTED state cannot be joined with\
        \ jobs in other states\n\nWarning response example:\n```\n{\n    \"warnings\"\
        : [\n        {\n            \"message\": \"Not accepted by linguist\",\n \
        \           \"args\": {\n                \"jobs\": [\n                   \
        \ \"abcd1234\"\n                ]\n            },\n            \"code\": \"\
        NOT_ACCEPTED_BY_LINGUIST\"\n        },\n        {\n            \"message\"\
        : \"Previous workflow step not completed\",\n            \"args\": {\n   \
        \             \"jobs\": [\n                    \"abcd1234\"\n            \
        \    ]\n            },\n            \"code\": \"PREVIOUS_WORKFLOW_NOT_COMPLETED\"\
        \n        }\n    ],\n    \"url\": \"/web/job/abcd1234-efgh5678/translate\"\
        \n}\n```\n\nError response example:\nStatus: `400 Bad Request`\n```\n{\n \
        \   \"errorCode\": \"NOT_UNIQUE_TARGET_LANG\",\n    \"errorDescription\":\
        \ \"Only files with identical target languages can be joined\",\n    \"errorDetails\"\
        : [\n        {\n            \"code\": \"NOT_UNIQUE_TARGET_LANG\",\n      \
        \      \"args\": {\n                \"targetLocales\": [\n               \
        \     \"de\",\n                    \"en\"\n                ]\n           \
        \ },\n            \"message\": \"Only files with identical target languages\
        \ can be joined\"\n        },\n        {\n            \"code\": \"TOO_MANY_SEGMENTS\"\
        ,\n            \"args\": {\n                \"maxSegments\": 40000,\n    \
        \            \"segments\": 400009\n            },\n            \"message\"\
        : \"Up to 40000 segments can be opened in the Memsource Web Editor, job has\
        \ 400009 segments\"\n        }\n    ]\n}\n```\n"
      operationId: "webEditorLinkV2"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CreateWebEditorLinkDtoV2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebEditorLinkDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/quotes:
    post:
      tags:
      - "Quote"
      summary: "Create quote"
      description: "Either WorkflowSettings or Units must be sent for billingUnit\
        \ \"Hour\"."
      operationId: "createQuoteV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QuoteCreateV2Dto"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QuoteV2Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/transMemories/{transMemoryId}/export:
    post:
      tags:
      - "Translation Memory"
      summary: "Export translation memory"
      description: "Use [this API](#operation/downloadSearchResult) to download result"
      operationId: "exportV2"
      produces:
      - "application/json"
      parameters:
      - name: "transMemoryId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "TransMemoryId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ExportTMDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AsyncExportTMResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/users/{userId}:
    get:
      tags:
      - "User"
      summary: "Get user"
      description: ""
      operationId: "getUserV2"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserDetailsDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "User"
      summary: "Edit user"
      description: ""
      operationId: "updateUserV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserEditDtoV2"
        x-exportParamName: "Body"
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "UserId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserDetailsDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/users:
    post:
      tags:
      - "User"
      summary: "Create user"
      description: ""
      operationId: "createUserV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/UserCreateDtoV2"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/UserDetailsDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/webhooks:
    get:
      tags:
      - "Webhook"
      summary: "Lists webhooks"
      description: ""
      operationId: "getWebHookList_1"
      produces:
      - "application/json"
      parameters:
      - name: "pageNumber"
        in: "query"
        description: "Page number, starting with 0, default 0"
        required: false
        type: "integer"
        default: 0
        format: "int32"
        x-exportParamName: "PageNumber"
        x-optionalDataType: "Int32"
      - name: "pageSize"
        in: "query"
        description: "Page size, accepts values between 1 and 50, default 50"
        required: false
        type: "integer"
        default: 50
        maximum: 50
        minimum: 1
        format: "int32"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PageDtoWebHookDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    post:
      tags:
      - "Webhook"
      summary: "Create webhook"
      description: ""
      operationId: "createWebHook_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WebHookDtoV2"
        x-exportParamName: "Body"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/WebHookDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/webhooks/{webHookId}:
    get:
      tags:
      - "Webhook"
      summary: "Get webhook"
      description: ""
      operationId: "getWebHook_1"
      produces:
      - "application/json"
      parameters:
      - name: "webHookId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "WebHookId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebHookDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    put:
      tags:
      - "Webhook"
      summary: "Edit webhook"
      description: ""
      operationId: "updateWebHook_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "webHookId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "WebHookId"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WebHookDtoV2"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebHookDtoV2"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "Webhook"
      summary: "Delete webhook"
      description: ""
      operationId: "deleteWebHook_1"
      parameters:
      - name: "webHookId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "WebHookId"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs/{jobUid}/termBases/searchByJob:
    post:
      tags:
      - "Term Base"
      - "Job"
      summary: "Search job's term bases"
      description: "Search all read term bases assigned to the job"
      operationId: "searchTermsByJob_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTbByJobRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchTbResponseListDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v2/projects/{projectUid}/jobs/{jobUid}/termBases/searchInTextByJob:
    post:
      tags:
      - "Term Base"
      - "Job"
      summary: "Search terms in text"
      description: "Search in text in all read term bases assigned to the job"
      operationId: "searchTermsInTextByJobV2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTbInTextByJobRequestDto"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchInTextResponseList2Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v3/analyses/{analyseId}:
    get:
      tags:
      - "Analysis"
      summary: "Get analysis"
      description: ""
      operationId: "getAnalyseV3"
      produces:
      - "application/json"
      parameters:
      - name: "analyseId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "AnalyseId"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AnalyseV3Dto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v3/projects/{projectUid}/jobs/{jobUid}/transMemories/search:
    post:
      tags:
      - "Job"
      - "Translation Memory"
      summary: "Search job's translation memories"
      description: ""
      operationId: "searchByJob3"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SearchTMByJobRequestDtoV3"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDtoV3"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v3/projects/{projectUid}/jobs/{jobUid}/transMemories/wildCardSearch:
    post:
      tags:
      - "Job"
      - "Translation Memory"
      summary: "Wildcard search job's translation memories"
      description: ""
      operationId: "wildCardSearchByJob3"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/WildCardSearchByJobRequestDtoV3"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResponseListTmDtoV3"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v3/projects/{projectUid}/jobs/qualityAssurances/segments/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance on selected segments"
      description: "By default runs only fast running checks. Source and target language\
        \ of jobs have to match."
      operationId: "runQaForSegmentsV3"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceSegmentsRunDtoV3"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v3/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance"
      description: "Call \"Get QA settings\" endpoint to get the list of enabled QA\
        \ checks"
      operationId: "runQaForJobPartV3"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - name: "jobUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "JobUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceRunDtoV3"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
  /api2/v3/projects/{projectUid}/jobs/qualityAssurances/run:
    post:
      tags:
      - "Quality Assurance"
      summary: "Run quality assurance (batch)"
      description: "Call \"Get QA settings\" endpoint to get the list of enabled QA\
        \ checks"
      operationId: "runQaForJobPartsV3"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectUid"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "ProjectUid"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/QualityAssuranceBatchRunDtoV3"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QualityAssuranceResponseDto"
        "400":
          description: "Bad request"
        "401":
          description: "Not authorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Resource not found"
        "405":
          description: "Method not allowed"
        "408":
          description: "Timeout"
        "410":
          description: "Gone"
        "415":
          description: "Unsupported media type"
        "500":
          description: "Internal server error"
definitions:
  AsyncAnalyseResponseDto:
    type: "object"
    properties:
      asyncRequest:
        $ref: "#/definitions/AsyncRequestDto"
      analyse:
        $ref: "#/definitions/IdReference"
    example:
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      analyse:
        id: "id"
  AsyncRequestDto:
    type: "object"
    properties:
      id:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      action:
        type: "string"
        enum:
        - "PRE_ANALYSE"
        - "POST_ANALYSE"
        - "COMPARE_ANALYSE"
        - "PRE_TRANSLATE"
        - "ASYNC_TRANSLATE"
        - "IMPORT_JOB"
        - "IMPORT_FILE"
        - "ALIGN"
        - "EXPORT_TMX_BY_QUERY"
        - "EXPORT_TMX"
        - "IMPORT_TMX"
        - "INSERT_INTO_TM"
        - "QA"
        - "UPDATE_CONTINUOUS_JOB"
        - "MIGRATE_TM"
        - "MIGRATE_TM_OWN_SERVICE"
      asyncResponse:
        $ref: "#/definitions/AsyncResponseDto"
      parent:
        $ref: "#/definitions/AsyncRequestDto"
      project:
        $ref: "#/definitions/ProjectReference"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      action: "PRE_ANALYSE"
      project:
        uid: "uid"
        name: "name"
      id: "id"
      asyncResponse:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        errorDesc: "errorDesc"
        warnings:
        - args:
            key: "{}"
          code: "code"
          message: "message"
        - args:
            key: "{}"
          code: "code"
          message: "message"
        errorCode: "errorCode"
        errorDetails:
        - args:
            key: "{}"
          code: "code"
          message: "message"
        - args:
            key: "{}"
          code: "code"
          message: "message"
  AsyncResponseDto:
    type: "object"
    properties:
      dateCreated:
        type: "string"
        format: "date-time"
      errorCode:
        type: "string"
      errorDesc:
        type: "string"
      errorDetails:
        type: "array"
        items:
          $ref: "#/definitions/ErrorDetailDto"
      warnings:
        type: "array"
        items:
          $ref: "#/definitions/ErrorDetailDto"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      errorDesc: "errorDesc"
      warnings:
      - args:
          key: "{}"
        code: "code"
        message: "message"
      - args:
          key: "{}"
        code: "code"
        message: "message"
      errorCode: "errorCode"
      errorDetails:
      - args:
          key: "{}"
        code: "code"
        message: "message"
      - args:
          key: "{}"
        code: "code"
        message: "message"
  ErrorDetailDto:
    type: "object"
    properties:
      code:
        type: "string"
        description: "Code, e.g. NOT_FOUND."
      args:
        type: "object"
        description: "Related arguments, e.g. number => \"hello world\""
        additionalProperties:
          type: "object"
          properties: {}
      message:
        type: "string"
        description: "Optional human-readable message."
    example:
      args:
        key: "{}"
      code: "code"
      message: "message"
  IdReference:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
    example:
      id: "id"
  ProjectReference:
    type: "object"
    properties:
      name:
        type: "string"
      uid:
        type: "string"
    example:
      uid: "uid"
      name: "name"
  UserReference:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      userName:
        type: "string"
      email:
        type: "string"
      role:
        type: "string"
        enum:
        - "SYS_ADMIN"
        - "SYS_ADMIN_READ"
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      id:
        type: "string"
      uid:
        type: "string"
    example:
      firstName: "firstName"
      lastName: "lastName"
      uid: "uid"
      role: "SYS_ADMIN"
      id: "id"
      userName: "userName"
      email: "email"
  CreateAnalyseAsyncDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
      type:
        type: "string"
        description: "default: PreAnalyse"
        enum:
        - "PreAnalyse"
        - "PostAnalyse"
        - "Compare"
      includeFuzzyRepetitions:
        type: "boolean"
        description: "Default: true"
      includeConfirmedSegments:
        type: "boolean"
        description: "Default: true"
      includeNumbers:
        type: "boolean"
        description: "Default: true"
      includeLockedSegments:
        type: "boolean"
        description: "Default: true"
      countSourceUnits:
        type: "boolean"
        description: "Default: true"
      includeTransMemory:
        type: "boolean"
        description: "Default: true"
      includeNonTranslatables:
        type: "boolean"
        description: "Default: false. Works only for type=PreAnalyse."
      includeMachineTranslationMatches:
        type: "boolean"
        description: "Default: false. Works only for type=PreAnalyse."
      transMemoryPostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      nonTranslatablePostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      machineTranslatePostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      netRateScheme:
        $ref: "#/definitions/IdReference"
      compareWorkflowLevel:
        type: "integer"
        format: "int32"
        description: "Required for type=Compare"
        minimum: 1
        maximum: 15
      useProjectAnalysisSettings:
        type: "boolean"
        description: "Default: false. Use default project settings. Will be overwritten\
          \ with setting sent\n        in the API call."
      linguist:
        $ref: "#/definitions/IdReference"
      callbackUrl:
        type: "string"
    example:
      includeConfirmedSegments: true
      includeNonTranslatables: true
      includeLockedSegments: true
      countSourceUnits: true
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      includeMachineTranslationMatches: true
      type: "PreAnalyse"
      linguist:
        id: "id"
      includeTransMemory: true
      nonTranslatablePostEditing: true
      includeNumbers: true
      includeFuzzyRepetitions: true
      transMemoryPostEditing: true
      name: "name"
      callbackUrl: "callbackUrl"
      compareWorkflowLevel: 2
      netRateScheme:
        id: "id"
      useProjectAnalysisSettings: true
      machineTranslatePostEditing: true
  UidReference:
    type: "object"
    properties:
      uid:
        type: "string"
    example:
      uid: "uid"
  AnalyseDto:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
        enum:
        - "PreAnalyse"
        - "PostAnalyse"
        - "PreAnalyseTarget"
        - "Compare"
      name:
        type: "string"
      assignedLinguist:
        $ref: "#/definitions/UserReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      netRateScheme:
        $ref: "#/definitions/NetRateSchemeReference"
      analyseLanguageParts:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseLanguagePartDto"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
      id: "id"
      type: "PreAnalyse"
      assignedLinguist:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      analyseLanguageParts:
      - targetLang: "targetLang"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        sourceLang: "sourceLang"
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        jobs:
        - uid: "uid"
          filename: "filename"
        - uid: "uid"
          filename: "filename"
        id: "id"
      - targetLang: "targetLang"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        sourceLang: "sourceLang"
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        jobs:
        - uid: "uid"
          filename: "filename"
        - uid: "uid"
          filename: "filename"
        id: "id"
  AnalyseJobReference:
    type: "object"
    properties:
      uid:
        type: "string"
      filename:
        type: "string"
    example:
      uid: "uid"
      filename: "filename"
  AnalyseLanguagePartDto:
    type: "object"
    properties:
      id:
        type: "string"
      sourceLang:
        type: "string"
      targetLang:
        type: "string"
      data:
        $ref: "#/definitions/DataDto"
      discountedData:
        $ref: "#/definitions/DataDto"
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseJobReference"
    example:
      targetLang: "targetLang"
      data:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
      sourceLang: "sourceLang"
      discountedData:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
      jobs:
      - uid: "uid"
        filename: "filename"
      - uid: "uid"
        filename: "filename"
      id: "id"
  CountsDto:
    type: "object"
    properties:
      segments:
        type: "number"
        format: "double"
      words:
        type: "number"
        format: "double"
      characters:
        type: "number"
        format: "double"
      normalizedPages:
        type: "number"
        format: "double"
      percent:
        type: "number"
        format: "double"
    example:
      characters: 1.46581298050294517310021547018550336360931396484375
      words: 6.02745618307040320615897144307382404804229736328125
      normalizedPages: 5.962133916683182377482808078639209270477294921875
      percent: 5.63737665663332876420099637471139430999755859375
      segments: 0.80082819046101150206595775671303272247314453125
  DataDto:
    type: "object"
    properties:
      available:
        type: "boolean"
      all:
        $ref: "#/definitions/CountsDto"
      repetitions:
        $ref: "#/definitions/CountsDto"
      transMemoryMatches:
        $ref: "#/definitions/MatchCounts101Dto"
      machineTranslationMatches:
        $ref: "#/definitions/MatchCountsDto"
      nonTranslatablesMatches:
        $ref: "#/definitions/MatchCountsNTDto"
    example:
      all:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      nonTranslatablesMatches:
        match0:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match85:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match100:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match75:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match50:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match95:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
      available: true
      transMemoryMatches:
        match0:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match85:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match101:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match100:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match75:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match50:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match95:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
      repetitions:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      machineTranslationMatches:
        match0:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match85:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match100:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match75:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match50:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        match95:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
  MatchCounts101Dto:
    type: "object"
    properties:
      match100:
        $ref: "#/definitions/CountsDto"
      match95:
        $ref: "#/definitions/CountsDto"
      match85:
        $ref: "#/definitions/CountsDto"
      match75:
        $ref: "#/definitions/CountsDto"
      match50:
        $ref: "#/definitions/CountsDto"
      match0:
        $ref: "#/definitions/CountsDto"
      match101:
        $ref: "#/definitions/CountsDto"
    example:
      match0:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match85:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match101:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match100:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match75:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match50:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match95:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
  MatchCountsDto:
    type: "object"
    properties:
      match100:
        $ref: "#/definitions/CountsDto"
      match95:
        $ref: "#/definitions/CountsDto"
      match85:
        $ref: "#/definitions/CountsDto"
      match75:
        $ref: "#/definitions/CountsDto"
      match50:
        $ref: "#/definitions/CountsDto"
      match0:
        $ref: "#/definitions/CountsDto"
    example:
      match0:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match85:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match100:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match75:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match50:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match95:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
  MatchCountsNTDto:
    type: "object"
    properties:
      match100:
        $ref: "#/definitions/CountsDto"
      match95:
        $ref: "#/definitions/CountsDto"
      match85:
        $ref: "#/definitions/CountsDto"
      match75:
        $ref: "#/definitions/CountsDto"
      match50:
        $ref: "#/definitions/CountsDto"
      match0:
        $ref: "#/definitions/CountsDto"
    example:
      match0:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match85:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match100:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match75:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match50:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
      match95:
        characters: 1.46581298050294517310021547018550336360931396484375
        words: 6.02745618307040320615897144307382404804229736328125
        normalizedPages: 5.962133916683182377482808078639209270477294921875
        percent: 5.63737665663332876420099637471139430999755859375
        segments: 0.80082819046101150206595775671303272247314453125
  NetRateSchemeReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
      id: "id"
  BulkEditAnalyseDto:
    type: "object"
    required:
    - "analyses"
    properties:
      analyses:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
        maxItems: 100
        minItems: 1
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      linguist:
        $ref: "#/definitions/IdReference"
  AnalyseJobDto:
    type: "object"
    properties:
      uid:
        type: "string"
      filename:
        type: "string"
      data:
        $ref: "#/definitions/DataDto"
      discountedData:
        $ref: "#/definitions/DataDto"
    example:
      uid: "uid"
      filename: "filename"
      data:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
      discountedData:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
  PageDtoAnalyseJobDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseJobDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - uid: "uid"
        filename: "filename"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
      - uid: "uid"
        filename: "filename"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
      totalElements: 0
  InputStream:
    type: "object"
  InputStreamLength:
    type: "object"
    properties:
      stream:
        $ref: "#/definitions/InputStream"
      length:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      characterEncoding:
        type: "string"
      extension:
        type: "string"
  BulkDeleteAnalyseDto:
    type: "object"
    required:
    - "analyses"
    properties:
      analyses:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
        maxItems: 100
        minItems: 1
      purge:
        type: "boolean"
        description: "Default: false"
    example:
      analyses:
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      purge: true
  AsyncAnalyseListResponseDto:
    type: "object"
    properties:
      analyses:
        type: "array"
        items:
          $ref: "#/definitions/AsyncAnalyseResponseDto"
    example:
      analyses:
      - asyncRequest:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          action: "PRE_ANALYSE"
          project:
            uid: "uid"
            name: "name"
          id: "id"
          asyncResponse:
            dateCreated: "2000-01-23T04:56:07.000+00:00"
            errorDesc: "errorDesc"
            warnings:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
            errorCode: "errorCode"
            errorDetails:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
        analyse:
          id: "id"
      - asyncRequest:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          action: "PRE_ANALYSE"
          project:
            uid: "uid"
            name: "name"
          id: "id"
          asyncResponse:
            dateCreated: "2000-01-23T04:56:07.000+00:00"
            errorDesc: "errorDesc"
            warnings:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
            errorCode: "errorCode"
            errorDetails:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
        analyse:
          id: "id"
  CreateAnalyseListAsyncDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
      type:
        type: "string"
        description: "default: PreAnalyse"
        enum:
        - "PreAnalyse"
        - "PostAnalyse"
        - "Compare"
      includeFuzzyRepetitions:
        type: "boolean"
        description: "Default: true"
      includeConfirmedSegments:
        type: "boolean"
        description: "Default: true"
      includeNumbers:
        type: "boolean"
        description: "Default: true"
      includeLockedSegments:
        type: "boolean"
        description: "Default: true"
      countSourceUnits:
        type: "boolean"
        description: "Default: true"
      includeTransMemory:
        type: "boolean"
        description: "Default: true"
      includeNonTranslatables:
        type: "boolean"
        description: "Default: false. Works only for type=PreAnalyse."
      includeMachineTranslationMatches:
        type: "boolean"
        description: "Default: false. Works only for type=PreAnalyse."
      transMemoryPostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      nonTranslatablePostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      machineTranslatePostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      netRateScheme:
        $ref: "#/definitions/IdReference"
      compareWorkflowLevel:
        type: "integer"
        format: "int32"
        description: "Required for type=Compare"
        minimum: 1
        maximum: 15
      useProjectAnalysisSettings:
        type: "boolean"
        description: "Default: false. Use default project settings. Will be overwritten\
          \ with setting sent\n        in the API call."
      callbackUrl:
        type: "string"
    example:
      includeConfirmedSegments: true
      includeNonTranslatables: true
      includeLockedSegments: true
      countSourceUnits: true
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      includeMachineTranslationMatches: true
      type: "PreAnalyse"
      includeTransMemory: true
      nonTranslatablePostEditing: true
      includeNumbers: true
      includeFuzzyRepetitions: true
      transMemoryPostEditing: true
      name: "name"
      callbackUrl: "callbackUrl"
      compareWorkflowLevel: 2
      netRateScheme:
        id: "id"
      useProjectAnalysisSettings: true
      machineTranslatePostEditing: true
  AnalyticsResponseDto:
    type: "object"
    properties:
      hits:
        type: "object"
        description: "JSONObject"
        additionalProperties:
          type: "object"
          properties: {}
      aggregations:
        type: "object"
        description: "JSONObject"
        additionalProperties:
          type: "object"
          properties: {}
    example:
      hits:
        key: "{}"
      aggregations:
        key: "{}"
  AnalyticsDto:
    type: "object"
    properties:
      aggregations:
        type: "object"
        description: "JSONObject"
        additionalProperties:
          type: "object"
          properties: {}
      filter:
        type: "object"
        description: "JSONObject"
        additionalProperties:
          type: "object"
          properties: {}
    example:
      filter:
        key: "{}"
      aggregations:
        key: "{}"
  PageDtoAsyncRequestDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/AsyncRequestDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      totalElements: 0
  LoginResponseDto:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/UserReference"
      token:
        type: "string"
      expires:
        type: "string"
        format: "date-time"
    example:
      expires: "2000-01-23T04:56:07.000+00:00"
      user:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      token: "token"
  LoginDto:
    type: "object"
    required:
    - "password"
    - "userName"
    properties:
      userName:
        type: "string"
      password:
        type: "string"
      code:
        type: "string"
        description: "Required only for 2-factor authentication"
    example:
      password: "password"
      code: "code"
      userName: "userName"
  LoginOtherDto:
    type: "object"
    required:
    - "userName"
    properties:
      userName:
        type: "string"
    example:
      userName: "userName"
  LoginToSessionResponseDto:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/UserReference"
      cookie:
        type: "string"
      csrfToken:
        type: "string"
    example:
      csrfToken: "csrfToken"
      cookie: "cookie"
      user:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
  LoginToSessionDto:
    type: "object"
    required:
    - "password"
    - "userName"
    properties:
      userName:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      userName: "userName"
  EditionDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      title:
        type: "string"
    example:
      name: "name"
      id: "id"
      title: "title"
  FeaturesDto:
    type: "object"
    properties:
      rejectJobs:
        type: "boolean"
    example:
      rejectJobs: true
  LoginUserDto:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/UserReference"
      csrfToken:
        type: "string"
      organization:
        $ref: "#/definitions/OrganizationReference"
      edition:
        $ref: "#/definitions/EditionDto"
      features:
        $ref: "#/definitions/FeaturesDto"
    example:
      features:
        rejectJobs: true
      csrfToken: "csrfToken"
      organization:
        name: "name"
        id: "id"
      edition:
        name: "name"
        id: "id"
        title: "title"
      user:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
  OrganizationReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  LoginWithGoogleDto:
    type: "object"
    required:
    - "idToken"
    properties:
      idToken:
        type: "string"
    example:
      idToken: "idToken"
  JobPartReference:
    type: "object"
    properties:
      uid:
        type: "string"
      status:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      providers:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
      targetLang:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      filename:
        type: "string"
      dateDue:
        type: "string"
        format: "date-time"
      dateCreated:
        type: "string"
        format: "date-time"
      imported:
        type: "boolean"
      jobAssignedEmailTemplate:
        $ref: "#/definitions/ObjectReference"
      notificationIntervalInMinutes:
        type: "integer"
        format: "int32"
      continuous:
        type: "boolean"
    example:
      dateDue: "2000-01-23T04:56:07.000+00:00"
      targetLang: "targetLang"
      jobAssignedEmailTemplate: {}
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      uid: "uid"
      filename: "filename"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      imported: true
      continuous: true
      notificationIntervalInMinutes: 1
      workflowLevel: 0
      providers:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      status: "NEW"
  JobPartsDto:
    type: "object"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/JobPartReference"
    example:
      jobs:
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        targetLang: "targetLang"
        jobAssignedEmailTemplate: {}
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        notificationIntervalInMinutes: 1
        workflowLevel: 0
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        targetLang: "targetLang"
        jobAssignedEmailTemplate: {}
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        notificationIntervalInMinutes: 1
        workflowLevel: 0
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
  ObjectReference:
    type: "object"
  ProviderReference:
    type: "object"
    required:
    - "type"
    discriminator: "type"
    properties:
      type:
        type: "string"
      id:
        type: "string"
    example:
      id: "id"
      type: "type"
  USER:
    allOf:
    - $ref: "#/definitions/ProviderReference"
    - type: "object"
      properties:
        userName:
          type: "string"
          readOnly: true
        firstName:
          type: "string"
          readOnly: true
        lastName:
          type: "string"
          readOnly: true
        email:
          type: "string"
          readOnly: true
        active:
          type: "boolean"
          readOnly: true
  VENDOR:
    allOf:
    - $ref: "#/definitions/ProviderReference"
    - type: "object"
      properties:
        name:
          type: "string"
          readOnly: true
        defaultProjectOwnerId:
          type: "integer"
          format: "int64"
  WorkflowStepReference:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
      order:
        type: "integer"
        format: "int32"
    example:
      name: "name"
      id: "id"
      order: 6
  ComparedSegmentDto:
    type: "object"
    properties:
      uid:
        type: "string"
      state:
        type: "string"
        enum:
        - "Miss"
        - "Diff"
    example:
      uid: "uid"
      state: "Miss"
  ComparedSegmentsDto:
    type: "object"
    properties:
      segments:
        type: "array"
        items:
          $ref: "#/definitions/ComparedSegmentDto"
    example:
      segments:
      - uid: "uid"
        state: "Miss"
      - uid: "uid"
        state: "Miss"
  BusinessUnitDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  PageDtoBusinessUnitDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/BusinessUnitDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      totalElements: 0
  BusinessUnitEditDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
    example:
      name: "name"
  ClientReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  ClientDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      externalId:
        type: "string"
      note:
        type: "string"
      displayNoteInProject:
        type: "boolean"
        description: "Default: false"
      priceList:
        $ref: "#/definitions/PriceListReference"
      netRateScheme:
        $ref: "#/definitions/NetRateSchemeReference"
      createdBy:
        $ref: "#/definitions/UserReference"
    example:
      note: "note"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
      externalId: "externalId"
      id: "id"
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      displayNoteInProject: true
      priceList:
        name: "name"
        id: "id"
  PriceListReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  PageDtoClientDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/ClientDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - note: "note"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        externalId: "externalId"
        id: "id"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        displayNoteInProject: true
        priceList:
          name: "name"
          id: "id"
      - note: "note"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        externalId: "externalId"
        id: "id"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        displayNoteInProject: true
        priceList:
          name: "name"
          id: "id"
      totalElements: 0
  ClientEditDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      externalId:
        type: "string"
        minLength: 0
        maxLength: 255
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
      displayNoteInProject:
        type: "boolean"
        description: "Default: false"
      priceList:
        $ref: "#/definitions/IdReference"
      netRateScheme:
        $ref: "#/definitions/IdReference"
    example:
      note: "note"
      name: "name"
      externalId: "externalId"
      netRateScheme:
        id: "id"
      displayNoteInProject: true
      priceList:
        id: "id"
  AutomatedProjectSettingsDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      organization:
        $ref: "#/definitions/NameDto"
      active:
        type: "boolean"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      connector:
        $ref: "#/definitions/NameDto"
      remoteFolder:
        type: "string"
    example:
      remoteFolder: "remoteFolder"
      connector:
        name: "name"
        id: "id"
      sourceLang: "sourceLang"
      organization:
        name: "name"
        id: "id"
      name: "name"
      active: true
      id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  ConnectorDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
        enum:
        - "DROPBOX"
        - "GOOGLE"
        - "FTP"
        - "WORDPRESS"
        - "GITHUB"
        - "SFTP"
        - "DRUPAL"
        - "BOX"
        - "GIT"
        - "ZENDESK"
        - "ONEDRIVE"
        - "GITLAB"
        - "MARKETO"
        - "HUBSPOT"
        - "HELPSCOUT"
        - "SALESFORCE"
        - "BITBUCKET"
        - "BITBUCKETSERVER"
        - "SHAREPOINT"
        - "AZURE"
        - "SITECORE"
        - "KENTICO"
        - "MAGENTO"
        - "CONTENTFULENTRYLEVEL"
        - "CONTENTFUL"
        - "CONTENTSTACK"
        - "JOOMLA"
        - "CONFLUENCE"
        - "TYPO3"
        - "AEM_PLUGIN"
      organization:
        $ref: "#/definitions/NameDto"
      createdBy:
        $ref: "#/definitions/NameDto"
      createdAt:
        type: "string"
        format: "date-time"
      localToken:
        type: "string"
      automatedProjectSettings:
        type: "array"
        items:
          $ref: "#/definitions/AutomatedProjectSettingsDto"
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        name: "name"
        id: "id"
      organization:
        name: "name"
        id: "id"
      name: "name"
      localToken: "localToken"
      id: "id"
      type: "DROPBOX"
      automatedProjectSettings:
      - remoteFolder: "remoteFolder"
        connector:
          name: "name"
          id: "id"
        sourceLang: "sourceLang"
        organization:
          name: "name"
          id: "id"
        name: "name"
        active: true
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      - remoteFolder: "remoteFolder"
        connector:
          name: "name"
          id: "id"
        sourceLang: "sourceLang"
        organization:
          name: "name"
          id: "id"
        name: "name"
        active: true
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
  NameDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  ConnectorListDto:
    type: "object"
    properties:
      connectors:
        type: "array"
        items:
          $ref: "#/definitions/ConnectorDto"
      totalCount:
        type: "integer"
        format: "int32"
    example:
      connectors:
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          name: "name"
          id: "id"
        organization:
          name: "name"
          id: "id"
        name: "name"
        localToken: "localToken"
        id: "id"
        type: "DROPBOX"
        automatedProjectSettings:
        - remoteFolder: "remoteFolder"
          connector:
            name: "name"
            id: "id"
          sourceLang: "sourceLang"
          organization:
            name: "name"
            id: "id"
          name: "name"
          active: true
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        - remoteFolder: "remoteFolder"
          connector:
            name: "name"
            id: "id"
          sourceLang: "sourceLang"
          organization:
            name: "name"
            id: "id"
          name: "name"
          active: true
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
      - createdAt: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          name: "name"
          id: "id"
        organization:
          name: "name"
          id: "id"
        name: "name"
        localToken: "localToken"
        id: "id"
        type: "DROPBOX"
        automatedProjectSettings:
        - remoteFolder: "remoteFolder"
          connector:
            name: "name"
            id: "id"
          sourceLang: "sourceLang"
          organization:
            name: "name"
            id: "id"
          name: "name"
          active: true
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        - remoteFolder: "remoteFolder"
          connector:
            name: "name"
            id: "id"
          sourceLang: "sourceLang"
          organization:
            name: "name"
            id: "id"
          name: "name"
          active: true
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
      totalCount: 0
  ErrorDto:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
    example:
      code: "code"
      message: "message"
  FileDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      encodedName:
        type: "string"
      contentType:
        type: "string"
      size:
        type: "integer"
        format: "int64"
      directory:
        type: "boolean"
      lastModified:
        type: "string"
        format: "date-time"
      selected:
        type: "boolean"
      error:
        $ref: "#/definitions/ErrorDto"
      escapedName:
        type: "string"
    example:
      size: 0
      escapedName: "escapedName"
      name: "name"
      encodedName: "encodedName"
      id: "id"
      lastModified: "2000-01-23T04:56:07.000+00:00"
      error:
        code: "code"
        message: "message"
      contentType: "contentType"
      directory: true
      selected: true
  FileListDto:
    type: "object"
    properties:
      files:
        type: "array"
        items:
          $ref: "#/definitions/FileDto"
      currentFolder:
        type: "string"
      encodedCurrentFolder:
        type: "string"
      rootFolder:
        type: "boolean"
      lastChangedFiles:
        type: "array"
        items:
          $ref: "#/definitions/FileDto"
    example:
      encodedCurrentFolder: "encodedCurrentFolder"
      rootFolder: true
      lastChangedFiles:
      - size: 0
        escapedName: "escapedName"
        name: "name"
        encodedName: "encodedName"
        id: "id"
        lastModified: "2000-01-23T04:56:07.000+00:00"
        error:
          code: "code"
          message: "message"
        contentType: "contentType"
        directory: true
        selected: true
      - size: 0
        escapedName: "escapedName"
        name: "name"
        encodedName: "encodedName"
        id: "id"
        lastModified: "2000-01-23T04:56:07.000+00:00"
        error:
          code: "code"
          message: "message"
        contentType: "contentType"
        directory: true
        selected: true
      files:
      - size: 0
        escapedName: "escapedName"
        name: "name"
        encodedName: "encodedName"
        id: "id"
        lastModified: "2000-01-23T04:56:07.000+00:00"
        error:
          code: "code"
          message: "message"
        contentType: "contentType"
        directory: true
        selected: true
      - size: 0
        escapedName: "escapedName"
        name: "name"
        encodedName: "encodedName"
        id: "id"
        lastModified: "2000-01-23T04:56:07.000+00:00"
        error:
          code: "code"
          message: "message"
        contentType: "contentType"
        directory: true
        selected: true
      currentFolder: "currentFolder"
  UploadResultDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      encodedName:
        type: "string"
      size:
        type: "integer"
        format: "int64"
      error:
        type: "string"
    example:
      size: 0
      name: "name"
      encodedName: "encodedName"
      id: "id"
      error: "error"
  CommentDto:
    type: "object"
    properties:
      id:
        type: "string"
      text:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      dateModified:
        type: "string"
        format: "date-time"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      dateModified: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      text: "text"
  CommonConversationDto:
    type: "object"
    discriminator: "type"
    properties:
      id:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      dateModified:
        type: "string"
        format: "date-time"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/CommentDto"
      status:
        $ref: "#/definitions/StatusDto"
      deleted:
        type: "boolean"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      comments:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        text: "text"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        text: "text"
      deleted: true
      dateModified: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      status:
        date: "2000-01-23T04:56:07.000+00:00"
        by:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "resolved"
  ConversationListDto:
    type: "object"
    properties:
      conversations:
        type: "array"
        items:
          $ref: "#/definitions/CommonConversationDto"
    example:
      conversations:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        comments:
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        deleted: true
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        status:
          date: "2000-01-23T04:56:07.000+00:00"
          by:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "resolved"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        comments:
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        deleted: true
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        status:
          date: "2000-01-23T04:56:07.000+00:00"
          by:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "resolved"
  LQA:
    allOf:
    - $ref: "#/definitions/CommonConversationDto"
    - type: "object"
      properties:
        type:
          type: "string"
          description: "Field references differs based on the Conversation Type."
        references:
          $ref: "#/definitions/LQAReferences"
  LQAReference:
    type: "object"
    required:
    - "errorCategoryId"
    - "severityId"
    properties:
      errorCategoryId:
        type: "integer"
        format: "int32"
        minimum: 1
      severityId:
        type: "integer"
        format: "int32"
        minimum: 1
      user:
        $ref: "#/definitions/IdReference"
    example:
      errorCategoryId: 1
      severityId: 1
      user:
        id: "id"
  LQAReferences:
    type: "object"
    required:
    - "lqa"
    - "segmentId"
    - "transGroupId"
    properties:
      taskId:
        type: "string"
        readOnly: true
      transGroupId:
        type: "integer"
        format: "int32"
        minimum: 0
      segmentId:
        type: "string"
      conversationTitle:
        type: "string"
      lqa:
        type: "array"
        items:
          $ref: "#/definitions/LQAReference"
        maxItems: 2147483647
        minItems: 1
    example:
      conversationTitle: "conversationTitle"
      segmentId: "segmentId"
      transGroupId: 0
      lqa:
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      - errorCategoryId: 1
        severityId: 1
        user:
          id: "id"
      taskId: "taskId"
  PlainReferences:
    type: "object"
    required:
    - "segmentId"
    - "transGroupId"
    properties:
      taskId:
        type: "string"
        readOnly: true
      transGroupId:
        type: "integer"
        format: "int32"
        minimum: 0
      segmentId:
        type: "string"
      conversationTitle:
        type: "string"
    example:
      conversationTitle: "conversationTitle"
      segmentId: "segmentId"
      transGroupId: 0
      taskId: "taskId"
  SEGMENT_TARGET:
    allOf:
    - $ref: "#/definitions/CommonConversationDto"
    - type: "object"
      properties:
        type:
          type: "string"
          description: "Field references differs based on the Conversation Type."
        references:
          $ref: "#/definitions/PlainReferences"
  StatusDto:
    type: "object"
    properties:
      name:
        type: "string"
        enum:
        - "resolved"
        - "unresolved"
      by:
        $ref: "#/definitions/UserReference"
      date:
        type: "string"
        format: "date-time"
    example:
      date: "2000-01-23T04:56:07.000+00:00"
      by:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "resolved"
  FindConversationsDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
      since:
        type: "string"
      includeDeleted:
        type: "boolean"
        description: "Default: false"
    example:
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      includeDeleted: true
      since: "since"
  DiscountSettingsDto:
    type: "object"
    properties:
      repetition:
        type: "number"
        format: "double"
      tm101:
        type: "number"
        format: "double"
      tm100:
        type: "number"
        format: "double"
      tm95:
        type: "number"
        format: "double"
      tm85:
        type: "number"
        format: "double"
      tm75:
        type: "number"
        format: "double"
      tm50:
        type: "number"
        format: "double"
      tm0:
        type: "number"
        format: "double"
      mt100:
        type: "number"
        format: "double"
      mt95:
        type: "number"
        format: "double"
      mt85:
        type: "number"
        format: "double"
      mt75:
        type: "number"
        format: "double"
      mt50:
        type: "number"
        format: "double"
      mt0:
        type: "number"
        format: "double"
      nt100:
        type: "number"
        format: "double"
      nt99:
        type: "number"
        format: "double"
      nt85:
        type: "number"
        format: "double"
      nt75:
        type: "number"
        format: "double"
      nt50:
        type: "number"
        format: "double"
      nt0:
        type: "number"
        format: "double"
    example:
      tm85: 5.63737665663332876420099637471139430999755859375
      tm75: 2.3021358869347654518833223846741020679473876953125
      tm50: 7.061401241503109105224211816675961017608642578125
      tm95: 5.962133916683182377482808078639209270477294921875
      mt0: 1.024645700144157789424070870154537260532379150390625
      nt100: 1.489415909854170383397331534069962799549102783203125
      nt0: 5.02500479152029466689555192715488374233245849609375
      repetition: 0.80082819046101150206595775671303272247314453125
      tm100: 1.46581298050294517310021547018550336360931396484375
      tm101: 6.02745618307040320615897144307382404804229736328125
      mt95: 2.027123023002321833274663731572218239307403564453125
      nt85: 7.4577447736837658709418974467553198337554931640625
      mt50: 1.231513536777255612975068288506008684635162353515625
      nt50: 4.9652184929849543237878606305457651615142822265625
      nt99: 6.8468526983526398765889098285697400569915771484375
      tm0: 9.301444243932575517419536481611430644989013671875
      mt75: 7.3862819483858839220147274318151175975799560546875
      mt85: 4.1456080298839363962315474054776132106781005859375
      nt75: 1.173074250955943309548956676735542714595794677734375
      mt100: 3.61607674925191080461672754609026014804840087890625
  NetRateScheme:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      organization:
        $ref: "#/definitions/OrganizationReference"
      dateCreated:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
      workflowStepNetSchemes:
        type: "array"
        items:
          $ref: "#/definitions/NetRateSchemeWorkflowStepReference"
      rates:
        $ref: "#/definitions/DiscountSettingsDto"
    example:
      workflowStepNetSchemes:
      - workflowStep:
          name: "name"
          id: "id"
          order: 6
        id: "id"
      - workflowStep:
          name: "name"
          id: "id"
          order: 6
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      organization:
        name: "name"
        id: "id"
      rates:
        tm85: 5.63737665663332876420099637471139430999755859375
        tm75: 2.3021358869347654518833223846741020679473876953125
        tm50: 7.061401241503109105224211816675961017608642578125
        tm95: 5.962133916683182377482808078639209270477294921875
        mt0: 1.024645700144157789424070870154537260532379150390625
        nt100: 1.489415909854170383397331534069962799549102783203125
        nt0: 5.02500479152029466689555192715488374233245849609375
        repetition: 0.80082819046101150206595775671303272247314453125
        tm100: 1.46581298050294517310021547018550336360931396484375
        tm101: 6.02745618307040320615897144307382404804229736328125
        mt95: 2.027123023002321833274663731572218239307403564453125
        nt85: 7.4577447736837658709418974467553198337554931640625
        mt50: 1.231513536777255612975068288506008684635162353515625
        nt50: 4.9652184929849543237878606305457651615142822265625
        nt99: 6.8468526983526398765889098285697400569915771484375
        tm0: 9.301444243932575517419536481611430644989013671875
        mt75: 7.3862819483858839220147274318151175975799560546875
        mt85: 4.1456080298839363962315474054776132106781005859375
        nt75: 1.173074250955943309548956676735542714595794677734375
        mt100: 3.61607674925191080461672754609026014804840087890625
      name: "name"
      id: "id"
  NetRateSchemeWorkflowStepReference:
    type: "object"
    properties:
      id:
        type: "string"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
    example:
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      id: "id"
  PageDtoNetRateSchemeReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/NetRateSchemeReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      totalElements: 0
  DiscountSchemeCreateDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        minLength: 1
        maxLength: 255
      rates:
        $ref: "#/definitions/DiscountSettingsDto"
      workflowStepNetSchemes:
        type: "array"
        items:
          $ref: "#/definitions/NetRateSchemeWorkflowStepCreate"
    example:
      workflowStepNetSchemes:
      - rates:
          tm85: 5.63737665663332876420099637471139430999755859375
          tm75: 2.3021358869347654518833223846741020679473876953125
          tm50: 7.061401241503109105224211816675961017608642578125
          tm95: 5.962133916683182377482808078639209270477294921875
          mt0: 1.024645700144157789424070870154537260532379150390625
          nt100: 1.489415909854170383397331534069962799549102783203125
          nt0: 5.02500479152029466689555192715488374233245849609375
          repetition: 0.80082819046101150206595775671303272247314453125
          tm100: 1.46581298050294517310021547018550336360931396484375
          tm101: 6.02745618307040320615897144307382404804229736328125
          mt95: 2.027123023002321833274663731572218239307403564453125
          nt85: 7.4577447736837658709418974467553198337554931640625
          mt50: 1.231513536777255612975068288506008684635162353515625
          nt50: 4.9652184929849543237878606305457651615142822265625
          nt99: 6.8468526983526398765889098285697400569915771484375
          tm0: 9.301444243932575517419536481611430644989013671875
          mt75: 7.3862819483858839220147274318151175975799560546875
          mt85: 4.1456080298839363962315474054776132106781005859375
          nt75: 1.173074250955943309548956676735542714595794677734375
          mt100: 3.61607674925191080461672754609026014804840087890625
        workflowStep:
          id: "id"
      - rates:
          tm85: 5.63737665663332876420099637471139430999755859375
          tm75: 2.3021358869347654518833223846741020679473876953125
          tm50: 7.061401241503109105224211816675961017608642578125
          tm95: 5.962133916683182377482808078639209270477294921875
          mt0: 1.024645700144157789424070870154537260532379150390625
          nt100: 1.489415909854170383397331534069962799549102783203125
          nt0: 5.02500479152029466689555192715488374233245849609375
          repetition: 0.80082819046101150206595775671303272247314453125
          tm100: 1.46581298050294517310021547018550336360931396484375
          tm101: 6.02745618307040320615897144307382404804229736328125
          mt95: 2.027123023002321833274663731572218239307403564453125
          nt85: 7.4577447736837658709418974467553198337554931640625
          mt50: 1.231513536777255612975068288506008684635162353515625
          nt50: 4.9652184929849543237878606305457651615142822265625
          nt99: 6.8468526983526398765889098285697400569915771484375
          tm0: 9.301444243932575517419536481611430644989013671875
          mt75: 7.3862819483858839220147274318151175975799560546875
          mt85: 4.1456080298839363962315474054776132106781005859375
          nt75: 1.173074250955943309548956676735542714595794677734375
          mt100: 3.61607674925191080461672754609026014804840087890625
        workflowStep:
          id: "id"
      rates:
        tm85: 5.63737665663332876420099637471139430999755859375
        tm75: 2.3021358869347654518833223846741020679473876953125
        tm50: 7.061401241503109105224211816675961017608642578125
        tm95: 5.962133916683182377482808078639209270477294921875
        mt0: 1.024645700144157789424070870154537260532379150390625
        nt100: 1.489415909854170383397331534069962799549102783203125
        nt0: 5.02500479152029466689555192715488374233245849609375
        repetition: 0.80082819046101150206595775671303272247314453125
        tm100: 1.46581298050294517310021547018550336360931396484375
        tm101: 6.02745618307040320615897144307382404804229736328125
        mt95: 2.027123023002321833274663731572218239307403564453125
        nt85: 7.4577447736837658709418974467553198337554931640625
        mt50: 1.231513536777255612975068288506008684635162353515625
        nt50: 4.9652184929849543237878606305457651615142822265625
        nt99: 6.8468526983526398765889098285697400569915771484375
        tm0: 9.301444243932575517419536481611430644989013671875
        mt75: 7.3862819483858839220147274318151175975799560546875
        mt85: 4.1456080298839363962315474054776132106781005859375
        nt75: 1.173074250955943309548956676735542714595794677734375
        mt100: 3.61607674925191080461672754609026014804840087890625
      name: "name"
  NetRateSchemeWorkflowStepCreate:
    type: "object"
    required:
    - "workflowStep"
    properties:
      workflowStep:
        $ref: "#/definitions/IdReference"
      rates:
        $ref: "#/definitions/DiscountSettingsDto"
    example:
      rates:
        tm85: 5.63737665663332876420099637471139430999755859375
        tm75: 2.3021358869347654518833223846741020679473876953125
        tm50: 7.061401241503109105224211816675961017608642578125
        tm95: 5.962133916683182377482808078639209270477294921875
        mt0: 1.024645700144157789424070870154537260532379150390625
        nt100: 1.489415909854170383397331534069962799549102783203125
        nt0: 5.02500479152029466689555192715488374233245849609375
        repetition: 0.80082819046101150206595775671303272247314453125
        tm100: 1.46581298050294517310021547018550336360931396484375
        tm101: 6.02745618307040320615897144307382404804229736328125
        mt95: 2.027123023002321833274663731572218239307403564453125
        nt85: 7.4577447736837658709418974467553198337554931640625
        mt50: 1.231513536777255612975068288506008684635162353515625
        nt50: 4.9652184929849543237878606305457651615142822265625
        nt99: 6.8468526983526398765889098285697400569915771484375
        tm0: 9.301444243932575517419536481611430644989013671875
        mt75: 7.3862819483858839220147274318151175975799560546875
        mt85: 4.1456080298839363962315474054776132106781005859375
        nt75: 1.173074250955943309548956676735542714595794677734375
        mt100: 3.61607674925191080461672754609026014804840087890625
      workflowStep:
        id: "id"
  NetRateSchemeWorkflowStep:
    type: "object"
    properties:
      id:
        type: "string"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      rates:
        $ref: "#/definitions/DiscountSettingsDto"
    example:
      rates:
        tm85: 5.63737665663332876420099637471139430999755859375
        tm75: 2.3021358869347654518833223846741020679473876953125
        tm50: 7.061401241503109105224211816675961017608642578125
        tm95: 5.962133916683182377482808078639209270477294921875
        mt0: 1.024645700144157789424070870154537260532379150390625
        nt100: 1.489415909854170383397331534069962799549102783203125
        nt0: 5.02500479152029466689555192715488374233245849609375
        repetition: 0.80082819046101150206595775671303272247314453125
        tm100: 1.46581298050294517310021547018550336360931396484375
        tm101: 6.02745618307040320615897144307382404804229736328125
        mt95: 2.027123023002321833274663731572218239307403564453125
        nt85: 7.4577447736837658709418974467553198337554931640625
        mt50: 1.231513536777255612975068288506008684635162353515625
        nt50: 4.9652184929849543237878606305457651615142822265625
        nt99: 6.8468526983526398765889098285697400569915771484375
        tm0: 9.301444243932575517419536481611430644989013671875
        mt75: 7.3862819483858839220147274318151175975799560546875
        mt85: 4.1456080298839363962315474054776132106781005859375
        nt75: 1.173074250955943309548956676735542714595794677734375
        mt100: 3.61607674925191080461672754609026014804840087890625
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      id: "id"
  PageDtoNetRateSchemeWorkflowStepReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/NetRateSchemeWorkflowStepReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - workflowStep:
          name: "name"
          id: "id"
          order: 6
        id: "id"
      - workflowStep:
          name: "name"
          id: "id"
          order: 6
        id: "id"
      totalElements: 0
  DomainDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  PageDtoDomainDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/DomainDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      totalElements: 0
  DomainEditDto:
    type: "object"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
    example:
      name: "name"
  OrganizationEmailTemplateDto:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
        enum:
        - "JobAssigned"
        - "JobStatusChanged"
        - "NextWorkflowStep"
        - "JobRejected"
        - "LoginInfo"
        - "ProjectTransferredToBuyer"
        - "SharedProjectAssigned"
        - "SharedProjectStatusChanged"
        - "JobWidgetProjectQuotePrepared"
        - "JobWidgetProjectQuotePreparationFailure"
        - "JobWidgetProjectCreated"
        - "JobWidgetProjectCompleted"
        - "JobBoardResponse"
        - "JobBoardOffer"
        - "CmsQuoteReady"
        - "CmsWorkCompleted"
        - "CmsJobRejected"
        - "QUOTE_UPDATED"
        - "QUOTE_STATUS_CHANGED"
      name:
        type: "string"
      subject:
        type: "string"
      body:
        type: "string"
      ccAddress:
        type: "string"
      bccAddress:
        type: "string"
    example:
      subject: "subject"
      name: "name"
      bccAddress: "bccAddress"
      id: "id"
      type: "JobAssigned"
      body: "body"
      ccAddress: "ccAddress"
  PageDtoOrganizationEmailTemplateDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/OrganizationEmailTemplateDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - subject: "subject"
        name: "name"
        bccAddress: "bccAddress"
        id: "id"
        type: "JobAssigned"
        body: "body"
        ccAddress: "ccAddress"
      - subject: "subject"
        name: "name"
        bccAddress: "bccAddress"
        id: "id"
        type: "JobAssigned"
        body: "body"
        ccAddress: "ccAddress"
      totalElements: 0
  UploadedFileDto:
    type: "object"
    properties:
      uid:
        type: "string"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      size:
        type: "integer"
        format: "int64"
        readOnly: true
      type:
        type: "string"
        readOnly: true
    example:
      uid: "uid"
      size: 0
      name: "name"
      type: "type"
  PageDtoUploadedFileDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/UploadedFileDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - uid: "uid"
        size: 0
        name: "name"
        type: "type"
      - uid: "uid"
        size: 0
        name: "name"
        type: "type"
      totalElements: 0
  RemoteUploadedFileDto:
    type: "object"
    properties:
      uid:
        type: "string"
        readOnly: true
      name:
        type: "string"
        readOnly: true
      size:
        type: "integer"
        format: "int64"
        readOnly: true
      type:
        type: "string"
        readOnly: true
      url:
        type: "string"
    example:
      uid: "uid"
      size: 0
      name: "name"
      type: "type"
      url: "url"
  SearchResponseListTmDto:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/SearchTMResponseDto"
    example:
      searchResults:
      - transMemory:
          name: "name"
          id: "id"
          reverse: true
        score: 9.301444243932575517419536481611430644989013671875
        translations:
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        segmentId: "segmentId"
        subSegment: true
        source:
          modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        grossScore: 7.061401241503109105224211816675961017608642578125
      - transMemory:
          name: "name"
          id: "id"
          reverse: true
        score: 9.301444243932575517419536481611430644989013671875
        translations:
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        segmentId: "segmentId"
        subSegment: true
        source:
          modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        grossScore: 7.061401241503109105224211816675961017608642578125
  SearchTMClientDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 5
  SearchTMDomainDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 5
  SearchTMProjectDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      uid:
        type: "string"
      name:
        type: "string"
    example:
      uid: "uid"
      name: "name"
      id: 1
  SearchTMResponseDto:
    type: "object"
    properties:
      segmentId:
        type: "string"
      source:
        $ref: "#/definitions/SearchTMSegmentDto"
      translations:
        type: "array"
        items:
          $ref: "#/definitions/SearchTMSegmentDto"
      transMemory:
        $ref: "#/definitions/SearchTMTransMemoryDto"
      grossScore:
        type: "number"
        format: "double"
      score:
        type: "number"
        format: "double"
      subSegment:
        type: "boolean"
    example:
      transMemory:
        name: "name"
        id: "id"
        reverse: true
      score: 9.301444243932575517419536481611430644989013671875
      translations:
      - modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      - modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      segmentId: "segmentId"
      subSegment: true
      source:
        modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      grossScore: 7.061401241503109105224211816675961017608642578125
  SearchTMSegmentDto:
    type: "object"
    properties:
      id:
        type: "string"
      text:
        type: "string"
      lang:
        type: "string"
      rtl:
        type: "boolean"
      modifiedAt:
        type: "integer"
        format: "int64"
      createdAt:
        type: "integer"
        format: "int64"
      modifiedBy:
        $ref: "#/definitions/UserReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      filename:
        type: "string"
      project:
        $ref: "#/definitions/SearchTMProjectDto"
      client:
        $ref: "#/definitions/SearchTMClientDto"
      domain:
        $ref: "#/definitions/SearchTMDomainDto"
      subDomain:
        $ref: "#/definitions/SearchTMSubDomainDto"
      tagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadata"
      previousSegment:
        type: "string"
      nextSegment:
        type: "string"
      key:
        type: "string"
    example:
      modifiedAt: 0
      subDomain:
        name: "name"
        id: 2
      project:
        uid: "uid"
        name: "name"
        id: 1
      rtl: true
      tagMetadata:
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      createdAt: 6
      filename: "filename"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      domain:
        name: "name"
        id: 5
      nextSegment: "nextSegment"
      client:
        name: "name"
        id: 5
      modifiedBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      previousSegment: "previousSegment"
      id: "id"
      text: "text"
      lang: "lang"
      key: "key"
  SearchTMSubDomainDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 2
  SearchTMTransMemoryDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      reverse:
        type: "boolean"
    example:
      name: "name"
      id: "id"
      reverse: true
  TagMetadata:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
      content:
        type: "string"
      transAttributes:
        type: "string"
    example:
      transAttributes: "transAttributes"
      id: "id"
      type: "type"
      content: "content"
  WildCardSearchByJobRequestDto:
    type: "object"
    required:
    - "query"
    properties:
      query:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
      reverse:
        type: "boolean"
        description: "Default: false"
      count:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 50
      offset:
        type: "integer"
        format: "int32"
    example:
      offset: 1
      query: "query"
      count: 30
      workflowLevel: 0
      reverse: true
  SearchTMByJobRequestDto:
    type: "object"
    required:
    - "segment"
    properties:
      segment:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 15
      scoreThreshold:
        type: "number"
        format: "double"
        minimum: 0
        maximum: 1.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      previousSegment:
        type: "string"
      nextSegment:
        type: "string"
      contextKey:
        type: "string"
      maxSegments:
        type: "integer"
        format: "int32"
        description: "Default: 5"
        minimum: 0
        maximum: 5
      maxSubSegments:
        type: "integer"
        format: "int32"
        description: "Default: 5"
        minimum: 0
        maximum: 5
      tagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadataDto"
  TagMetadataDto:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
      content:
        type: "string"
      transAttributes:
        type: "string"
    example:
      transAttributes: "transAttributes"
      id: "id"
      type: "type"
      content: "content"
  LQAConversationDto:
    type: "object"
    properties:
      id:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      dateModified:
        type: "string"
        format: "date-time"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/CommentDto"
      status:
        $ref: "#/definitions/StatusDto"
      deleted:
        type: "boolean"
      type:
        type: "string"
        enum:
        - "LQA"
      references:
        $ref: "#/definitions/LQAReferences"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      comments:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        text: "text"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        text: "text"
      deleted: true
      references:
        conversationTitle: "conversationTitle"
        segmentId: "segmentId"
        transGroupId: 0
        lqa:
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        - errorCategoryId: 1
          severityId: 1
          user:
            id: "id"
        taskId: "taskId"
      dateModified: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      type: "LQA"
      status:
        date: "2000-01-23T04:56:07.000+00:00"
        by:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "resolved"
  EditLQAConversationDto:
    type: "object"
    required:
    - "lqa"
    - "status"
    properties:
      lqa:
        type: "array"
        items:
          $ref: "#/definitions/LQAReference"
      status:
        type: "string"
        enum:
        - "resolved"
        - "unresolved"
  LQAConversationsListDto:
    type: "object"
    properties:
      conversations:
        type: "array"
        items:
          $ref: "#/definitions/LQAConversationDto"
    example:
      conversations:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        comments:
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        deleted: true
        references:
          conversationTitle: "conversationTitle"
          segmentId: "segmentId"
          transGroupId: 0
          lqa:
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          taskId: "taskId"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        type: "LQA"
        status:
          date: "2000-01-23T04:56:07.000+00:00"
          by:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "resolved"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        comments:
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        deleted: true
        references:
          conversationTitle: "conversationTitle"
          segmentId: "segmentId"
          transGroupId: 0
          lqa:
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          - errorCategoryId: 1
            severityId: 1
            user:
              id: "id"
          taskId: "taskId"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        type: "LQA"
        status:
          date: "2000-01-23T04:56:07.000+00:00"
          by:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "resolved"
  AddCommentDto:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
    example:
      text: "text"
  CreateLQAConversationDto:
    type: "object"
    required:
    - "references"
    properties:
      comment:
        $ref: "#/definitions/AddCommentDto"
      references:
        $ref: "#/definitions/LQAReferences"
  LanguageDto:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
    example:
      code: "code"
      name: "name"
  LanguageListDto:
    type: "object"
    required:
    - "languages"
    properties:
      languages:
        type: "array"
        items:
          $ref: "#/definitions/LanguageDto"
    description: "envelope for list of languages"
    example:
      languages:
      - code: "code"
        name: "name"
      - code: "code"
        name: "name"
  MachineTranslateSettingsPbmDto:
    type: "object"
    properties:
      id:
        type: "string"
      uid:
        type: "string"
      baseName:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
      default_:
        type: "boolean"
      includeTags:
        type: "boolean"
      mtQualityEstimation:
        type: "boolean"
      args:
        type: "object"
        additionalProperties:
          type: "string"
      payForMtPossible:
        type: "boolean"
      payForMtActive:
        type: "boolean"
      charCount:
        type: "integer"
        format: "int32"
      sharingSettings:
        type: "integer"
        format: "int32"
    example:
      charCount: 2
      mtQualityEstimation: true
      includeTags: true
      type: "type"
      payForMtActive: true
      args:
        key: "args"
      uid: "uid"
      payForMtPossible: true
      sharingSettings: 7
      name: "name"
      default_: true
      id: "id"
      baseName: "baseName"
  PageDtoMachineTranslateSettingsPbmDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/MachineTranslateSettingsPbmDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - charCount: 2
        mtQualityEstimation: true
        includeTags: true
        type: "type"
        payForMtActive: true
        args:
          key: "args"
        uid: "uid"
        payForMtPossible: true
        sharingSettings: 7
        name: "name"
        default_: true
        id: "id"
        baseName: "baseName"
      - charCount: 2
        mtQualityEstimation: true
        includeTags: true
        type: "type"
        payForMtActive: true
        args:
          key: "args"
        uid: "uid"
        payForMtPossible: true
        sharingSettings: 7
        name: "name"
        default_: true
        id: "id"
        baseName: "baseName"
      totalElements: 0
  MachineTranslateStatusDto:
    type: "object"
    properties:
      ok:
        type: "boolean"
      error:
        type: "string"
    example:
      ok: true
      error: "error"
  MachineTranslateSettingsDto:
    type: "object"
    properties:
      id:
        type: "string"
      uid:
        type: "string"
      baseName:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
      default_:
        type: "boolean"
      includeTags:
        type: "boolean"
      mtQualityEstimation:
        type: "boolean"
      args:
        type: "object"
        additionalProperties:
          type: "string"
    example:
      args:
        key: "args"
      uid: "uid"
      mtQualityEstimation: true
      includeTags: true
      name: "name"
      default_: true
      id: "id"
      type: "type"
      baseName: "baseName"
  MachineTranslateResponse:
    type: "object"
    properties:
      translations:
        type: "array"
        items:
          type: "string"
    example:
      translations:
      - "translations"
      - "translations"
  TranslationRequestExtendedDto:
    type: "object"
    required:
    - "from"
    - "sourceTexts"
    - "to"
    properties:
      sourceTexts:
        type: "array"
        items:
          type: "string"
        maxItems: 2147483647
        minItems: 1
      from:
        type: "string"
      to:
        type: "string"
      filename:
        type: "string"
    example:
      filename: "filename"
      sourceTexts:
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      from: "from"
      to: "to"
  TaskMappingDto:
    type: "object"
    properties:
      taskId:
        type: "string"
      workflowLevel:
        type: "string"
      resourcePath:
        type: "string"
      project:
        $ref: "#/definitions/UidReference"
      job:
        $ref: "#/definitions/UidReference"
    example:
      resourcePath: "resourcePath"
      project:
        uid: "uid"
      workflowLevel: "workflowLevel"
      job:
        uid: "uid"
      taskId: "taskId"
  MachineTranslateSettingsReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
    example:
      name: "name"
      id: "id"
      type: "type"
  ProjectTermBaseReference:
    type: "object"
    properties:
      id:
        type: "string"
      termBase:
        $ref: "#/definitions/IdReference"
      name:
        type: "string"
      writeMode:
        type: "boolean"
      targetLang:
        type: "string"
      readMode:
        type: "boolean"
      workflowStep:
        $ref: "#/definitions/IdReference"
    example:
      targetLang: "targetLang"
      termBase:
        id: "id"
      name: "name"
      workflowStep:
        id: "id"
      id: "id"
      writeMode: true
      readMode: true
  ProjectTranslationMemoryReference:
    type: "object"
    properties:
      id:
        type: "string"
      transMem:
        $ref: "#/definitions/IdReference"
      name:
        type: "string"
      workflowStep:
        $ref: "#/definitions/IdReference"
      targetLang:
        type: "string"
      penalty:
        type: "number"
        format: "double"
      readMode:
        type: "boolean"
    example:
      targetLang: "targetLang"
      transMem:
        id: "id"
      penalty: 0.80082819046101150206595775671303272247314453125
      name: "name"
      workflowStep:
        id: "id"
      id: "id"
      readMode: true
  Response:
    type: "object"
    properties:
      context:
        type: "object"
        additionalProperties:
          type: "object"
          properties: {}
      done:
        type: "boolean"
      cancelled:
        type: "boolean"
  ImportSettingsReference:
    type: "object"
    properties:
      uid:
        type: "string"
      name:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
    example:
      uid: "uid"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
  PageDtoImportSettingsReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/ImportSettingsReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - uid: "uid"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
      - uid: "uid"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
      totalElements: 0
  AndroidSettingsDto:
    type: "object"
    properties:
      tagRegexp:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
  CsvSettingsDto:
    type: "object"
    properties:
      delimiter:
        type: "string"
        description: "Default: ,"
      delimiterType:
        type: "string"
        description: "Default: COMMA"
        enum:
        - "TAB"
        - "COMMA"
        - "SEMICOLON"
        - "OTHER"
      htmlSubFilter:
        type: "boolean"
        description: "Default: false"
      tagRegexp:
        type: "string"
      importColumns:
        type: "string"
      contextNoteColumns:
        type: "string"
      contextKeyColumn:
        type: "string"
      maxLenColumn:
        type: "string"
      importRows:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      htmlSubFilter: true
      importRows: "importRows"
      importColumns: "importColumns"
      contextNoteColumns: "contextNoteColumns"
      delimiter: "delimiter"
      maxLenColumn: "maxLenColumn"
      contextKeyColumn: "contextKeyColumn"
      delimiterType: "TAB"
  DitaSettingsDto:
    type: "object"
    properties:
      includeTags:
        type: "string"
      excludeTags:
        type: "string"
      inlineTags:
        type: "string"
      inlineTagsNonTranslatable:
        type: "string"
    example:
      excludeTags: "excludeTags"
      inlineTags: "inlineTags"
      inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
      includeTags: "includeTags"
  DocBookSettingsDto:
    type: "object"
    properties:
      includeTags:
        type: "string"
      excludeTags:
        type: "string"
      inlineTags:
        type: "string"
      inlineTagsNonTranslatable:
        type: "string"
    example:
      excludeTags: "excludeTags"
      inlineTags: "inlineTags"
      inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
      includeTags: "includeTags"
  DocSettingsDto:
    type: "object"
    properties:
      comments:
        type: "boolean"
        description: "Default: false"
      index:
        type: "boolean"
        description: "Default: true"
      other:
        type: "boolean"
        description: "Default: false"
      tagRegexp:
        type: "string"
      hyperlinkTarget:
        type: "boolean"
        description: "Default: false"
      joinSimilarRuns:
        type: "boolean"
        description: "Default: false"
      targetFont:
        type: "string"
      properties:
        type: "boolean"
        description: "Default: false"
      hidden:
        type: "boolean"
        description: "Default: false"
    example:
      tagRegexp: "tagRegexp"
      other: true
      comments: true
      hyperlinkTarget: true
      hidden: true
      joinSimilarRuns: true
      index: true
      targetFont: "targetFont"
      properties: true
  FileImportSettingsDto:
    type: "object"
    properties:
      inputCharset:
        type: "string"
      outputCharset:
        type: "string"
      zipCharset:
        type: "string"
      fileFormat:
        type: "string"
      targetLength:
        type: "boolean"
      targetLengthMax:
        type: "integer"
        format: "int32"
      targetLengthPercent:
        type: "boolean"
      targetLengthPercentValue:
        type: "number"
        format: "double"
      android:
        $ref: "#/definitions/AndroidSettingsDto"
      idml:
        $ref: "#/definitions/IdmlSettingsDto"
      xls:
        $ref: "#/definitions/XlsSettingsDto"
      multilingualXml:
        $ref: "#/definitions/MultilingualXmlSettingsDto"
      php:
        $ref: "#/definitions/PhpSettingsDto"
      resx:
        $ref: "#/definitions/ResxSettingsDto"
      json:
        $ref: "#/definitions/JsonSettingsDto"
      html:
        $ref: "#/definitions/HtmlSettingsDto"
      multilingualXls:
        $ref: "#/definitions/MultilingualXlsSettingsDto"
      multilingualCsv:
        $ref: "#/definitions/MultilingualCsvSettingsDto"
      csv:
        $ref: "#/definitions/CsvSettingsDto"
      txt:
        $ref: "#/definitions/TxtSettingsDto"
      xlf2:
        $ref: "#/definitions/Xlf2SettingsDto"
      quarkTag:
        $ref: "#/definitions/QuarkTagSettingsDto"
      pdf:
        $ref: "#/definitions/PdfSettingsDto"
      tmMatch:
        $ref: "#/definitions/TMMatchSettingsDto"
      xml:
        $ref: "#/definitions/XmlSettingsDto"
      mif:
        $ref: "#/definitions/MifSettingsDto"
      properties:
        $ref: "#/definitions/PropertiesSettingsDto"
      doc:
        $ref: "#/definitions/DocSettingsDto"
      xlf:
        $ref: "#/definitions/XlfSettingsDto"
      sdlXlf:
        $ref: "#/definitions/SdlXlfSettingsDto"
      ttx:
        $ref: "#/definitions/TtxSettingsDto"
      ppt:
        $ref: "#/definitions/PptSettingsDto"
      yaml:
        $ref: "#/definitions/YamlSettingsDto"
      dita:
        $ref: "#/definitions/DitaSettingsDto"
      docBook:
        $ref: "#/definitions/DocBookSettingsDto"
      po:
        $ref: "#/definitions/PoSettingsDto"
      mac:
        $ref: "#/definitions/MacSettingsDto"
      md:
        $ref: "#/definitions/MdSettingsDto"
      psd:
        $ref: "#/definitions/PsdSettingsDto"
      segRule:
        $ref: "#/definitions/SegRuleReference"
      targetSegRule:
        $ref: "#/definitions/SegRuleReference"
    example:
      psd:
        extractLockedLayers: true
        extractHiddenLayers: true
      targetLengthPercent: true
      android:
        tagRegexp: "tagRegexp"
      csv:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        importRows: "importRows"
        importColumns: "importColumns"
        contextNoteColumns: "contextNoteColumns"
        delimiter: "delimiter"
        maxLenColumn: "maxLenColumn"
        contextKeyColumn: "contextKeyColumn"
        delimiterType: "TAB"
      sdlXlf:
        saveConfirmedSegments: true
        importAsConfirmedRules: "importAsConfirmedRules"
        exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
        importAsLockedRules: "importAsLockedRules"
        exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
        exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
        exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
        skipImportRules: "skipImportRules"
      multilingualCsv:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        importRows: "importRows"
        targetColumns:
          key: "targetColumns"
        contextNoteColumns: "contextNoteColumns"
        delimiter: "delimiter"
        contextKeyColumns: "contextKeyColumns"
        delimiterType: "TAB"
        segmentation: true
        sourceColumns: "sourceColumns"
        maxLenColumns: "maxLenColumns"
      idml:
        tagRegexp: "tagRegexp"
        keepTracking: true
        extractMasterSpreads: true
        extractLockedLayers: true
        extractInvisibleLayers: true
        simplifyCodes: true
        removeXmlElements: true
        extractNotes: true
        extractVariables: true
        extractHiddenConditionalText: true
        targetFont: "targetFont"
        extractHyperlinks: true
        keepKerning: true
        replaceFont: true
      mif:
        extractLinks: true
        extractDefaultReferencePages: true
        extractPgfNumFormat: true
        extractReferencePages: true
        extractMasterPages: true
        extractHiddenPages: true
        extractXRefDef: true
        extractBodyPages: true
        extractUsedXRefDef: true
        extractUsedVariables: true
        extractUsedPgfNumFormat: true
        extractHiddenCondText: true
        extractVariables: true
        extractCustomReferencePages: true
        extractIndexMarkers: true
      targetSegRule:
        filename: "filename"
        name: "name"
        language: "language"
        primary: true
      mac:
        tagRegexp: "tagRegexp"
        htmlSubfilter: true
      targetLengthPercentValue: 6.02745618307040320615897144307382404804229736328125
      multilingualXls:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        importRows: "importRows"
        targetColumns:
          key: "targetColumns"
        maxLenColumn: "maxLenColumn"
        contextKeyColumn: "contextKeyColumn"
        segmentation: true
        contextNoteColumn: "contextNoteColumn"
        sourceColumn: "sourceColumn"
      xml:
        excludeElementsPlain: "excludeElementsPlain"
        rulesFormat: "PLAIN"
        preserveWhitespaceXPath: "preserveWhitespaceXPath"
        maxLenXPath: "maxLenXPath"
        inlineElementsAutoXPath: true
        lockElementsPlain: "lockElementsPlain"
        lockXPath: "lockXPath"
        contextKeyXPath: "contextKeyXPath"
        xslUrl: "xslUrl"
        includeAttributesPlain: "includeAttributesPlain"
        preserveCharEntities: "preserveCharEntities"
        inlineElementsAutoPlain: true
        segmentation: true
        inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
        tagRegexp: "tagRegexp"
        contextNoteXpath: "contextNoteXpath"
        includeXPath: "includeXPath"
        lockAttributesPlain: "lockAttributesPlain"
        excludeAttributesPlain: "excludeAttributesPlain"
        inlineElementsNonTranslatablePlain: "inlineElementsNonTranslatablePlain"
        htmlSubfilterElementsPlain: "htmlSubfilterElementsPlain"
        includeElementsPlain: "includeElementsPlain"
        htmlSubfilterElementsXpath: "htmlSubfilterElementsXpath"
        entities: true
        importComments: true
        inlineElementsXpath: "inlineElementsXpath"
        inlineElementsPlain: "inlineElementsPlain"
      targetLength: true
      md:
        tagRegexp: "tagRegexp"
        flavor: "PLAIN"
        hardLineBreaksSegments: true
        customElements: "customElements"
        ignoredBlockPrefixes: "ignoredBlockPrefixes"
        extractCodeBlocks: true
        preserveWhiteSpaces: true
        processJekyllFrontMatter: true
        notEscapedCharacters: "notEscapedCharacters"
      quarkTag:
        removeKerningTrackingTags: true
      json:
        tagRegexp: "tagRegexp"
        maxLenPath: "maxLenPath"
        htmlSubFilter: true
        contextNotePath: "contextNotePath"
        includeKeyRegexp: "includeKeyRegexp"
        contextKeyPath: "contextKeyPath"
        excludeKeyRegexp: "excludeKeyRegexp"
      html:
        tagRegexp: "tagRegexp"
        excludeElements: "excludeElements"
        importComments: true
        charEntitiesToTags: "charEntitiesToTags"
        preserveWhitespace: true
        translateMetaTagRegexp: "translateMetaTagRegexp"
        breakTagCreatesSegment: true
        unknownTagCreatesTag: true
      outputCharset: "outputCharset"
      dita:
        excludeTags: "excludeTags"
        inlineTags: "inlineTags"
        inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
        includeTags: "includeTags"
      yaml:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        contextPath: "contextPath"
        includeKeyRegexp: "includeKeyRegexp"
        contextKeyPath: "contextKeyPath"
        excludeValueRegexp: "excludeValueRegexp"
      segRule:
        filename: "filename"
        name: "name"
        language: "language"
        primary: true
      docBook:
        excludeTags: "excludeTags"
        inlineTags: "inlineTags"
        inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
        includeTags: "includeTags"
      resx:
        tagRegexp: "tagRegexp"
      zipCharset: "zipCharset"
      txt:
        tagRegexp: "tagRegexp"
        translatableTextRegexp: "translatableTextRegexp"
      tmMatch:
        penalizeMultiContextMatch: true
        prevOrNextSegment: true
        contextType: "AUTO"
        ignoreTagMetadata: true
      pdf:
        filter: "TRANS_PDF"
      xlf:
        importNotes: true
        importAsConfirmedRules: "importAsConfirmedRules"
        importXPath: "importXPath"
        importAsConfirmedXPath: "importAsConfirmedXPath"
        importAsLockedRules: "importAsLockedRules"
        exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
        skipImportRules: "skipImportRules"
        saveConfirmedSegments: true
        exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
        lineBreakTags: true
        preserveWhitespace: true
        contextType: "contextType"
        copySourceToTargetIfNotImported: true
        segmentation: true
        exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
        importAsLockedXPath: "importAsLockedXPath"
        exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
      ppt:
        hiddenSlides: true
        other: true
        notes: true
        masterSlides: true
      targetLengthMax: 0
      xlf2:
        importNotes: true
        importAsConfirmedRules: "importAsConfirmedRules"
        respectTranslateAttr: true
        importAsLockedRules: "importAsLockedRules"
        exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
        skipImportRules: "skipImportRules"
        saveConfirmedSegments: true
        contextKeyXPath: "contextKeyXPath"
        lineBreakTags: true
        preserveWhitespace: true
        copySourceToTargetIfNotImported: true
        exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
        segmentation: true
        exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
        exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
      php:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
      doc:
        tagRegexp: "tagRegexp"
        other: true
        comments: true
        hyperlinkTarget: true
        hidden: true
        joinSimilarRuns: true
        index: true
        targetFont: "targetFont"
        properties: true
      ttx:
        saveConfirmedSegments: true
      inputCharset: "inputCharset"
      multilingualXml:
        tagRegexp: "tagRegexp"
        sourceElementsXPath: "sourceElementsXPath"
        maxLenXPath: "maxLenXPath"
        translatableElementsXPath: "translatableElementsXPath"
        htmlSubFilter: true
        contextKeyXPath: "contextKeyXPath"
        xslUrl: "xslUrl"
        contextNoteXPath: "contextNoteXPath"
        preserveWhitespace: true
        targetElementsXPaths:
          key: "targetElementsXPaths"
        preserveCharEntities: "preserveCharEntities"
        segmentation: true
        inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
      fileFormat: "fileFormat"
      xls:
        tagRegexp: "tagRegexp"
        other: true
        comments: true
        hidden: true
        htmlSubfilter: true
        cellFlow: "DownRight"
        sheetNames: true
        specifiedColumns: "specifiedColumns"
      properties:
        tagRegexp: "tagRegexp"
      po:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        markupSubFilterTranslatable: "markupSubFilterTranslatable"
        exportMultiline: true
        markupSubFilterNonTranslatable: "markupSubFilterNonTranslatable"
        segment: true
  HtmlSettingsDto:
    type: "object"
    properties:
      breakTagCreatesSegment:
        type: "boolean"
        description: "Default: true"
      unknownTagCreatesTag:
        type: "boolean"
        description: "Default: true"
      preserveWhitespace:
        type: "boolean"
        description: "Default: false"
      importComments:
        type: "boolean"
        description: "Default: true"
      excludeElements:
        type: "string"
        description: "Example: \"script,blockquote\""
      tagRegexp:
        type: "string"
      charEntitiesToTags:
        type: "string"
      translateMetaTagRegexp:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      excludeElements: "excludeElements"
      importComments: true
      charEntitiesToTags: "charEntitiesToTags"
      preserveWhitespace: true
      translateMetaTagRegexp: "translateMetaTagRegexp"
      breakTagCreatesSegment: true
      unknownTagCreatesTag: true
  IdmlSettingsDto:
    type: "object"
    properties:
      extractNotes:
        type: "boolean"
        description: "Default: false"
      simplifyCodes:
        type: "boolean"
        description: "Default: true"
      extractMasterSpreads:
        type: "boolean"
        description: "Default: true"
      extractLockedLayers:
        type: "boolean"
        description: "Default: true"
      extractInvisibleLayers:
        type: "boolean"
        description: "Default: false"
      extractHiddenConditionalText:
        type: "boolean"
        description: "Default: false"
      extractHyperlinks:
        type: "boolean"
        description: "Default: false"
      keepKerning:
        type: "boolean"
        description: "Default: false"
      keepTracking:
        type: "boolean"
        description: "Default: false"
      targetFont:
        type: "string"
      replaceFont:
        type: "boolean"
        description: "Default: true"
      removeXmlElements:
        type: "boolean"
        description: "Default: false"
      tagRegexp:
        type: "string"
      extractVariables:
        type: "boolean"
        description: "Default: true"
    example:
      tagRegexp: "tagRegexp"
      keepTracking: true
      extractMasterSpreads: true
      extractLockedLayers: true
      extractInvisibleLayers: true
      simplifyCodes: true
      removeXmlElements: true
      extractNotes: true
      extractVariables: true
      extractHiddenConditionalText: true
      targetFont: "targetFont"
      extractHyperlinks: true
      keepKerning: true
      replaceFont: true
  ImportSettingsDto:
    type: "object"
    properties:
      uid:
        type: "string"
      name:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      fileImportSettings:
        $ref: "#/definitions/FileImportSettingsDto"
    example:
      fileImportSettings:
        psd:
          extractLockedLayers: true
          extractHiddenLayers: true
        targetLengthPercent: true
        android:
          tagRegexp: "tagRegexp"
        csv:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          importRows: "importRows"
          importColumns: "importColumns"
          contextNoteColumns: "contextNoteColumns"
          delimiter: "delimiter"
          maxLenColumn: "maxLenColumn"
          contextKeyColumn: "contextKeyColumn"
          delimiterType: "TAB"
        sdlXlf:
          saveConfirmedSegments: true
          importAsConfirmedRules: "importAsConfirmedRules"
          exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
          importAsLockedRules: "importAsLockedRules"
          exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
          exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
          exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
          skipImportRules: "skipImportRules"
        multilingualCsv:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          importRows: "importRows"
          targetColumns:
            key: "targetColumns"
          contextNoteColumns: "contextNoteColumns"
          delimiter: "delimiter"
          contextKeyColumns: "contextKeyColumns"
          delimiterType: "TAB"
          segmentation: true
          sourceColumns: "sourceColumns"
          maxLenColumns: "maxLenColumns"
        idml:
          tagRegexp: "tagRegexp"
          keepTracking: true
          extractMasterSpreads: true
          extractLockedLayers: true
          extractInvisibleLayers: true
          simplifyCodes: true
          removeXmlElements: true
          extractNotes: true
          extractVariables: true
          extractHiddenConditionalText: true
          targetFont: "targetFont"
          extractHyperlinks: true
          keepKerning: true
          replaceFont: true
        mif:
          extractLinks: true
          extractDefaultReferencePages: true
          extractPgfNumFormat: true
          extractReferencePages: true
          extractMasterPages: true
          extractHiddenPages: true
          extractXRefDef: true
          extractBodyPages: true
          extractUsedXRefDef: true
          extractUsedVariables: true
          extractUsedPgfNumFormat: true
          extractHiddenCondText: true
          extractVariables: true
          extractCustomReferencePages: true
          extractIndexMarkers: true
        targetSegRule:
          filename: "filename"
          name: "name"
          language: "language"
          primary: true
        mac:
          tagRegexp: "tagRegexp"
          htmlSubfilter: true
        targetLengthPercentValue: 6.02745618307040320615897144307382404804229736328125
        multilingualXls:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          importRows: "importRows"
          targetColumns:
            key: "targetColumns"
          maxLenColumn: "maxLenColumn"
          contextKeyColumn: "contextKeyColumn"
          segmentation: true
          contextNoteColumn: "contextNoteColumn"
          sourceColumn: "sourceColumn"
        xml:
          excludeElementsPlain: "excludeElementsPlain"
          rulesFormat: "PLAIN"
          preserveWhitespaceXPath: "preserveWhitespaceXPath"
          maxLenXPath: "maxLenXPath"
          inlineElementsAutoXPath: true
          lockElementsPlain: "lockElementsPlain"
          lockXPath: "lockXPath"
          contextKeyXPath: "contextKeyXPath"
          xslUrl: "xslUrl"
          includeAttributesPlain: "includeAttributesPlain"
          preserveCharEntities: "preserveCharEntities"
          inlineElementsAutoPlain: true
          segmentation: true
          inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
          tagRegexp: "tagRegexp"
          contextNoteXpath: "contextNoteXpath"
          includeXPath: "includeXPath"
          lockAttributesPlain: "lockAttributesPlain"
          excludeAttributesPlain: "excludeAttributesPlain"
          inlineElementsNonTranslatablePlain: "inlineElementsNonTranslatablePlain"
          htmlSubfilterElementsPlain: "htmlSubfilterElementsPlain"
          includeElementsPlain: "includeElementsPlain"
          htmlSubfilterElementsXpath: "htmlSubfilterElementsXpath"
          entities: true
          importComments: true
          inlineElementsXpath: "inlineElementsXpath"
          inlineElementsPlain: "inlineElementsPlain"
        targetLength: true
        md:
          tagRegexp: "tagRegexp"
          flavor: "PLAIN"
          hardLineBreaksSegments: true
          customElements: "customElements"
          ignoredBlockPrefixes: "ignoredBlockPrefixes"
          extractCodeBlocks: true
          preserveWhiteSpaces: true
          processJekyllFrontMatter: true
          notEscapedCharacters: "notEscapedCharacters"
        quarkTag:
          removeKerningTrackingTags: true
        json:
          tagRegexp: "tagRegexp"
          maxLenPath: "maxLenPath"
          htmlSubFilter: true
          contextNotePath: "contextNotePath"
          includeKeyRegexp: "includeKeyRegexp"
          contextKeyPath: "contextKeyPath"
          excludeKeyRegexp: "excludeKeyRegexp"
        html:
          tagRegexp: "tagRegexp"
          excludeElements: "excludeElements"
          importComments: true
          charEntitiesToTags: "charEntitiesToTags"
          preserveWhitespace: true
          translateMetaTagRegexp: "translateMetaTagRegexp"
          breakTagCreatesSegment: true
          unknownTagCreatesTag: true
        outputCharset: "outputCharset"
        dita:
          excludeTags: "excludeTags"
          inlineTags: "inlineTags"
          inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
          includeTags: "includeTags"
        yaml:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          contextPath: "contextPath"
          includeKeyRegexp: "includeKeyRegexp"
          contextKeyPath: "contextKeyPath"
          excludeValueRegexp: "excludeValueRegexp"
        segRule:
          filename: "filename"
          name: "name"
          language: "language"
          primary: true
        docBook:
          excludeTags: "excludeTags"
          inlineTags: "inlineTags"
          inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
          includeTags: "includeTags"
        resx:
          tagRegexp: "tagRegexp"
        zipCharset: "zipCharset"
        txt:
          tagRegexp: "tagRegexp"
          translatableTextRegexp: "translatableTextRegexp"
        tmMatch:
          penalizeMultiContextMatch: true
          prevOrNextSegment: true
          contextType: "AUTO"
          ignoreTagMetadata: true
        pdf:
          filter: "TRANS_PDF"
        xlf:
          importNotes: true
          importAsConfirmedRules: "importAsConfirmedRules"
          importXPath: "importXPath"
          importAsConfirmedXPath: "importAsConfirmedXPath"
          importAsLockedRules: "importAsLockedRules"
          exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
          skipImportRules: "skipImportRules"
          saveConfirmedSegments: true
          exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
          lineBreakTags: true
          preserveWhitespace: true
          contextType: "contextType"
          copySourceToTargetIfNotImported: true
          segmentation: true
          exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
          importAsLockedXPath: "importAsLockedXPath"
          exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
        ppt:
          hiddenSlides: true
          other: true
          notes: true
          masterSlides: true
        targetLengthMax: 0
        xlf2:
          importNotes: true
          importAsConfirmedRules: "importAsConfirmedRules"
          respectTranslateAttr: true
          importAsLockedRules: "importAsLockedRules"
          exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
          skipImportRules: "skipImportRules"
          saveConfirmedSegments: true
          contextKeyXPath: "contextKeyXPath"
          lineBreakTags: true
          preserveWhitespace: true
          copySourceToTargetIfNotImported: true
          exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
          segmentation: true
          exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
          exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
        php:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
        doc:
          tagRegexp: "tagRegexp"
          other: true
          comments: true
          hyperlinkTarget: true
          hidden: true
          joinSimilarRuns: true
          index: true
          targetFont: "targetFont"
          properties: true
        ttx:
          saveConfirmedSegments: true
        inputCharset: "inputCharset"
        multilingualXml:
          tagRegexp: "tagRegexp"
          sourceElementsXPath: "sourceElementsXPath"
          maxLenXPath: "maxLenXPath"
          translatableElementsXPath: "translatableElementsXPath"
          htmlSubFilter: true
          contextKeyXPath: "contextKeyXPath"
          xslUrl: "xslUrl"
          contextNoteXPath: "contextNoteXPath"
          preserveWhitespace: true
          targetElementsXPaths:
            key: "targetElementsXPaths"
          preserveCharEntities: "preserveCharEntities"
          segmentation: true
          inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
        fileFormat: "fileFormat"
        xls:
          tagRegexp: "tagRegexp"
          other: true
          comments: true
          hidden: true
          htmlSubfilter: true
          cellFlow: "DownRight"
          sheetNames: true
          specifiedColumns: "specifiedColumns"
        properties:
          tagRegexp: "tagRegexp"
        po:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          markupSubFilterTranslatable: "markupSubFilterTranslatable"
          exportMultiline: true
          markupSubFilterNonTranslatable: "markupSubFilterNonTranslatable"
          segment: true
      uid: "uid"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
  JsonSettingsDto:
    type: "object"
    properties:
      tagRegexp:
        type: "string"
      htmlSubFilter:
        type: "boolean"
        description: "Default: true"
      excludeKeyRegexp:
        type: "string"
      includeKeyRegexp:
        type: "string"
      contextNotePath:
        type: "string"
      maxLenPath:
        type: "string"
      contextKeyPath:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      maxLenPath: "maxLenPath"
      htmlSubFilter: true
      contextNotePath: "contextNotePath"
      includeKeyRegexp: "includeKeyRegexp"
      contextKeyPath: "contextKeyPath"
      excludeKeyRegexp: "excludeKeyRegexp"
  MacSettingsDto:
    type: "object"
    properties:
      htmlSubfilter:
        type: "boolean"
        description: "Default: false"
      tagRegexp:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      htmlSubfilter: true
  MdSettingsDto:
    type: "object"
    properties:
      hardLineBreaksSegments:
        type: "boolean"
        description: "Default: true"
      preserveWhiteSpaces:
        type: "boolean"
        description: "Default: false"
      tagRegexp:
        type: "string"
      customElements:
        type: "string"
      ignoredBlockPrefixes:
        type: "string"
      flavor:
        type: "string"
        description: "Default: PLAIN"
        enum:
        - "PLAIN"
        - "PHP"
      processJekyllFrontMatter:
        type: "boolean"
        description: "Default: false"
      extractCodeBlocks:
        type: "boolean"
        description: "Default: true"
      notEscapedCharacters:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      flavor: "PLAIN"
      hardLineBreaksSegments: true
      customElements: "customElements"
      ignoredBlockPrefixes: "ignoredBlockPrefixes"
      extractCodeBlocks: true
      preserveWhiteSpaces: true
      processJekyllFrontMatter: true
      notEscapedCharacters: "notEscapedCharacters"
  MifSettingsDto:
    type: "object"
    properties:
      extractBodyPages:
        type: "boolean"
        description: "Default: true"
      extractReferencePages:
        type: "boolean"
        description: "Default: false"
      extractMasterPages:
        type: "boolean"
        description: "Default: true"
      extractHiddenPages:
        type: "boolean"
        description: "Default: false"
      extractVariables:
        type: "boolean"
        description: "Default: false"
      extractIndexMarkers:
        type: "boolean"
        description: "Default: true"
      extractLinks:
        type: "boolean"
        description: "Default: false"
      extractXRefDef:
        type: "boolean"
        description: "Default: false"
      extractPgfNumFormat:
        type: "boolean"
        description: "Default: true"
      extractCustomReferencePages:
        type: "boolean"
        description: "Default: true"
      extractDefaultReferencePages:
        type: "boolean"
        description: "Default: false"
      extractUsedVariables:
        type: "boolean"
        description: "Default: true"
      extractHiddenCondText:
        type: "boolean"
        description: "Default: false"
      extractUsedXRefDef:
        type: "boolean"
        description: "Default: true"
      extractUsedPgfNumFormat:
        type: "boolean"
        description: "Default: true"
    example:
      extractLinks: true
      extractDefaultReferencePages: true
      extractPgfNumFormat: true
      extractReferencePages: true
      extractMasterPages: true
      extractHiddenPages: true
      extractXRefDef: true
      extractBodyPages: true
      extractUsedXRefDef: true
      extractUsedVariables: true
      extractUsedPgfNumFormat: true
      extractHiddenCondText: true
      extractVariables: true
      extractCustomReferencePages: true
      extractIndexMarkers: true
  MultilingualCsvSettingsDto:
    type: "object"
    required:
    - "delimiter"
    - "delimiterType"
    properties:
      sourceColumns:
        type: "string"
      targetColumns:
        type: "object"
        description: "Format: \"language\":\"column\"; example: {\"en\": \"A\", \"\
          sk\": \"B\"}"
        additionalProperties:
          type: "string"
      contextNoteColumns:
        type: "string"
      contextKeyColumns:
        type: "string"
      tagRegexp:
        type: "string"
      htmlSubFilter:
        type: "boolean"
        description: "Default: false"
      segmentation:
        type: "boolean"
        description: "Default: true"
      delimiter:
        type: "string"
        description: "Default: \",\""
        minLength: 1
        maxLength: 255
      delimiterType:
        type: "string"
        description: "Default: COMMA"
        minLength: 1
        maxLength: 255
        enum:
        - "TAB"
        - "COMMA"
        - "SEMICOLON"
        - "OTHER"
      importRows:
        type: "string"
      maxLenColumns:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      htmlSubFilter: true
      importRows: "importRows"
      targetColumns:
        key: "targetColumns"
      contextNoteColumns: "contextNoteColumns"
      delimiter: "delimiter"
      contextKeyColumns: "contextKeyColumns"
      delimiterType: "TAB"
      segmentation: true
      sourceColumns: "sourceColumns"
      maxLenColumns: "maxLenColumns"
  MultilingualXlsSettingsDto:
    type: "object"
    properties:
      sourceColumn:
        type: "string"
      targetColumns:
        type: "object"
        description: "Format: \"language\":\"column\"; example: {\"en\": \"A\", \"\
          sk\": \"B\"}"
        additionalProperties:
          type: "string"
      contextNoteColumn:
        type: "string"
      contextKeyColumn:
        type: "string"
      tagRegexp:
        type: "string"
      htmlSubFilter:
        type: "boolean"
        description: "Default: false"
      segmentation:
        type: "boolean"
        description: "Default: true"
      importRows:
        type: "string"
      maxLenColumn:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      htmlSubFilter: true
      importRows: "importRows"
      targetColumns:
        key: "targetColumns"
      maxLenColumn: "maxLenColumn"
      contextKeyColumn: "contextKeyColumn"
      segmentation: true
      contextNoteColumn: "contextNoteColumn"
      sourceColumn: "sourceColumn"
  MultilingualXmlSettingsDto:
    type: "object"
    properties:
      translatableElementsXPath:
        type: "string"
      sourceElementsXPath:
        type: "string"
      targetElementsXPaths:
        type: "object"
        description: "'Format: \"language\":\"xpath\";\n            example = '{\"\
          en\": \"tuv[@lang='en']/seg\", \"sk\": \"tuv[@lang='sk']/seg\"}"
        additionalProperties:
          type: "string"
      inlineElementsNonTranslatableXPath:
        type: "string"
      tagRegexp:
        type: "string"
      segmentation:
        type: "boolean"
        description: "Default: true"
      htmlSubFilter:
        type: "boolean"
        description: "Default: false"
      contextKeyXPath:
        type: "string"
      contextNoteXPath:
        type: "string"
      maxLenXPath:
        type: "string"
      preserveWhitespace:
        type: "boolean"
        description: "Default: false"
      preserveCharEntities:
        type: "string"
      xslUrl:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      sourceElementsXPath: "sourceElementsXPath"
      maxLenXPath: "maxLenXPath"
      translatableElementsXPath: "translatableElementsXPath"
      htmlSubFilter: true
      contextKeyXPath: "contextKeyXPath"
      xslUrl: "xslUrl"
      contextNoteXPath: "contextNoteXPath"
      preserveWhitespace: true
      targetElementsXPaths:
        key: "targetElementsXPaths"
      preserveCharEntities: "preserveCharEntities"
      segmentation: true
      inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
  PdfSettingsDto:
    type: "object"
    properties:
      filter:
        type: "string"
        description: "Default: TRANS_PDF"
        enum:
        - "TRANS_PDF"
        - "DEFAULT"
    example:
      filter: "TRANS_PDF"
  PhpSettingsDto:
    type: "object"
    properties:
      tagRegexp:
        type: "string"
      htmlSubFilter:
        type: "boolean"
        description: "Default: false"
    example:
      tagRegexp: "tagRegexp"
      htmlSubFilter: true
  PoSettingsDto:
    type: "object"
    properties:
      tagRegexp:
        type: "string"
      exportMultiline:
        type: "boolean"
        description: "Default: true"
      htmlSubFilter:
        type: "boolean"
      segment:
        type: "boolean"
      markupSubFilterTranslatable:
        type: "string"
      markupSubFilterNonTranslatable:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      htmlSubFilter: true
      markupSubFilterTranslatable: "markupSubFilterTranslatable"
      exportMultiline: true
      markupSubFilterNonTranslatable: "markupSubFilterNonTranslatable"
      segment: true
  PptSettingsDto:
    type: "object"
    properties:
      hiddenSlides:
        type: "boolean"
        description: "Default: false"
      other:
        type: "boolean"
        description: "Default: false"
      notes:
        type: "boolean"
        description: "Default: false"
      masterSlides:
        type: "boolean"
        description: "Default: false"
    example:
      hiddenSlides: true
      other: true
      notes: true
      masterSlides: true
  PropertiesSettingsDto:
    type: "object"
    properties:
      tagRegexp:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
  PsdSettingsDto:
    type: "object"
    properties:
      extractHiddenLayers:
        type: "boolean"
        description: "Default: true"
      extractLockedLayers:
        type: "boolean"
        description: "Default: true"
    example:
      extractLockedLayers: true
      extractHiddenLayers: true
  QuarkTagSettingsDto:
    type: "object"
    properties:
      removeKerningTrackingTags:
        type: "boolean"
        description: "Default: false"
    example:
      removeKerningTrackingTags: true
  ResxSettingsDto:
    type: "object"
    properties:
      tagRegexp:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
  SdlXlfSettingsDto:
    type: "object"
    properties:
      skipImportRules:
        type: "string"
        description: "Default: translate=no"
      importAsConfirmedRules:
        type: "string"
      importAsLockedRules:
        type: "string"
        description: "Default: locked=true"
      exportAttrsWhenConfirmedAndLocked:
        type: "string"
        description: "Default: locked=true"
      exportAttrsWhenConfirmedAndNotLocked:
        type: "string"
      exportAttrsWhenNotConfirmedAndLocked:
        type: "string"
        description: "Default: locked=true"
      exportAttrsWhenNotConfirmedAndNotLocked:
        type: "string"
      saveConfirmedSegments:
        type: "boolean"
        description: "Default: true"
    example:
      saveConfirmedSegments: true
      importAsConfirmedRules: "importAsConfirmedRules"
      exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
      importAsLockedRules: "importAsLockedRules"
      exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
      exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
      exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
      skipImportRules: "skipImportRules"
  SegRuleReference:
    type: "object"
    properties:
      language:
        type: "string"
      name:
        type: "string"
      filename:
        type: "string"
      primary:
        type: "boolean"
    example:
      filename: "filename"
      name: "name"
      language: "language"
      primary: true
  TMMatchSettingsDto:
    type: "object"
    properties:
      contextType:
        type: "string"
        description: "Default: PREV_AND_NEXT_SEGMENT"
        enum:
        - "AUTO"
        - "PREV_AND_NEXT_SEGMENT"
        - "SEGMENT_KEY"
        - "NO_CONTEXT"
      prevOrNextSegment:
        type: "boolean"
        description: "Default: false"
      penalizeMultiContextMatch:
        type: "boolean"
        description: "Default: false"
      ignoreTagMetadata:
        type: "boolean"
        description: "Default: true"
    example:
      penalizeMultiContextMatch: true
      prevOrNextSegment: true
      contextType: "AUTO"
      ignoreTagMetadata: true
  TtxSettingsDto:
    type: "object"
    properties:
      saveConfirmedSegments:
        type: "boolean"
        description: "Default: true"
    example:
      saveConfirmedSegments: true
  TxtSettingsDto:
    type: "object"
    properties:
      tagRegexp:
        type: "string"
      translatableTextRegexp:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      translatableTextRegexp: "translatableTextRegexp"
  Xlf2SettingsDto:
    type: "object"
    properties:
      importNotes:
        type: "boolean"
        description: "Default: true"
      saveConfirmedSegments:
        type: "boolean"
        description: "Default: true"
      segmentation:
        type: "boolean"
        description: "Default: true"
      lineBreakTags:
        type: "boolean"
        description: "Default: false"
      preserveWhitespace:
        type: "boolean"
        description: "Default: true"
      copySourceToTargetIfNotImported:
        type: "boolean"
        description: "Default: true"
      respectTranslateAttr:
        type: "boolean"
        description: "Default: true"
      skipImportRules:
        type: "string"
      importAsConfirmedRules:
        type: "string"
        description: "Default: state=final"
      importAsLockedRules:
        type: "string"
      exportAttrsWhenConfirmedAndLocked:
        type: "string"
        description: "Default: state=final"
      exportAttrsWhenConfirmedAndNotLocked:
        type: "string"
        description: "Default: state=final"
      exportAttrsWhenNotConfirmedAndLocked:
        type: "string"
      exportAttrsWhenNotConfirmedAndNotLocked:
        type: "string"
      contextKeyXPath:
        type: "string"
    example:
      importNotes: true
      importAsConfirmedRules: "importAsConfirmedRules"
      respectTranslateAttr: true
      importAsLockedRules: "importAsLockedRules"
      exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
      skipImportRules: "skipImportRules"
      saveConfirmedSegments: true
      contextKeyXPath: "contextKeyXPath"
      lineBreakTags: true
      preserveWhitespace: true
      copySourceToTargetIfNotImported: true
      exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
      segmentation: true
      exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
      exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
  XlfSettingsDto:
    type: "object"
    properties:
      importNotes:
        type: "boolean"
        description: "Default: true"
      segmentation:
        type: "boolean"
        description: "Default: true"
      skipImportRules:
        type: "string"
        description: "Default: translate=no; examples: translate=no;approved=no;state=needs-adaptation"
      importAsConfirmedRules:
        type: "string"
        description: "Multiple rules must be separated by semicolon"
      importAsLockedRules:
        type: "string"
      exportAttrsWhenConfirmedAndLocked:
        type: "string"
      exportAttrsWhenConfirmedAndNotLocked:
        type: "string"
      exportAttrsWhenNotConfirmedAndLocked:
        type: "string"
      exportAttrsWhenNotConfirmedAndNotLocked:
        type: "string"
      saveConfirmedSegments:
        type: "boolean"
        description: "Default: true"
      lineBreakTags:
        type: "boolean"
        description: "Default: false"
      preserveWhitespace:
        type: "boolean"
        description: "Default: true"
      contextType:
        type: "string"
      copySourceToTargetIfNotImported:
        type: "boolean"
        description: "Default: true"
      importXPath:
        type: "string"
      importAsConfirmedXPath:
        type: "string"
      importAsLockedXPath:
        type: "string"
    example:
      importNotes: true
      importAsConfirmedRules: "importAsConfirmedRules"
      importXPath: "importXPath"
      importAsConfirmedXPath: "importAsConfirmedXPath"
      importAsLockedRules: "importAsLockedRules"
      exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
      skipImportRules: "skipImportRules"
      saveConfirmedSegments: true
      exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
      lineBreakTags: true
      preserveWhitespace: true
      contextType: "contextType"
      copySourceToTargetIfNotImported: true
      segmentation: true
      exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
      importAsLockedXPath: "importAsLockedXPath"
      exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
  XlsSettingsDto:
    type: "object"
    properties:
      sheetNames:
        type: "boolean"
        description: "Default: false"
      hidden:
        type: "boolean"
        description: "Default: false"
      comments:
        type: "boolean"
        description: "Default: false"
      other:
        type: "boolean"
        description: "Default: false"
      cellFlow:
        type: "string"
        description: "Default: DownRight"
        enum:
        - "DownRight"
        - "RightDown"
        - "DownLeft"
        - "LeftDown"
      htmlSubfilter:
        type: "boolean"
        description: "Default: false"
      tagRegexp:
        type: "string"
      specifiedColumns:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      other: true
      comments: true
      hidden: true
      htmlSubfilter: true
      cellFlow: "DownRight"
      sheetNames: true
      specifiedColumns: "specifiedColumns"
  XmlSettingsDto:
    type: "object"
    properties:
      rulesFormat:
        type: "string"
        description: "Default: PLAIN"
        enum:
        - "PLAIN"
        - "XPATH"
      includeElementsPlain:
        type: "string"
        description: "Default: *, example: \"para,heading\""
      excludeElementsPlain:
        type: "string"
        description: "Example: \"script,par\""
      includeAttributesPlain:
        type: "string"
        description: "Example: \"title\""
      excludeAttributesPlain:
        type: "string"
        description: "Example: \"lang,href\""
      inlineElementsNonTranslatablePlain:
        type: "string"
        description: "Example: \"tt,b\""
      inlineElementsPlain:
        type: "string"
      inlineElementsAutoPlain:
        type: "boolean"
        description: "Default: false"
      htmlSubfilterElementsPlain:
        type: "string"
        description: "Example: \"tt,b\""
      entities:
        type: "boolean"
      lockElementsPlain:
        type: "string"
      lockAttributesPlain:
        type: "string"
      includeXPath:
        type: "string"
      inlineElementsXpath:
        type: "string"
      inlineElementsNonTranslatableXPath:
        type: "string"
      inlineElementsAutoXPath:
        type: "boolean"
      htmlSubfilterElementsXpath:
        type: "string"
      lockXPath:
        type: "string"
      segmentation:
        type: "boolean"
        description: "Default: true"
      tagRegexp:
        type: "string"
      contextNoteXpath:
        type: "string"
      maxLenXPath:
        type: "string"
      preserveWhitespaceXPath:
        type: "string"
      preserveCharEntities:
        type: "string"
      contextKeyXPath:
        type: "string"
      xslUrl:
        type: "string"
      importComments:
        type: "boolean"
        description: "Default: true"
    example:
      excludeElementsPlain: "excludeElementsPlain"
      rulesFormat: "PLAIN"
      preserveWhitespaceXPath: "preserveWhitespaceXPath"
      maxLenXPath: "maxLenXPath"
      inlineElementsAutoXPath: true
      lockElementsPlain: "lockElementsPlain"
      lockXPath: "lockXPath"
      contextKeyXPath: "contextKeyXPath"
      xslUrl: "xslUrl"
      includeAttributesPlain: "includeAttributesPlain"
      preserveCharEntities: "preserveCharEntities"
      inlineElementsAutoPlain: true
      segmentation: true
      inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
      tagRegexp: "tagRegexp"
      contextNoteXpath: "contextNoteXpath"
      includeXPath: "includeXPath"
      lockAttributesPlain: "lockAttributesPlain"
      excludeAttributesPlain: "excludeAttributesPlain"
      inlineElementsNonTranslatablePlain: "inlineElementsNonTranslatablePlain"
      htmlSubfilterElementsPlain: "htmlSubfilterElementsPlain"
      includeElementsPlain: "includeElementsPlain"
      htmlSubfilterElementsXpath: "htmlSubfilterElementsXpath"
      entities: true
      importComments: true
      inlineElementsXpath: "inlineElementsXpath"
      inlineElementsPlain: "inlineElementsPlain"
  YamlSettingsDto:
    type: "object"
    properties:
      htmlSubFilter:
        type: "boolean"
        description: "Default: false"
      tagRegexp:
        type: "string"
      includeKeyRegexp:
        type: "string"
      excludeValueRegexp:
        type: "string"
      contextPath:
        type: "string"
      contextKeyPath:
        type: "string"
    example:
      tagRegexp: "tagRegexp"
      htmlSubFilter: true
      contextPath: "contextPath"
      includeKeyRegexp: "includeKeyRegexp"
      contextKeyPath: "contextKeyPath"
      excludeValueRegexp: "excludeValueRegexp"
  FileImportSettingsCreateDto:
    type: "object"
    properties:
      inputCharset:
        type: "string"
      outputCharset:
        type: "string"
      zipCharset:
        type: "string"
      fileFormat:
        type: "string"
        description: "default: auto-detect"
        enum:
        - "doc"
        - "ppt"
        - "xls"
        - "xlf"
        - "xlf2"
        - "sdlxliff"
        - "ttx"
        - "html"
        - "xml"
        - "mif"
        - "tmx"
        - "idml"
        - "dita"
        - "json"
        - "po"
        - "ts"
        - "icml"
        - "yaml"
        - "properties"
        - "csv"
        - "android_string"
        - "desktop_entry"
        - "mac_strings"
        - "pdf"
        - "windows_rc"
        - "xml_properties"
        - "joomla_ini"
        - "magento_csv"
        - "dtd"
        - "mozilla_properties"
        - "plist"
        - "plain_text"
        - "srt"
        - "sub"
        - "sbv"
        - "wiki"
        - "resx"
        - "resjson"
        - "chrome_json"
        - "epub"
        - "svg"
        - "docbook"
        - "wpxliff"
        - "multiling_xml"
        - "multiling_xls"
        - "mqxliff"
        - "php"
        - "psd"
        - "tag"
        - "md"
        - "vtt"
      targetLength:
        type: "boolean"
        description: "Default: false"
      targetLengthMax:
        type: "integer"
        format: "int32"
        description: "default: 1000"
      targetLengthPercent:
        type: "boolean"
        description: "Default: false"
      targetLengthPercentValue:
        type: "number"
        format: "double"
        description: "default: 130"
      segmentationRuleId:
        type: "integer"
        format: "int64"
      targetSegmentationRuleId:
        type: "integer"
        format: "int64"
      android:
        $ref: "#/definitions/AndroidSettingsDto"
      csv:
        $ref: "#/definitions/CsvSettingsDto"
      dita:
        $ref: "#/definitions/DitaSettingsDto"
      docBook:
        $ref: "#/definitions/DocBookSettingsDto"
      doc:
        $ref: "#/definitions/DocSettingsDto"
      html:
        $ref: "#/definitions/HtmlSettingsDto"
      idml:
        $ref: "#/definitions/IdmlSettingsDto"
      json:
        $ref: "#/definitions/JsonSettingsDto"
      mac:
        $ref: "#/definitions/MacSettingsDto"
      md:
        $ref: "#/definitions/MdSettingsDto"
      mif:
        $ref: "#/definitions/MifSettingsDto"
      multilingualXls:
        $ref: "#/definitions/MultilingualXlsSettingsDto"
      multilingualCsv:
        $ref: "#/definitions/MultilingualCsvSettingsDto"
      multilingualXml:
        $ref: "#/definitions/MultilingualXmlSettingsDto"
      pdf:
        $ref: "#/definitions/PdfSettingsDto"
      php:
        $ref: "#/definitions/PhpSettingsDto"
      po:
        $ref: "#/definitions/PoSettingsDto"
      ppt:
        $ref: "#/definitions/PptSettingsDto"
      properties:
        $ref: "#/definitions/PropertiesSettingsDto"
      psd:
        $ref: "#/definitions/PsdSettingsDto"
      quarkTag:
        $ref: "#/definitions/QuarkTagSettingsDto"
      resx:
        $ref: "#/definitions/ResxSettingsDto"
      sdlXlf:
        $ref: "#/definitions/SdlXlfSettingsDto"
      tmMatch:
        $ref: "#/definitions/TMMatchSettingsDto"
      ttx:
        $ref: "#/definitions/TtxSettingsDto"
      txt:
        $ref: "#/definitions/TxtSettingsDto"
      xlf2:
        $ref: "#/definitions/Xlf2SettingsDto"
      xlf:
        $ref: "#/definitions/XlfSettingsDto"
      xls:
        $ref: "#/definitions/XlsSettingsDto"
      xml:
        $ref: "#/definitions/XmlSettingsDto"
      yaml:
        $ref: "#/definitions/YamlSettingsDto"
    example:
      psd:
        extractLockedLayers: true
        extractHiddenLayers: true
      targetLengthPercent: true
      android:
        tagRegexp: "tagRegexp"
      csv:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        importRows: "importRows"
        importColumns: "importColumns"
        contextNoteColumns: "contextNoteColumns"
        delimiter: "delimiter"
        maxLenColumn: "maxLenColumn"
        contextKeyColumn: "contextKeyColumn"
        delimiterType: "TAB"
      sdlXlf:
        saveConfirmedSegments: true
        importAsConfirmedRules: "importAsConfirmedRules"
        exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
        importAsLockedRules: "importAsLockedRules"
        exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
        exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
        exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
        skipImportRules: "skipImportRules"
      multilingualCsv:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        importRows: "importRows"
        targetColumns:
          key: "targetColumns"
        contextNoteColumns: "contextNoteColumns"
        delimiter: "delimiter"
        contextKeyColumns: "contextKeyColumns"
        delimiterType: "TAB"
        segmentation: true
        sourceColumns: "sourceColumns"
        maxLenColumns: "maxLenColumns"
      idml:
        tagRegexp: "tagRegexp"
        keepTracking: true
        extractMasterSpreads: true
        extractLockedLayers: true
        extractInvisibleLayers: true
        simplifyCodes: true
        removeXmlElements: true
        extractNotes: true
        extractVariables: true
        extractHiddenConditionalText: true
        targetFont: "targetFont"
        extractHyperlinks: true
        keepKerning: true
        replaceFont: true
      mif:
        extractLinks: true
        extractDefaultReferencePages: true
        extractPgfNumFormat: true
        extractReferencePages: true
        extractMasterPages: true
        extractHiddenPages: true
        extractXRefDef: true
        extractBodyPages: true
        extractUsedXRefDef: true
        extractUsedVariables: true
        extractUsedPgfNumFormat: true
        extractHiddenCondText: true
        extractVariables: true
        extractCustomReferencePages: true
        extractIndexMarkers: true
      mac:
        tagRegexp: "tagRegexp"
        htmlSubfilter: true
      targetLengthPercentValue: 6.02745618307040320615897144307382404804229736328125
      multilingualXls:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        importRows: "importRows"
        targetColumns:
          key: "targetColumns"
        maxLenColumn: "maxLenColumn"
        contextKeyColumn: "contextKeyColumn"
        segmentation: true
        contextNoteColumn: "contextNoteColumn"
        sourceColumn: "sourceColumn"
      xml:
        excludeElementsPlain: "excludeElementsPlain"
        rulesFormat: "PLAIN"
        preserveWhitespaceXPath: "preserveWhitespaceXPath"
        maxLenXPath: "maxLenXPath"
        inlineElementsAutoXPath: true
        lockElementsPlain: "lockElementsPlain"
        lockXPath: "lockXPath"
        contextKeyXPath: "contextKeyXPath"
        xslUrl: "xslUrl"
        includeAttributesPlain: "includeAttributesPlain"
        preserveCharEntities: "preserveCharEntities"
        inlineElementsAutoPlain: true
        segmentation: true
        inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
        tagRegexp: "tagRegexp"
        contextNoteXpath: "contextNoteXpath"
        includeXPath: "includeXPath"
        lockAttributesPlain: "lockAttributesPlain"
        excludeAttributesPlain: "excludeAttributesPlain"
        inlineElementsNonTranslatablePlain: "inlineElementsNonTranslatablePlain"
        htmlSubfilterElementsPlain: "htmlSubfilterElementsPlain"
        includeElementsPlain: "includeElementsPlain"
        htmlSubfilterElementsXpath: "htmlSubfilterElementsXpath"
        entities: true
        importComments: true
        inlineElementsXpath: "inlineElementsXpath"
        inlineElementsPlain: "inlineElementsPlain"
      targetLength: true
      md:
        tagRegexp: "tagRegexp"
        flavor: "PLAIN"
        hardLineBreaksSegments: true
        customElements: "customElements"
        ignoredBlockPrefixes: "ignoredBlockPrefixes"
        extractCodeBlocks: true
        preserveWhiteSpaces: true
        processJekyllFrontMatter: true
        notEscapedCharacters: "notEscapedCharacters"
      quarkTag:
        removeKerningTrackingTags: true
      json:
        tagRegexp: "tagRegexp"
        maxLenPath: "maxLenPath"
        htmlSubFilter: true
        contextNotePath: "contextNotePath"
        includeKeyRegexp: "includeKeyRegexp"
        contextKeyPath: "contextKeyPath"
        excludeKeyRegexp: "excludeKeyRegexp"
      html:
        tagRegexp: "tagRegexp"
        excludeElements: "excludeElements"
        importComments: true
        charEntitiesToTags: "charEntitiesToTags"
        preserveWhitespace: true
        translateMetaTagRegexp: "translateMetaTagRegexp"
        breakTagCreatesSegment: true
        unknownTagCreatesTag: true
      outputCharset: "outputCharset"
      dita:
        excludeTags: "excludeTags"
        inlineTags: "inlineTags"
        inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
        includeTags: "includeTags"
      yaml:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        contextPath: "contextPath"
        includeKeyRegexp: "includeKeyRegexp"
        contextKeyPath: "contextKeyPath"
        excludeValueRegexp: "excludeValueRegexp"
      targetSegmentationRuleId: 5
      docBook:
        excludeTags: "excludeTags"
        inlineTags: "inlineTags"
        inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
        includeTags: "includeTags"
      resx:
        tagRegexp: "tagRegexp"
      segmentationRuleId: 1
      zipCharset: "zipCharset"
      tmMatch:
        penalizeMultiContextMatch: true
        prevOrNextSegment: true
        contextType: "AUTO"
        ignoreTagMetadata: true
      txt:
        tagRegexp: "tagRegexp"
        translatableTextRegexp: "translatableTextRegexp"
      pdf:
        filter: "TRANS_PDF"
      xlf:
        importNotes: true
        importAsConfirmedRules: "importAsConfirmedRules"
        importXPath: "importXPath"
        importAsConfirmedXPath: "importAsConfirmedXPath"
        importAsLockedRules: "importAsLockedRules"
        exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
        skipImportRules: "skipImportRules"
        saveConfirmedSegments: true
        exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
        lineBreakTags: true
        preserveWhitespace: true
        contextType: "contextType"
        copySourceToTargetIfNotImported: true
        segmentation: true
        exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
        importAsLockedXPath: "importAsLockedXPath"
        exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
      ppt:
        hiddenSlides: true
        other: true
        notes: true
        masterSlides: true
      targetLengthMax: 0
      xlf2:
        importNotes: true
        importAsConfirmedRules: "importAsConfirmedRules"
        respectTranslateAttr: true
        importAsLockedRules: "importAsLockedRules"
        exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
        skipImportRules: "skipImportRules"
        saveConfirmedSegments: true
        contextKeyXPath: "contextKeyXPath"
        lineBreakTags: true
        preserveWhitespace: true
        copySourceToTargetIfNotImported: true
        exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
        segmentation: true
        exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
        exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
      doc:
        tagRegexp: "tagRegexp"
        other: true
        comments: true
        hyperlinkTarget: true
        hidden: true
        joinSimilarRuns: true
        index: true
        targetFont: "targetFont"
        properties: true
      php:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
      ttx:
        saveConfirmedSegments: true
      inputCharset: "inputCharset"
      multilingualXml:
        tagRegexp: "tagRegexp"
        sourceElementsXPath: "sourceElementsXPath"
        maxLenXPath: "maxLenXPath"
        translatableElementsXPath: "translatableElementsXPath"
        htmlSubFilter: true
        contextKeyXPath: "contextKeyXPath"
        xslUrl: "xslUrl"
        contextNoteXPath: "contextNoteXPath"
        preserveWhitespace: true
        targetElementsXPaths:
          key: "targetElementsXPaths"
        preserveCharEntities: "preserveCharEntities"
        segmentation: true
        inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
      fileFormat: "doc"
      properties:
        tagRegexp: "tagRegexp"
      xls:
        tagRegexp: "tagRegexp"
        other: true
        comments: true
        hidden: true
        htmlSubfilter: true
        cellFlow: "DownRight"
        sheetNames: true
        specifiedColumns: "specifiedColumns"
      po:
        tagRegexp: "tagRegexp"
        htmlSubFilter: true
        markupSubFilterTranslatable: "markupSubFilterTranslatable"
        exportMultiline: true
        markupSubFilterNonTranslatable: "markupSubFilterNonTranslatable"
        segment: true
  ImportSettingsCreateDto:
    type: "object"
    required:
    - "fileImportSettings"
    - "name"
    properties:
      name:
        type: "string"
      fileImportSettings:
        $ref: "#/definitions/FileImportSettingsCreateDto"
    example:
      fileImportSettings:
        psd:
          extractLockedLayers: true
          extractHiddenLayers: true
        targetLengthPercent: true
        android:
          tagRegexp: "tagRegexp"
        csv:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          importRows: "importRows"
          importColumns: "importColumns"
          contextNoteColumns: "contextNoteColumns"
          delimiter: "delimiter"
          maxLenColumn: "maxLenColumn"
          contextKeyColumn: "contextKeyColumn"
          delimiterType: "TAB"
        sdlXlf:
          saveConfirmedSegments: true
          importAsConfirmedRules: "importAsConfirmedRules"
          exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
          importAsLockedRules: "importAsLockedRules"
          exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
          exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
          exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
          skipImportRules: "skipImportRules"
        multilingualCsv:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          importRows: "importRows"
          targetColumns:
            key: "targetColumns"
          contextNoteColumns: "contextNoteColumns"
          delimiter: "delimiter"
          contextKeyColumns: "contextKeyColumns"
          delimiterType: "TAB"
          segmentation: true
          sourceColumns: "sourceColumns"
          maxLenColumns: "maxLenColumns"
        idml:
          tagRegexp: "tagRegexp"
          keepTracking: true
          extractMasterSpreads: true
          extractLockedLayers: true
          extractInvisibleLayers: true
          simplifyCodes: true
          removeXmlElements: true
          extractNotes: true
          extractVariables: true
          extractHiddenConditionalText: true
          targetFont: "targetFont"
          extractHyperlinks: true
          keepKerning: true
          replaceFont: true
        mif:
          extractLinks: true
          extractDefaultReferencePages: true
          extractPgfNumFormat: true
          extractReferencePages: true
          extractMasterPages: true
          extractHiddenPages: true
          extractXRefDef: true
          extractBodyPages: true
          extractUsedXRefDef: true
          extractUsedVariables: true
          extractUsedPgfNumFormat: true
          extractHiddenCondText: true
          extractVariables: true
          extractCustomReferencePages: true
          extractIndexMarkers: true
        mac:
          tagRegexp: "tagRegexp"
          htmlSubfilter: true
        targetLengthPercentValue: 6.02745618307040320615897144307382404804229736328125
        multilingualXls:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          importRows: "importRows"
          targetColumns:
            key: "targetColumns"
          maxLenColumn: "maxLenColumn"
          contextKeyColumn: "contextKeyColumn"
          segmentation: true
          contextNoteColumn: "contextNoteColumn"
          sourceColumn: "sourceColumn"
        xml:
          excludeElementsPlain: "excludeElementsPlain"
          rulesFormat: "PLAIN"
          preserveWhitespaceXPath: "preserveWhitespaceXPath"
          maxLenXPath: "maxLenXPath"
          inlineElementsAutoXPath: true
          lockElementsPlain: "lockElementsPlain"
          lockXPath: "lockXPath"
          contextKeyXPath: "contextKeyXPath"
          xslUrl: "xslUrl"
          includeAttributesPlain: "includeAttributesPlain"
          preserveCharEntities: "preserveCharEntities"
          inlineElementsAutoPlain: true
          segmentation: true
          inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
          tagRegexp: "tagRegexp"
          contextNoteXpath: "contextNoteXpath"
          includeXPath: "includeXPath"
          lockAttributesPlain: "lockAttributesPlain"
          excludeAttributesPlain: "excludeAttributesPlain"
          inlineElementsNonTranslatablePlain: "inlineElementsNonTranslatablePlain"
          htmlSubfilterElementsPlain: "htmlSubfilterElementsPlain"
          includeElementsPlain: "includeElementsPlain"
          htmlSubfilterElementsXpath: "htmlSubfilterElementsXpath"
          entities: true
          importComments: true
          inlineElementsXpath: "inlineElementsXpath"
          inlineElementsPlain: "inlineElementsPlain"
        targetLength: true
        md:
          tagRegexp: "tagRegexp"
          flavor: "PLAIN"
          hardLineBreaksSegments: true
          customElements: "customElements"
          ignoredBlockPrefixes: "ignoredBlockPrefixes"
          extractCodeBlocks: true
          preserveWhiteSpaces: true
          processJekyllFrontMatter: true
          notEscapedCharacters: "notEscapedCharacters"
        quarkTag:
          removeKerningTrackingTags: true
        json:
          tagRegexp: "tagRegexp"
          maxLenPath: "maxLenPath"
          htmlSubFilter: true
          contextNotePath: "contextNotePath"
          includeKeyRegexp: "includeKeyRegexp"
          contextKeyPath: "contextKeyPath"
          excludeKeyRegexp: "excludeKeyRegexp"
        html:
          tagRegexp: "tagRegexp"
          excludeElements: "excludeElements"
          importComments: true
          charEntitiesToTags: "charEntitiesToTags"
          preserveWhitespace: true
          translateMetaTagRegexp: "translateMetaTagRegexp"
          breakTagCreatesSegment: true
          unknownTagCreatesTag: true
        outputCharset: "outputCharset"
        dita:
          excludeTags: "excludeTags"
          inlineTags: "inlineTags"
          inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
          includeTags: "includeTags"
        yaml:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          contextPath: "contextPath"
          includeKeyRegexp: "includeKeyRegexp"
          contextKeyPath: "contextKeyPath"
          excludeValueRegexp: "excludeValueRegexp"
        targetSegmentationRuleId: 5
        docBook:
          excludeTags: "excludeTags"
          inlineTags: "inlineTags"
          inlineTagsNonTranslatable: "inlineTagsNonTranslatable"
          includeTags: "includeTags"
        resx:
          tagRegexp: "tagRegexp"
        segmentationRuleId: 1
        zipCharset: "zipCharset"
        tmMatch:
          penalizeMultiContextMatch: true
          prevOrNextSegment: true
          contextType: "AUTO"
          ignoreTagMetadata: true
        txt:
          tagRegexp: "tagRegexp"
          translatableTextRegexp: "translatableTextRegexp"
        pdf:
          filter: "TRANS_PDF"
        xlf:
          importNotes: true
          importAsConfirmedRules: "importAsConfirmedRules"
          importXPath: "importXPath"
          importAsConfirmedXPath: "importAsConfirmedXPath"
          importAsLockedRules: "importAsLockedRules"
          exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
          skipImportRules: "skipImportRules"
          saveConfirmedSegments: true
          exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
          lineBreakTags: true
          preserveWhitespace: true
          contextType: "contextType"
          copySourceToTargetIfNotImported: true
          segmentation: true
          exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
          importAsLockedXPath: "importAsLockedXPath"
          exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
        ppt:
          hiddenSlides: true
          other: true
          notes: true
          masterSlides: true
        targetLengthMax: 0
        xlf2:
          importNotes: true
          importAsConfirmedRules: "importAsConfirmedRules"
          respectTranslateAttr: true
          importAsLockedRules: "importAsLockedRules"
          exportAttrsWhenConfirmedAndLocked: "exportAttrsWhenConfirmedAndLocked"
          skipImportRules: "skipImportRules"
          saveConfirmedSegments: true
          contextKeyXPath: "contextKeyXPath"
          lineBreakTags: true
          preserveWhitespace: true
          copySourceToTargetIfNotImported: true
          exportAttrsWhenNotConfirmedAndNotLocked: "exportAttrsWhenNotConfirmedAndNotLocked"
          segmentation: true
          exportAttrsWhenNotConfirmedAndLocked: "exportAttrsWhenNotConfirmedAndLocked"
          exportAttrsWhenConfirmedAndNotLocked: "exportAttrsWhenConfirmedAndNotLocked"
        doc:
          tagRegexp: "tagRegexp"
          other: true
          comments: true
          hyperlinkTarget: true
          hidden: true
          joinSimilarRuns: true
          index: true
          targetFont: "targetFont"
          properties: true
        php:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
        ttx:
          saveConfirmedSegments: true
        inputCharset: "inputCharset"
        multilingualXml:
          tagRegexp: "tagRegexp"
          sourceElementsXPath: "sourceElementsXPath"
          maxLenXPath: "maxLenXPath"
          translatableElementsXPath: "translatableElementsXPath"
          htmlSubFilter: true
          contextKeyXPath: "contextKeyXPath"
          xslUrl: "xslUrl"
          contextNoteXPath: "contextNoteXPath"
          preserveWhitespace: true
          targetElementsXPaths:
            key: "targetElementsXPaths"
          preserveCharEntities: "preserveCharEntities"
          segmentation: true
          inlineElementsNonTranslatableXPath: "inlineElementsNonTranslatableXPath"
        fileFormat: "doc"
        properties:
          tagRegexp: "tagRegexp"
        xls:
          tagRegexp: "tagRegexp"
          other: true
          comments: true
          hidden: true
          htmlSubfilter: true
          cellFlow: "DownRight"
          sheetNames: true
          specifiedColumns: "specifiedColumns"
        po:
          tagRegexp: "tagRegexp"
          htmlSubFilter: true
          markupSubFilterTranslatable: "markupSubFilterTranslatable"
          exportMultiline: true
          markupSubFilterNonTranslatable: "markupSubFilterNonTranslatable"
          segment: true
      name: "name"
  BusinessUnitReference:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
    example:
      name: "name"
      id: "id"
  DiscountSchemeReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
      id: "id"
  DomainReference:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
    example:
      name: "name"
      id: "id"
  SubDomainReference:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
    example:
      name: "name"
      id: "id"
  UserDetailsDto:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      userName:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      dateDeleted:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
      role:
        type: "string"
        enum:
        - "SYS_ADMIN"
        - "SYS_ADMIN_READ"
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      timezone:
        type: "string"
      note:
        type: "string"
      terminologist:
        type: "boolean"
        description: "Default: false"
      sourceLangs:
        type: "array"
        items:
          type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepReference"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/ClientReference"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/DomainReference"
      subDomains:
        type: "array"
        items:
          $ref: "#/definitions/SubDomainReference"
      projectBusinessUnits:
        type: "array"
        items:
          $ref: "#/definitions/BusinessUnitReference"
      organization:
        $ref: "#/definitions/IdReference"
      priceList:
        $ref: "#/definitions/PriceListReference"
      netRateScheme:
        $ref: "#/definitions/DiscountSchemeReference"
      active:
        type: "boolean"
    description: "User with all belonging objects"
    example:
      workflowSteps:
      - name: "name"
        id: "id"
        order: 6
      - name: "name"
        id: "id"
        order: 6
      lastName: "lastName"
      note: "note"
      role: "SYS_ADMIN"
      clients:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      timezone: "timezone"
      domains:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      active: true
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      userName: "userName"
      dateDeleted: "2000-01-23T04:56:07.000+00:00"
      priceList:
        name: "name"
        id: "id"
      firstName: "firstName"
      projectBusinessUnits:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      terminologist: true
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      organization:
        id: "id"
      subDomains:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      id: "id"
      email: "email"
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  PlainConversationDto:
    type: "object"
    properties:
      id:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      dateModified:
        type: "string"
        format: "date-time"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/CommentDto"
      status:
        $ref: "#/definitions/StatusDto"
      deleted:
        type: "boolean"
      type:
        type: "string"
        enum:
        - "SEGMENT_TARGET"
      references:
        $ref: "#/definitions/PlainReferences"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      comments:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        text: "text"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        text: "text"
      deleted: true
      references:
        conversationTitle: "conversationTitle"
        segmentId: "segmentId"
        transGroupId: 0
        taskId: "taskId"
      dateModified: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      type: "SEGMENT_TARGET"
      status:
        date: "2000-01-23T04:56:07.000+00:00"
        by:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "resolved"
  CreatePlainConversationDto:
    type: "object"
    required:
    - "references"
    properties:
      comment:
        $ref: "#/definitions/AddCommentDto"
      references:
        $ref: "#/definitions/PlainReferences"
    example:
      references:
        conversationTitle: "conversationTitle"
        segmentId: "segmentId"
        transGroupId: 0
        taskId: "taskId"
      comment:
        text: "text"
  EditPlainConversationDto:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        enum:
        - "resolved"
        - "unresolved"
    example:
      status: "resolved"
  PlainConversationsListDto:
    type: "object"
    properties:
      conversations:
        type: "array"
        items:
          $ref: "#/definitions/PlainConversationDto"
    example:
      conversations:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        comments:
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        deleted: true
        references:
          conversationTitle: "conversationTitle"
          segmentId: "segmentId"
          transGroupId: 0
          taskId: "taskId"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        type: "SEGMENT_TARGET"
        status:
          date: "2000-01-23T04:56:07.000+00:00"
          by:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "resolved"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        comments:
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        - dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          dateModified: "2000-01-23T04:56:07.000+00:00"
          id: "id"
          text: "text"
        deleted: true
        references:
          conversationTitle: "conversationTitle"
          segmentId: "segmentId"
          transGroupId: 0
          taskId: "taskId"
        dateModified: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        type: "SEGMENT_TARGET"
        status:
          date: "2000-01-23T04:56:07.000+00:00"
          by:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "resolved"
  ForbiddenStringsDto:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      list:
        type: "array"
        items:
          type: "string"
    example:
      list:
      - "list"
      - "list"
      enabled: true
  MoraviaQADto:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "Default: false"
      profile:
        type: "string"
    example:
      profile: "profile"
      enabled: true
  QASettingsDto:
    type: "object"
    properties:
      emptyTranslation:
        type: "boolean"
      inconsistentTranslation:
        type: "boolean"
      joinTags:
        type: "boolean"
      missingNumbers:
        type: "boolean"
      segmentNotConfirmed:
        type: "boolean"
      terminology:
        type: "boolean"
      multipleSpaces:
        type: "boolean"
      trailingSpace:
        type: "boolean"
      trailingPunctuation:
        type: "boolean"
      targetLength:
        $ref: "#/definitions/TargetLengthDto"
      formatting:
        type: "boolean"
      unresolvedComment:
        type: "boolean"
      emptyPairTags:
        type: "boolean"
      strictJobStatus:
        type: "boolean"
      forbiddenStrings:
        $ref: "#/definitions/ForbiddenStringsDto"
      excludeLockedSegments:
        type: "boolean"
      ignoreNotApprovedTerms:
        type: "boolean"
      spellCheck:
        type: "boolean"
      repeatedWords:
        type: "boolean"
      inconsistentTagContent:
        type: "boolean"
      emptyTagContent:
        type: "boolean"
      xliffTags:
        type: "boolean"
      nestedTags:
        type: "boolean"
      forbiddenTerms:
        type: "boolean"
      targetLengthPercent:
        $ref: "#/definitions/TargetLengthPercentDto"
      targetLengthPerSegment:
        type: "boolean"
      newerAtPrecedingWorkflowStep:
        type: "boolean"
      leadingAndTrailingSpaces:
        type: "boolean"
      ignoreInAllWorkflowSteps:
        type: "boolean"
      unmodifiedFuzzyTranslation:
        type: "boolean"
      unmodifiedFuzzyTranslationTM:
        type: "boolean"
      unmodifiedFuzzyTranslationMTNT:
        type: "boolean"
      regexp:
        $ref: "#/definitions/RegexpCheckDto"
      extraNumbers:
        type: "boolean"
      targetSourceIdentical:
        type: "boolean"
      moravia:
        $ref: "#/definitions/MoraviaQADto"
    example:
      regexp:
        rules:
        - targetRegexp: "targetRegexp"
          sourceRegexp: "sourceRegexp"
          description: "description"
        - targetRegexp: "targetRegexp"
          sourceRegexp: "sourceRegexp"
          description: "description"
      segmentNotConfirmed: true
      inconsistentTranslation: true
      targetLengthPercent:
        max: 6.02745618307040320615897144307382404804229736328125
        enabled: true
      excludeLockedSegments: true
      ignoreInAllWorkflowSteps: true
      extraNumbers: true
      forbiddenTerms: true
      joinTags: true
      spellCheck: true
      targetSourceIdentical: true
      missingNumbers: true
      terminology: true
      emptyTagContent: true
      targetLength:
        max: 0
        enabled: true
      targetLengthPerSegment: true
      newerAtPrecedingWorkflowStep: true
      multipleSpaces: true
      unmodifiedFuzzyTranslationTM: true
      unresolvedComment: true
      leadingAndTrailingSpaces: true
      unmodifiedFuzzyTranslationMTNT: true
      trailingPunctuation: true
      forbiddenStrings:
        list:
        - "list"
        - "list"
        enabled: true
      repeatedWords: true
      emptyTranslation: true
      ignoreNotApprovedTerms: true
      inconsistentTagContent: true
      trailingSpace: true
      emptyPairTags: true
      strictJobStatus: true
      moravia:
        profile: "profile"
        enabled: true
      xliffTags: true
      nestedTags: true
      formatting: true
      unmodifiedFuzzyTranslation: true
  RegexpCheckDto:
    type: "object"
    properties:
      rules:
        type: "array"
        items:
          $ref: "#/definitions/RegexpCheckRuleDto"
    example:
      rules:
      - targetRegexp: "targetRegexp"
        sourceRegexp: "sourceRegexp"
        description: "description"
      - targetRegexp: "targetRegexp"
        sourceRegexp: "sourceRegexp"
        description: "description"
  RegexpCheckRuleDto:
    type: "object"
    properties:
      description:
        type: "string"
      sourceRegexp:
        type: "string"
      targetRegexp:
        type: "string"
    example:
      targetRegexp: "targetRegexp"
      sourceRegexp: "sourceRegexp"
      description: "description"
  TargetLengthDto:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      max:
        type: "integer"
        format: "int32"
    example:
      max: 0
      enabled: true
  TargetLengthPercentDto:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      max:
        type: "number"
        format: "double"
    example:
      max: 6.02745618307040320615897144307382404804229736328125
      enabled: true
  EditQASettingsDto:
    type: "object"
    properties:
      emptyTranslation:
        type: "boolean"
        description: "Default: false"
      inconsistentTranslation:
        type: "boolean"
        description: "Default: false"
      joinTags:
        type: "boolean"
        description: "Default: false"
      missingNumbers:
        type: "boolean"
        description: "Default: false"
      segmentNotConfirmed:
        type: "boolean"
        description: "Default: false"
      terminology:
        type: "boolean"
        description: "Default: false"
      multipleSpaces:
        type: "boolean"
        description: "Default: false"
      trailingSpace:
        type: "boolean"
        description: "Default: false"
      trailingPunctuation:
        type: "boolean"
        description: "Default: false"
      targetLengthMax:
        type: "integer"
        format: "int32"
        minimum: 0
      formatting:
        type: "boolean"
        description: "Default: false"
      unresolvedComment:
        type: "boolean"
        description: "Default: false"
      emptyPairTags:
        type: "boolean"
        description: "Default: false"
      strictJobStatus:
        type: "boolean"
        example: false
        description: "Linguists may not set jobs with unresolved QA warnings to Completed.\
          \ default value: false"
      forbiddenStrings:
        type: "array"
        items:
          type: "string"
      excludeLockedSegments:
        type: "boolean"
        description: "Default: false"
      ignoreNotApprovedTerms:
        type: "boolean"
        description: "Default: false"
      spellCheck:
        type: "boolean"
        description: "Default: false"
      repeatedWords:
        type: "boolean"
        description: "Default: false"
      inconsistentTagContent:
        type: "boolean"
        description: "Default: false"
      emptyTagContent:
        type: "boolean"
        description: "Default: false"
      xliffTags:
        type: "boolean"
        description: "Default: false"
      forbiddenTerms:
        type: "boolean"
        description: "Default: false"
      targetLengthPercent:
        type: "number"
        format: "double"
        minimum: 0
      targetLengthPerSegment:
        type: "boolean"
        description: "Default: false"
      newerAtPrecedingWorkflowStep:
        type: "boolean"
        description: "Default: false"
      leadingAndTrailingSpaces:
        type: "boolean"
        description: "Default: false"
      moraviaQA:
        $ref: "#/definitions/MoraviaQADto"
      regexp:
        $ref: "#/definitions/RegexpCheckDto"
  AbstractProjectDto:
    type: "object"
    discriminator: "userRole"
    properties:
      uid:
        type: "string"
      internalId:
        type: "integer"
        format: "int32"
      id:
        type: "string"
      name:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      domain:
        $ref: "#/definitions/DomainReference"
      subDomain:
        $ref: "#/definitions/SubDomainReference"
      owner:
        $ref: "#/definitions/UserReference"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      references:
        type: "array"
        items:
          $ref: "#/definitions/ReferenceFileReference"
      userRole:
        type: "string"
        description: "Response differs based on user's role"
        readOnly: true
    description: "Base projectDto"
    example:
      owner:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      uid: "uid"
      internalId: 2
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      references:
      - note: "note"
        filename: "filename"
        id: "id"
      - note: "note"
        filename: "filename"
        id: "id"
      sourceLang: "sourceLang"
      subDomain:
        name: "name"
        id: "id"
      domain:
        name: "name"
        id: "id"
      name: "name"
      id: "id"
      userRole: "userRole"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  Admin, Project Manager:
    allOf:
    - $ref: "#/definitions/AbstractProjectDto"
    - type: "object"
      properties:
        shared:
          type: "boolean"
          description: "Default: false"
        progress:
          $ref: "#/definitions/ProgressDto"
        client:
          $ref: "#/definitions/ClientReference"
        costCenter:
          $ref: "#/definitions/CostCenterReference"
        businessUnit:
          $ref: "#/definitions/BusinessUnitReference"
        dateDue:
          type: "string"
          format: "date-time"
        status:
          type: "string"
          enum:
          - "NEW"
          - "ASSIGNED"
          - "COMPLETED"
          - "ACCEPTED_BY_VENDOR"
          - "DECLINED_BY_VENDOR"
          - "COMPLETED_BY_VENDOR"
          - "CANCELLED"
        purchaseOrder:
          type: "string"
        isPublishedOnJobBoard:
          type: "boolean"
          description: "Default: false"
        note:
          type: "string"
        createdBy:
          $ref: "#/definitions/UserReference"
        qualityAssuranceSettings:
          $ref: "#/definitions/IdReference"
        workflowSteps:
          type: "array"
          items:
            $ref: "#/definitions/ProjectWorkflowStepDto"
        analyseSettings:
          $ref: "#/definitions/IdReference"
        accessSettings:
          $ref: "#/definitions/IdReference"
        financialSettings:
          $ref: "#/definitions/IdReference"
        mtSettingsPerLanguageList:
          type: "array"
          items:
            $ref: "#/definitions/MTSettingsPerLanguageReference"
  Buyer:
    allOf:
    - $ref: "#/definitions/AbstractProjectDto"
    - type: "object"
      properties:
        shared:
          type: "boolean"
          description: "Default: false"
        progress:
          $ref: "#/definitions/ProgressDto"
        client:
          $ref: "#/definitions/ClientReference"
        costCenter:
          $ref: "#/definitions/CostCenterReference"
        businessUnit:
          $ref: "#/definitions/BusinessUnitReference"
        dateDue:
          type: "string"
          format: "date-time"
        status:
          type: "string"
          enum:
          - "NEW"
          - "ASSIGNED"
          - "COMPLETED"
          - "ACCEPTED_BY_VENDOR"
          - "DECLINED_BY_VENDOR"
          - "COMPLETED_BY_VENDOR"
          - "CANCELLED"
        purchaseOrder:
          type: "string"
        isPublishedOnJobBoard:
          type: "boolean"
          description: "Default: false"
        note:
          type: "string"
        createdBy:
          $ref: "#/definitions/UserReference"
        qualityAssuranceSettings:
          $ref: "#/definitions/IdReference"
        workflowSteps:
          type: "array"
          items:
            $ref: "#/definitions/ProjectWorkflowStepDto"
        analyseSettings:
          $ref: "#/definitions/IdReference"
        accessSettings:
          $ref: "#/definitions/IdReference"
        financialSettings:
          $ref: "#/definitions/IdReference"
        mtSettingsPerLanguageList:
          type: "array"
          items:
            $ref: "#/definitions/MTSettingsPerLanguageReference"
        vendorOwner:
          $ref: "#/definitions/USER"
        vendor:
          $ref: "#/definitions/VendorReference"
  BuyerReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
  CostCenterReference:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
    example:
      name: "name"
      id: "id"
  Linguist:
    allOf:
    - $ref: "#/definitions/AbstractProjectDto"
    - type: "object"
  MTSettingsPerLanguageReference:
    type: "object"
    required:
    - "targetLang"
    properties:
      targetLang:
        type: "string"
        description: "mtSettings is set for whole project if targetLang == null"
      machineTranslateSettings:
        $ref: "#/definitions/MachineTranslateSettingsReference"
  PageDtoAbstractProjectDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/AbstractProjectDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - owner:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        uid: "uid"
        internalId: 2
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        references:
        - note: "note"
          filename: "filename"
          id: "id"
        - note: "note"
          filename: "filename"
          id: "id"
        sourceLang: "sourceLang"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        id: "id"
        userRole: "userRole"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      - owner:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        uid: "uid"
        internalId: 2
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        references:
        - note: "note"
          filename: "filename"
          id: "id"
        - note: "note"
          filename: "filename"
          id: "id"
        sourceLang: "sourceLang"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        id: "id"
        userRole: "userRole"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      totalElements: 0
  ProgressDto:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      finishedCount:
        type: "integer"
        format: "int32"
      overdueCount:
        type: "integer"
        format: "int32"
  ProjectWorkflowStepDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      abbreviation:
        type: "string"
      name:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
      workflowStep:
        $ref: "#/definitions/IdReference"
    example:
      name: "name"
      workflowStep:
        id: "id"
      id: 0
      workflowLevel: 6
      abbreviation: "abbreviation"
  ReferenceFileReference:
    type: "object"
    properties:
      id:
        type: "string"
      filename:
        type: "string"
      note:
        type: "string"
    example:
      note: "note"
      filename: "filename"
      id: "id"
  Vendor:
    allOf:
    - $ref: "#/definitions/AbstractProjectDto"
    - type: "object"
      properties:
        shared:
          type: "boolean"
          description: "Default: false"
        progress:
          $ref: "#/definitions/ProgressDto"
        client:
          $ref: "#/definitions/ClientReference"
        costCenter:
          $ref: "#/definitions/CostCenterReference"
        businessUnit:
          $ref: "#/definitions/BusinessUnitReference"
        dateDue:
          type: "string"
          format: "date-time"
        status:
          type: "string"
          enum:
          - "NEW"
          - "ASSIGNED"
          - "COMPLETED"
          - "ACCEPTED_BY_VENDOR"
          - "DECLINED_BY_VENDOR"
          - "COMPLETED_BY_VENDOR"
          - "CANCELLED"
        purchaseOrder:
          type: "string"
        isPublishedOnJobBoard:
          type: "boolean"
          description: "Default: false"
        note:
          type: "string"
        createdBy:
          $ref: "#/definitions/UserReference"
        qualityAssuranceSettings:
          $ref: "#/definitions/IdReference"
        workflowSteps:
          type: "array"
          items:
            $ref: "#/definitions/ProjectWorkflowStepDto"
        analyseSettings:
          $ref: "#/definitions/IdReference"
        accessSettings:
          $ref: "#/definitions/IdReference"
        financialSettings:
          $ref: "#/definitions/IdReference"
        mtSettingsPerLanguageList:
          type: "array"
          items:
            $ref: "#/definitions/MTSettingsPerLanguageReference"
        buyerOwner:
          $ref: "#/definitions/USER"
        buyer:
          $ref: "#/definitions/BuyerReference"
  VendorReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
  AssignableTemplatesDto:
    type: "object"
    properties:
      assignableTemplates:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTemplateDto"
    example:
      assignableTemplates:
      - owner:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        workflowSteps:
        - name: "name"
          id: "id"
          abbr: "abbr"
        - name: "name"
          id: "id"
          abbr: "abbr"
        note: "note"
        workflowSettings:
        - workflowStep:
            name: "name"
            id: "id"
            order: 6
          notifyProvider:
            organizationEmailTemplate:
              id: "id"
            notificationIntervalInMinutes: 115
          assignedTo:
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
        - workflowStep:
            name: "name"
            id: "id"
            order: 6
          notifyProvider:
            organizationEmailTemplate:
              id: "id"
            notificationIntervalInMinutes: 115
          assignedTo:
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
        businessUnit:
          name: "name"
          id: "id"
        subDomain:
          name: "name"
          id: "id"
        notifyProviders:
          organizationEmailTemplate:
            id: "id"
          notificationIntervalInMinutes: 115
        assignedTo:
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        templateName: "templateName"
        sourceLang: "sourceLang"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      - owner:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        workflowSteps:
        - name: "name"
          id: "id"
          abbr: "abbr"
        - name: "name"
          id: "id"
          abbr: "abbr"
        note: "note"
        workflowSettings:
        - workflowStep:
            name: "name"
            id: "id"
            order: 6
          notifyProvider:
            organizationEmailTemplate:
              id: "id"
            notificationIntervalInMinutes: 115
          assignedTo:
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
        - workflowStep:
            name: "name"
            id: "id"
            order: 6
          notifyProvider:
            organizationEmailTemplate:
              id: "id"
            notificationIntervalInMinutes: 115
          assignedTo:
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
          - targetLang: "targetLang"
            providers:
            - id: "id"
              type: "type"
            - id: "id"
              type: "type"
        businessUnit:
          name: "name"
          id: "id"
        subDomain:
          name: "name"
          id: "id"
        notifyProviders:
          organizationEmailTemplate:
            id: "id"
          notificationIntervalInMinutes: 115
        assignedTo:
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        templateName: "templateName"
        sourceLang: "sourceLang"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
  ProjectTemplateDto:
    type: "object"
    properties:
      id:
        type: "string"
      templateName:
        type: "string"
      name:
        type: "string"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      note:
        type: "string"
      owner:
        $ref: "#/definitions/UserReference"
      client:
        $ref: "#/definitions/ClientReference"
      domain:
        $ref: "#/definitions/DomainReference"
      subDomain:
        $ref: "#/definitions/SubDomainReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepDto"
      workflowSettings:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepSettingsDto"
      businessUnit:
        $ref: "#/definitions/BusinessUnitReference"
      notifyProviders:
        $ref: "#/definitions/ProjectTemplateNotifyProviderDto"
      assignedTo:
        type: "array"
        items:
          $ref: "#/definitions/AssignmentPerTargetLangDto"
    example:
      owner:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      workflowSteps:
      - name: "name"
        id: "id"
        abbr: "abbr"
      - name: "name"
        id: "id"
        abbr: "abbr"
      note: "note"
      workflowSettings:
      - workflowStep:
          name: "name"
          id: "id"
          order: 6
        notifyProvider:
          organizationEmailTemplate:
            id: "id"
          notificationIntervalInMinutes: 115
        assignedTo:
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
      - workflowStep:
          name: "name"
          id: "id"
          order: 6
        notifyProvider:
          organizationEmailTemplate:
            id: "id"
          notificationIntervalInMinutes: 115
        assignedTo:
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
      businessUnit:
        name: "name"
        id: "id"
      subDomain:
        name: "name"
        id: "id"
      notifyProviders:
        organizationEmailTemplate:
          id: "id"
        notificationIntervalInMinutes: 115
      assignedTo:
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      templateName: "templateName"
      sourceLang: "sourceLang"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      domain:
        name: "name"
        id: "id"
      name: "name"
      client:
        name: "name"
        id: "id"
      id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  ProjectTemplateWorkflowSettingsAssignedToDto:
    type: "object"
    properties:
      targetLang:
        type: "string"
      providers:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
    example:
      targetLang: "targetLang"
      providers:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
  JobPartReferences:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
    example:
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
  CreateProjectFromTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      dateDue:
        type: "string"
        format: "date-time"
      note:
        type: "string"
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      dateDue: "2000-01-23T04:56:07.000+00:00"
      note: "note"
      sourceLang: "sourceLang"
      name: "name"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  EditProjectDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      status:
        type: "string"
        enum:
        - "NEW"
        - "ASSIGNED"
        - "COMPLETED"
        - "ACCEPTED_BY_VENDOR"
        - "DECLINED_BY_VENDOR"
        - "COMPLETED_BY_VENDOR"
        - "CANCELLED"
      client:
        $ref: "#/definitions/IdReference"
      businessUnit:
        $ref: "#/definitions/IdReference"
      domain:
        $ref: "#/definitions/IdReference"
      subDomain:
        $ref: "#/definitions/IdReference"
      owner:
        $ref: "#/definitions/IdReference"
      purchaseOrder:
        type: "string"
        minLength: 0
        maxLength: 255
      dateDue:
        type: "string"
        format: "date-time"
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
    example:
      owner:
        id: "id"
      dateDue: "2000-01-23T04:56:07.000+00:00"
      note: "note"
      businessUnit:
        id: "id"
      subDomain:
        id: "id"
      domain:
        id: "id"
      name: "name"
      purchaseOrder: "purchaseOrder"
      client:
        id: "id"
      status: "NEW"
  AddTargetLangDto:
    type: "object"
    required:
    - "targetLangs"
    properties:
      targetLangs:
        type: "array"
        items:
          type: "string"
        maxItems: 2147483647
        minItems: 1
    example:
      targetLangs:
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
      - "targetLangs"
  AddWorkflowStepsDto:
    type: "object"
    required:
    - "workflowSteps"
    properties:
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
        maxItems: 2147483647
        minItems: 1
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
  AssignVendorDto:
    type: "object"
    properties:
      vendor:
        $ref: "#/definitions/IdReference"
      dateDue:
        type: "string"
        format: "date-time"
    example:
      dateDue: "2000-01-23T04:56:07.000+00:00"
      vendor:
        id: "id"
  CloneProjectDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  PageDtoProviderReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      totalElements: 0
  SetProjectStatusDto:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        enum:
        - "NEW"
        - "ASSIGNED"
        - "COMPLETED"
        - "ACCEPTED_BY_VENDOR"
        - "DECLINED_BY_VENDOR"
        - "COMPLETED_BY_VENDOR"
        - "CANCELLED"
    example:
      status: "NEW"
  ProjectTermBaseDto:
    type: "object"
    properties:
      targetLocale:
        type: "string"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      readMode:
        type: "boolean"
      writeMode:
        type: "boolean"
      termBase:
        $ref: "#/definitions/TermBaseDto"
      qualityAssurance:
        type: "boolean"
    example:
      qualityAssurance: true
      targetLocale: "targetLocale"
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      termBase:
        internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        langs:
        - "langs"
        - "langs"
        id: "id"
      writeMode: true
      readMode: true
  ProjectTermBaseListDto:
    type: "object"
    properties:
      termBases:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTermBaseDto"
    example:
      termBases:
      - qualityAssurance: true
        targetLocale: "targetLocale"
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        writeMode: true
        readMode: true
      - qualityAssurance: true
        targetLocale: "targetLocale"
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        writeMode: true
        readMode: true
  TermBaseDto:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
      internalId:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      langs:
        type: "array"
        items:
          type: "string"
      client:
        $ref: "#/definitions/ClientReference"
      domain:
        $ref: "#/definitions/DomainReference"
      subDomain:
        $ref: "#/definitions/SubDomainReference"
      businessUnit:
        $ref: "#/definitions/BusinessUnitReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      note:
        type: "string"
    example:
      internalId: 0
      note: "note"
      businessUnit:
        name: "name"
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      subDomain:
        name: "name"
        id: "id"
      domain:
        name: "name"
        id: "id"
      name: "name"
      client:
        name: "name"
        id: "id"
      langs:
      - "langs"
      - "langs"
      id: "id"
  SetTermBaseDto:
    type: "object"
    properties:
      readTermBases:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      writeTermBase:
        $ref: "#/definitions/IdReference"
      qualityAssuranceTermBases:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      targetLang:
        type: "string"
    example:
      qualityAssuranceTermBases:
      - id: "id"
      - id: "id"
      targetLang: "targetLang"
      writeTermBase:
        id: "id"
      readTermBases:
      - id: "id"
      - id: "id"
  ProjectSecuritySettingsDto:
    type: "object"
    properties:
      downloadEnabled:
        type: "boolean"
      webEditorEnabledForLinguists:
        type: "boolean"
      showUserDataToLinguists:
        type: "boolean"
      emailNotifications:
        type: "boolean"
      strictWorkflowFinish:
        type: "boolean"
      useVendors:
        type: "boolean"
      linguistsMayEditLockedSegments:
        type: "boolean"
      linguistsMaySetAutoPropagation:
        type: "boolean"
    example:
      emailNotifications: true
      strictWorkflowFinish: true
      webEditorEnabledForLinguists: true
      showUserDataToLinguists: true
      downloadEnabled: true
      linguistsMayEditLockedSegments: true
      useVendors: true
      linguistsMaySetAutoPropagation: true
  EditProjectSecuritySettingsDto:
    type: "object"
    properties:
      translationMemoryDownloadEnabled:
        type: "boolean"
        description: "Default: false"
      webEditorEnabledForLinguists:
        type: "boolean"
        description: "Default: false"
      showUserDataToLinguists:
        type: "boolean"
        description: "Default: false"
      emailNotifications:
        type: "boolean"
        description: "Default: false"
      strictWorkflowFinish:
        type: "boolean"
        description: "Default: false"
      useVendors:
        type: "boolean"
        description: "Default: false"
      linguistsMayEditLockedSegments:
        type: "boolean"
        description: "Default: false"
      linguistsMaySetAutoPropagation:
        type: "boolean"
        description: "Default: true"
      usersMaySetAutoPropagation:
        type: "boolean"
        description: "Default: true"
        readOnly: true
    example:
      emailNotifications: true
      translationMemoryDownloadEnabled: true
      strictWorkflowFinish: true
      webEditorEnabledForLinguists: true
      showUserDataToLinguists: true
      linguistsMayEditLockedSegments: true
      useVendors: true
      usersMaySetAutoPropagation: true
      linguistsMaySetAutoPropagation: true
  FinancialSettingsDto:
    type: "object"
    properties:
      netRateScheme:
        $ref: "#/definitions/NetRateSchemeReference"
      priceList:
        $ref: "#/definitions/PriceListReference"
    example:
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      priceList:
        name: "name"
        id: "id"
  SetFinancialSettingsDto:
    type: "object"
    properties:
      netRateScheme:
        $ref: "#/definitions/IdReference"
      priceList:
        $ref: "#/definitions/IdReference"
    example:
      netRateScheme:
        id: "id"
      priceList:
        id: "id"
  EnabledQualityChecksDto:
    type: "object"
    properties:
      enabledChecks:
        type: "array"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
    example:
      enabledChecks:
      - "EmptyTranslation"
      - "EmptyTranslation"
  LqaErrorCategoryDto:
    type: "object"
    properties:
      errorCategoryId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      enabled:
        type: "boolean"
      errorCategories:
        type: "array"
        items:
          $ref: "#/definitions/LqaErrorCategoryDto"
    example:
      errorCategories:
      - null
      - null
      errorCategoryId: 6
      name: "name"
      enabled: true
  LqaSettingsDto:
    type: "object"
    properties:
      enabled:
        type: "boolean"
      severities:
        type: "array"
        items:
          $ref: "#/definitions/LqaSeverityDto"
      categories:
        type: "array"
        items:
          $ref: "#/definitions/LqaErrorCategoryDto"
    example:
      categories:
      - errorCategories:
        - null
        - null
        errorCategoryId: 6
        name: "name"
        enabled: true
      - errorCategories:
        - null
        - null
        errorCategoryId: 6
        name: "name"
        enabled: true
      enabled: true
      severities:
      - name: "name"
        severityId: 0
      - name: "name"
        severityId: 0
  LqaSeverityDto:
    type: "object"
    properties:
      severityId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
    example:
      name: "name"
      severityId: 0
  ProjectWorkflowStepListDto:
    type: "object"
    properties:
      projectWorkflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/ProjectWorkflowStepDto"
    example:
      projectWorkflowSteps:
      - name: "name"
        workflowStep:
          id: "id"
        id: 0
        workflowLevel: 6
        abbreviation: "abbreviation"
      - name: "name"
        workflowStep:
          id: "id"
        id: 0
        workflowLevel: 6
        abbreviation: "abbreviation"
  PageDtoAnalyseDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
        type: "PreAnalyse"
        assignedLinguist:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        analyseLanguageParts:
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
        type: "PreAnalyse"
        assignedLinguist:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        analyseLanguageParts:
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
      totalElements: 0
  MTSettingsPerLanguageDto:
    type: "object"
    required:
    - "targetLang"
    properties:
      targetLang:
        type: "string"
        description: "mtSettings is set for whole project if targetLang == null"
      machineTranslateSettings:
        $ref: "#/definitions/MachineTranslateSettingsDto"
    example:
      targetLang: "targetLang"
      machineTranslateSettings:
        args:
          key: "args"
        uid: "uid"
        mtQualityEstimation: true
        includeTags: true
        name: "name"
        default_: true
        id: "id"
        type: "type"
        baseName: "baseName"
  MTSettingsPerLanguageListDto:
    type: "object"
    properties:
      mtSettingsPerLangList:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/MTSettingsPerLanguageDto"
    example:
      mtSettingsPerLangList:
      - targetLang: "targetLang"
        machineTranslateSettings:
          args:
            key: "args"
          uid: "uid"
          mtQualityEstimation: true
          includeTags: true
          name: "name"
          default_: true
          id: "id"
          type: "type"
          baseName: "baseName"
      - targetLang: "targetLang"
        machineTranslateSettings:
          args:
            key: "args"
          uid: "uid"
          mtQualityEstimation: true
          includeTags: true
          name: "name"
          default_: true
          id: "id"
          type: "type"
          baseName: "baseName"
  PageDtoQuoteDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/QuoteDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - totalPrice: 7.061401241503109105224211816675961017608642578125
        quoteType: "BUYER"
        priceList:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        provider:
          id: "id"
          type: "type"
        workflowStepList:
        - name: "name"
          id: "id"
          order: 6
        - name: "name"
          id: "id"
          order: 6
        customerEmail: "customerEmail"
        name: "name"
        currency: "currency"
        id: 2
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        status: "APPROVED"
        billingUnit: "Character"
      - totalPrice: 7.061401241503109105224211816675961017608642578125
        quoteType: "BUYER"
        priceList:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        provider:
          id: "id"
          type: "type"
        workflowStepList:
        - name: "name"
          id: "id"
          order: 6
        - name: "name"
          id: "id"
          order: 6
        customerEmail: "customerEmail"
        name: "name"
        currency: "currency"
        id: 2
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        status: "APPROVED"
        billingUnit: "Character"
      totalElements: 0
  QuoteDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
        enum:
        - "APPROVED"
        - "DECLINED"
        - "DRAFT"
        - "FOR_APPROVAL"
        - "NEW"
      currency:
        type: "string"
      billingUnit:
        type: "string"
        enum:
        - "Character"
        - "Word"
        - "Page"
        - "Hour"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      totalPrice:
        type: "number"
        format: "double"
      netRateScheme:
        $ref: "#/definitions/NetRateSchemeReference"
      priceList:
        $ref: "#/definitions/PriceListReference"
      workflowStepList:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepReference"
      provider:
        $ref: "#/definitions/ProviderReference"
      customerEmail:
        type: "string"
      quoteType:
        type: "string"
        enum:
        - "BUYER"
        - "PROVIDER"
    example:
      totalPrice: 7.061401241503109105224211816675961017608642578125
      quoteType: "BUYER"
      priceList:
        name: "name"
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      provider:
        id: "id"
        type: "type"
      workflowStepList:
      - name: "name"
        id: "id"
        order: 6
      - name: "name"
        id: "id"
        order: 6
      customerEmail: "customerEmail"
      name: "name"
      currency: "currency"
      id: 2
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      status: "APPROVED"
      billingUnit: "Character"
  EditProjectMTSettPerLangDto:
    type: "object"
    required:
    - "targetLang"
    properties:
      targetLang:
        type: "string"
      machineTranslateSettings:
        $ref: "#/definitions/IdReference"
  EditProjectMTSettPerLangListDto:
    type: "object"
    properties:
      mtSettingsPerLangList:
        type: "array"
        items:
          $ref: "#/definitions/EditProjectMTSettPerLangDto"
  EditProjectMTSettingsDto:
    type: "object"
    properties:
      machineTranslateSettings:
        $ref: "#/definitions/IdReference"
  ProviderListDto:
    type: "object"
    properties:
      providers:
        $ref: "#/definitions/Providers"
    example:
      providers:
        all:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        relevant:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        discovered:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
  Providers:
    type: "object"
    properties:
      all:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
      discovered:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
      relevant:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
    example:
      all:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      relevant:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      discovered:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
  CreateProjectDto:
    type: "object"
    required:
    - "name"
    - "sourceLang"
    - "targetLangs"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      client:
        description: "Client referenced by id"
        $ref: "#/definitions/IdReference"
      businessUnit:
        $ref: "#/definitions/IdReference"
      domain:
        $ref: "#/definitions/IdReference"
      subDomain:
        $ref: "#/definitions/IdReference"
      useDefaultProjectSettings:
        type: "boolean"
        description: "Default: false"
      purchaseOrder:
        type: "string"
        minLength: 0
        maxLength: 255
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      dateDue:
        type: "string"
        format: "date-time"
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      dateDue: "2000-01-23T04:56:07.000+00:00"
      useDefaultProjectSettings: true
      note: "note"
      businessUnit:
        id: "id"
      sourceLang: "sourceLang"
      subDomain:
        id: "id"
      domain:
        id: "id"
      name: "name"
      purchaseOrder: "purchaseOrder"
      client:
        id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  CreateReferenceFileNoteDto:
    type: "object"
    required:
    - "note"
    properties:
      note:
        type: "string"
    example:
      note: "note"
  PreTranslateSettingsDto:
    type: "object"
    properties:
      translationMemory:
        type: "boolean"
        description: "Pre-translate from translation memory. Default: false"
      translationMemoryThreshold:
        type: "number"
        format: "double"
        description: "Pre-translation threshold percent"
      autoPropagateRepetitions:
        type: "boolean"
        description: "Propagate repetitions. Default: false"
      machineTranslation:
        type: "boolean"
        description: "Pre-translate from machine translation. Default: false"
      nonTranslatables:
        type: "boolean"
        description: "Pre-translate non-translatables. Default: false"
      repetitionsAsConfirmed:
        type: "boolean"
        description: "Set segment status to confirmed for: Repetitions. Default: false"
      matches100AsTranslated:
        type: "boolean"
        description: "Set segment status to confirmed for: 100% translation memory\
          \ matches. Default: false"
      matches101AsTranslate:
        type: "boolean"
        description: "Set segment status to confirmed for: 101% translation memory\
          \ matches. Default: false"
      nonTranslatablesAsTranslated:
        type: "boolean"
        description: "Set segment status to confirmed for: 100% non-translatable matches.\
          \ Default: false"
      preTranslateOnJobCreation:
        type: "boolean"
        description: "Pre-translate & set job to completed: Pre-translate on job creation.\
          \ Default: false"
      setJobStatusCompleted:
        type: "boolean"
        description: "Pre-translate & set job to completed: Set job to completed once\
          \ pre-translated. Default: false"
      setJobStatusCompletedWhenConfirmed:
        type: "boolean"
        description: "Pre-translate & set job to completed when all segments confirmed:\n\
          Set job to completed once pre-translated and all segments are confirmed.\
          \ Default: false"
      setProjectStatusCompleted:
        type: "boolean"
        description: "Pre-translate & set job to completed: Set project to completed\
          \ once all jobs pre-translated.\n        Default: false"
      lockNonTranslatables:
        type: "boolean"
        description: "Lock 100% non-translatable matches. Default: false"
      lock100:
        type: "boolean"
        description: "Lock 100% translation memory matches. Default: false"
      lock101:
        type: "boolean"
        description: "Lock 101% translation memory matches. Default: false"
      nonTranslatablesInEditors:
        type: "boolean"
        description: "Non translatables enabled in Editors. Default: false"
    example:
      matches101AsTranslate: true
      preTranslateOnJobCreation: true
      nonTranslatables: true
      lock101: true
      repetitionsAsConfirmed: true
      lock100: true
      nonTranslatablesAsTranslated: true
      translationMemory: true
      lockNonTranslatables: true
      setJobStatusCompleted: true
      nonTranslatablesInEditors: true
      translationMemoryThreshold: 0.80082819046101150206595775671303272247314453125
      autoPropagateRepetitions: true
      matches100AsTranslated: true
      setProjectStatusCompleted: true
      machineTranslation: true
      setJobStatusCompletedWhenConfirmed: true
  AnalyseSettingsDto:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "PreAnalyse"
        - "PostAnalyse"
        - "PreAnalyseTarget"
        - "Compare"
      includeFuzzyRepetitions:
        type: "boolean"
        description: "Default: false"
      includeNonTranslatables:
        type: "boolean"
        description: "Default: false"
      includeMachineTranslationMatches:
        type: "boolean"
        description: "Default: false"
      includeConfirmedSegments:
        type: "boolean"
        description: "Default: false"
      includeNumbers:
        type: "boolean"
        description: "Default: false"
      includeLockedSegments:
        type: "boolean"
        description: "Default: false"
      countSourceUnits:
        type: "boolean"
        description: "Default: false"
      includeTransMemory:
        type: "boolean"
        description: "Default: false"
      namingPattern:
        type: "string"
      analyzeByLanguage:
        type: "boolean"
        description: "Default: false"
      analyzeByProvider:
        type: "boolean"
        description: "Default: false"
    example:
      includeConfirmedSegments: true
      includeTransMemory: true
      includeNonTranslatables: true
      includeNumbers: true
      analyzeByProvider: true
      includeFuzzyRepetitions: true
      includeLockedSegments: true
      countSourceUnits: true
      namingPattern: "namingPattern"
      includeMachineTranslationMatches: true
      type: "PreAnalyse"
      analyzeByLanguage: true
  JobStatusChangeActionDto:
    type: "object"
    properties:
      requestedStatus:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      notifyOwner:
        type: "boolean"
        description: "Default: false; Both project owner and job owner are notified;\n\
          \                    the parameter is subordinated to notification settings\
          \ in the project"
      propagateStatus:
        type: "boolean"
        description: "Default: false;\n        Controls both job status and email\
          \ notifications to previous/next provider"
    example:
      propagateStatus: true
      notifyOwner: true
      requestedStatus: "NEW"
  ContinuousJobInfoDto:
    type: "object"
    properties:
      dateUpdated:
        type: "string"
        format: "date-time"
    example:
      dateUpdated: "2000-01-23T04:56:07.000+00:00"
  JobPartExtendedDto:
    type: "object"
    properties:
      uid:
        type: "string"
      status:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      providers:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
      sourceLang:
        type: "string"
      targetLang:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
      workflowStep:
        $ref: "#/definitions/ProjectWorkflowStepReference"
      filename:
        type: "string"
      dateDue:
        type: "string"
        format: "date-time"
      wordsCount:
        type: "integer"
        format: "int32"
      beginIndex:
        type: "integer"
        format: "int32"
      endIndex:
        type: "integer"
        format: "int32"
      isParentJobSplit:
        type: "boolean"
      dateCreated:
        type: "string"
        format: "date-time"
      project:
        $ref: "#/definitions/ProjectReference"
      lastWorkflowLevel:
        type: "integer"
        format: "int32"
      workUnit:
        $ref: "#/definitions/IdReference"
      imported:
        type: "boolean"
      continuous:
        type: "boolean"
      continuousJobInfo:
        $ref: "#/definitions/ContinuousJobInfoDto"
      originalFileDirectory:
        type: "string"
    example:
      dateDue: "2000-01-23T04:56:07.000+00:00"
      wordsCount: 5
      workUnit:
        id: "id"
      targetLang: "targetLang"
      workflowStep:
        name: "name"
        id: "id"
        workflowLevel: 1
        order: 6
      continuousJobInfo:
        dateUpdated: "2000-01-23T04:56:07.000+00:00"
      project:
        uid: "uid"
        name: "name"
      uid: "uid"
      filename: "filename"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      lastWorkflowLevel: 7
      sourceLang: "sourceLang"
      endIndex: 2
      imported: true
      continuous: true
      beginIndex: 5
      workflowLevel: 0
      isParentJobSplit: true
      originalFileDirectory: "originalFileDirectory"
      providers:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      status: "NEW"
  ProjectWorkflowStepReference:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
      order:
        type: "integer"
        format: "int32"
      workflowLevel:
        type: "integer"
        format: "int32"
    example:
      name: "name"
      id: "id"
      workflowLevel: 1
      order: 6
  WebEditorLinkDto:
    type: "object"
    properties:
      url:
        type: "string"
      warnings:
        type: "array"
        items:
          $ref: "#/definitions/ErrorDetailDto"
    example:
      warnings:
      - args:
          key: "{}"
        code: "code"
        message: "message"
      - args:
          key: "{}"
        code: "code"
        message: "message"
      url: "url"
  CreateWebEditorLinkDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 2147483647
        minItems: 1
    example:
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
  JobPartStatusChangeDto:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      changedDate:
        type: "string"
        format: "date-time"
      changedBy:
        $ref: "#/definitions/UserReference"
    example:
      changedDate: "2000-01-23T04:56:07.000+00:00"
      changedBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      status: "NEW"
  JobPartStatusChangesDto:
    type: "object"
    properties:
      statusChanges:
        type: "array"
        items:
          $ref: "#/definitions/JobPartStatusChangeDto"
    example:
      statusChanges:
      - changedDate: "2000-01-23T04:56:07.000+00:00"
        changedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        status: "NEW"
      - changedDate: "2000-01-23T04:56:07.000+00:00"
        changedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        status: "NEW"
  PseudoTranslateActionDto:
    type: "object"
    properties:
      replacement:
        type: "string"
      prefix:
        type: "string"
      suffix:
        type: "string"
      length:
        type: "number"
        format: "double"
    example:
      prefix: "prefix"
      length: 0.80082819046101150206595775671303272247314453125
      suffix: "suffix"
      replacement: "replacement"
  JobPartReadyReferences:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
    example:
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
  JobPartUpdateSingleDto:
    type: "object"
    required:
    - "status"
    properties:
      status:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      dateDue:
        type: "string"
        format: "date-time"
      providers:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
    example:
      dateDue: "2000-01-23T04:56:07.000+00:00"
      providers:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      status: "NEW"
  TranslationResourcesDto:
    type: "object"
    properties:
      machineTranslateSettings:
        $ref: "#/definitions/MachineTranslateSettingsReference"
      translationMemories:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTranslationMemoryReference"
      termBases:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTermBaseReference"
    example:
      termBases:
      - targetLang: "targetLang"
        termBase:
          id: "id"
        name: "name"
        workflowStep:
          id: "id"
        id: "id"
        writeMode: true
        readMode: true
      - targetLang: "targetLang"
        termBase:
          id: "id"
        name: "name"
        workflowStep:
          id: "id"
        id: "id"
        writeMode: true
        readMode: true
      machineTranslateSettings:
        name: "name"
        id: "id"
        type: "type"
      translationMemories:
      - targetLang: "targetLang"
        transMem:
          id: "id"
        penalty: 0.80082819046101150206595775671303272247314453125
        name: "name"
        workflowStep:
          id: "id"
        id: "id"
        readMode: true
      - targetLang: "targetLang"
        transMem:
          id: "id"
        penalty: 0.80082819046101150206595775671303272247314453125
        name: "name"
        workflowStep:
          id: "id"
        id: "id"
        readMode: true
  JobSegmentDto:
    type: "object"
    properties:
      id:
        type: "string"
      source:
        type: "string"
      translation:
        type: "string"
      createdAt:
        type: "integer"
        format: "int64"
      modifiedAt:
        type: "integer"
        format: "int64"
      createdBy:
        $ref: "#/definitions/UserReference"
      modifiedBy:
        $ref: "#/definitions/UserReference"
      workflowLevel:
        type: "integer"
        format: "int32"
      workflowStep:
        $ref: "#/definitions/WorkflowStepDto"
    example:
      createdAt: 0
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      modifiedAt: 6
      translation: "translation"
      workflowStep:
        name: "name"
        id: "id"
        abbr: "abbr"
      modifiedBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      id: "id"
      source: "source"
      workflowLevel: 1
  SegmentListDto:
    type: "object"
    properties:
      segments:
        type: "array"
        items:
          $ref: "#/definitions/JobSegmentDto"
    example:
      segments:
      - createdAt: 0
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        modifiedAt: 6
        translation: "translation"
        workflowStep:
          name: "name"
          id: "id"
          abbr: "abbr"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        source: "source"
        workflowLevel: 1
      - createdAt: 0
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        modifiedAt: 6
        translation: "translation"
        workflowStep:
          name: "name"
          id: "id"
          abbr: "abbr"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        source: "source"
        workflowLevel: 1
  WorkflowStepDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      abbr:
        type: "string"
    example:
      name: "name"
      id: "id"
      abbr: "abbr"
  TargetFileWarningsDto:
    type: "object"
    properties:
      warnings:
        type: "array"
        items:
          type: "string"
    example:
      warnings:
      - "warnings"
      - "warnings"
  PreviewUrlDto:
    type: "object"
    properties:
      type:
        type: "string"
        enum:
        - "ORIGINAL"
        - "PDF"
      url:
        type: "string"
    example:
      type: "ORIGINAL"
      url: "url"
  PreviewUrlsDto:
    type: "object"
    properties:
      previews:
        type: "array"
        items:
          $ref: "#/definitions/PreviewUrlDto"
    example:
      previews:
      - type: "ORIGINAL"
        url: "url"
      - type: "ORIGINAL"
        url: "url"
  AsyncRequestReference:
    type: "object"
    properties:
      id:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      action:
        type: "string"
        enum:
        - "PRE_ANALYSE"
        - "POST_ANALYSE"
        - "COMPARE_ANALYSE"
        - "PRE_TRANSLATE"
        - "ASYNC_TRANSLATE"
        - "IMPORT_JOB"
        - "IMPORT_FILE"
        - "ALIGN"
        - "EXPORT_TMX_BY_QUERY"
        - "EXPORT_TMX"
        - "IMPORT_TMX"
        - "INSERT_INTO_TM"
        - "QA"
        - "UPDATE_CONTINUOUS_JOB"
        - "MIGRATE_TM"
        - "MIGRATE_TM_OWN_SERVICE"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      action: "PRE_ANALYSE"
      id: "id"
  JobListDto:
    type: "object"
    properties:
      unsupportedFiles:
        type: "array"
        items:
          type: "string"
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/JobPartReference"
      asyncRequest:
        $ref: "#/definitions/AsyncRequestReference"
    example:
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        action: "PRE_ANALYSE"
        id: "id"
      jobs:
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        targetLang: "targetLang"
        jobAssignedEmailTemplate: {}
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        notificationIntervalInMinutes: 1
        workflowLevel: 0
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        targetLang: "targetLang"
        jobAssignedEmailTemplate: {}
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        notificationIntervalInMinutes: 1
        workflowLevel: 0
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      unsupportedFiles:
      - "unsupportedFiles"
      - "unsupportedFiles"
  AsyncRequestWrapperDto:
    type: "object"
    properties:
      asyncRequest:
        $ref: "#/definitions/AsyncRequestDto"
    example:
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
  PreTranslateJobsDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
      useTranslationMemory:
        type: "boolean"
        description: "Default: true"
      useMachineTranslation:
        type: "boolean"
        description: "Default: true"
      translationMemoryTreshold:
        type: "number"
        format: "double"
        description: "default: 0.7"
      insertMachineTranslationIntoTarget:
        type: "boolean"
        description: "Default: false"
      preTranslateNonTranslatables:
        type: "boolean"
        description: "Default: false"
      confirm100NonTranslatableMatches:
        type: "boolean"
        description: "Default: false"
      confirm100TranslationMemoryMatches:
        type: "boolean"
        description: "Default: false"
      confirm101TranslationMemoryMatches:
        type: "boolean"
        description: "Default: false"
      lock100NonTranslatableMatches:
        type: "boolean"
        description: "Default: false"
      lock100TranslationMemoryMatches:
        type: "boolean"
        description: "Default: false"
      lock101TranslationMemoryMatches:
        type: "boolean"
        description: "Default: false"
      overwrite:
        type: "boolean"
        description: "Default: false"
      segmentFilters:
        type: "array"
        items:
          type: "string"
          enum:
          - "LOCKED"
          - "NOT_LOCKED"
      useProjectPreTranslateSettings:
        type: "boolean"
        description: "Default: false"
      callbackUrl:
        type: "string"
    example:
      confirm100TranslationMemoryMatches: true
      preTranslateNonTranslatables: true
      lock100NonTranslatableMatches: true
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      confirm100NonTranslatableMatches: true
      translationMemoryTreshold: 0.80082819046101150206595775671303272247314453125
      lock101TranslationMemoryMatches: true
      useProjectPreTranslateSettings: true
      confirm101TranslationMemoryMatches: true
      lock100TranslationMemoryMatches: true
      segmentFilters:
      - "LOCKED"
      - "LOCKED"
      callbackUrl: "callbackUrl"
      useTranslationMemory: true
      useMachineTranslation: true
      insertMachineTranslationIntoTarget: true
      overwrite: true
  HumanTranslateJobsDto:
    type: "object"
    required:
    - "humanTranslateSettings"
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
      humanTranslateSettings:
        $ref: "#/definitions/IdReference"
      comment:
        type: "string"
      glossaryId:
        type: "string"
      usePreferredTranslators:
        type: "boolean"
      level:
        type: "string"
        enum:
        - "STANDARD"
        - "PRO"
      callbackUrl:
        type: "string"
    example:
      level: "STANDARD"
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      humanTranslateSettings:
        id: "id"
      comment: "comment"
      usePreferredTranslators: true
      callbackUrl: "callbackUrl"
      glossaryId: "glossaryId"
  NotifyJobPartsRequestDto:
    type: "object"
    required:
    - "emailTemplate"
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
      emailTemplate:
        $ref: "#/definitions/IdReference"
      cc:
        type: "array"
        items:
          type: "string"
      bcc:
        type: "array"
        items:
          type: "string"
    example:
      cc:
      - "cc"
      - "cc"
      bcc:
      - "bcc"
      - "bcc"
      emailTemplate:
        id: "id"
      jobs:
      - uid: "uid"
      - uid: "uid"
  JobPartUpdateBatchDto:
    type: "object"
    required:
    - "jobs"
    - "status"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
      status:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      dateDue:
        type: "string"
        format: "date-time"
      providers:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
    example:
      dateDue: "2000-01-23T04:56:07.000+00:00"
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      providers:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      status: "NEW"
  PageDtoJobPartReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/JobPartReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        targetLang: "targetLang"
        jobAssignedEmailTemplate: {}
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        notificationIntervalInMinutes: 1
        workflowLevel: 0
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        targetLang: "targetLang"
        jobAssignedEmailTemplate: {}
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        notificationIntervalInMinutes: 1
        workflowLevel: 0
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      totalElements: 0
  SegmentReference:
    type: "object"
    properties:
      uid:
        type: "string"
    example:
      uid: "uid"
  UpdateIgnoredChecksDto:
    type: "object"
    required:
    - "segment"
    - "warningTypes"
    properties:
      segment:
        $ref: "#/definitions/SegmentReference"
      warningTypes:
        type: "array"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
        maxItems: 100
        minItems: 1
    example:
      warningTypes:
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      segment:
        uid: "uid"
  UpdateIgnoredSegment:
    type: "object"
    required:
    - "uid"
    - "warnings"
    properties:
      uid:
        type: "string"
      warnings:
        type: "array"
        items:
          $ref: "#/definitions/UpdateIgnoredWarning"
        maxItems: 100
        minItems: 1
    example:
      uid: "uid"
      warnings:
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
  UpdateIgnoredWarning:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
    example:
      id: "id"
  UpdateIgnoredWarningsDto:
    type: "object"
    required:
    - "segments"
    properties:
      segments:
        type: "array"
        items:
          $ref: "#/definitions/UpdateIgnoredSegment"
        maxItems: 500
        minItems: 1
    example:
      segments:
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
      - uid: "uid"
        warnings:
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
        - id: "id"
  QualityAssuranceResponse:
    type: "object"
    properties:
      segmentWarnings:
        type: "array"
        items:
          $ref: "#/definitions/SegmentWarnings"
      finished:
        type: "boolean"
    example:
      segmentWarnings:
      - segmentId: "segmentId"
        warnings:
        - ignored: true
          id: "id"
          type: "EmptyTranslation"
        - ignored: true
          id: "id"
          type: "EmptyTranslation"
        ignoredChecks:
        - "EmptyTranslation"
        - "EmptyTranslation"
      - segmentId: "segmentId"
        warnings:
        - ignored: true
          id: "id"
          type: "EmptyTranslation"
        - ignored: true
          id: "id"
          type: "EmptyTranslation"
        ignoredChecks:
        - "EmptyTranslation"
        - "EmptyTranslation"
      finished: true
  SegmentWarnings:
    type: "object"
    properties:
      segmentId:
        type: "string"
      warnings:
        type: "array"
        items:
          $ref: "#/definitions/Warning"
      ignoredChecks:
        type: "array"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
    example:
      segmentId: "segmentId"
      warnings:
      - ignored: true
        id: "id"
        type: "EmptyTranslation"
      - ignored: true
        id: "id"
        type: "EmptyTranslation"
      ignoredChecks:
      - "EmptyTranslation"
      - "EmptyTranslation"
  Warning:
    type: "object"
    properties:
      id:
        type: "string"
      ignored:
        type: "boolean"
      type:
        type: "string"
        enum:
        - "EmptyTranslation"
        - "TrailingPunctuation"
        - "Formatting"
        - "JoinTags"
        - "MissingNumbers"
        - "MultipleSpaces"
        - "NonConformingTerm"
        - "NotConfirmed"
        - "TranslationLength"
        - "AbsoluteLength"
        - "RelativeLength"
        - "UnresolvedComment"
        - "EmptyPairTags"
        - "InconsistentTranslationTargetSource"
        - "InconsistentTranslationSourceTarget"
        - "ForbiddenString"
        - "SpellCheck"
        - "RepeatedWords"
        - "InconsistentTagContent"
        - "EmptyTagContent"
        - "Malformed"
        - "ForbiddenTerm"
        - "NewerAtLowerLevel"
        - "LeadingAndTrailingSpaces"
        - "TargetSourceIdentical"
        - "SourceOrTargetRegexp"
        - "UnmodifiedFuzzyTranslation"
        - "UnmodifiedFuzzyTranslationTM"
        - "UnmodifiedFuzzyTranslationMTNT"
        - "Moravia"
        - "ExtraNumbers"
        - "UnresolvedConversation"
        - "NestedTags"
    example:
      ignored: true
      id: "id"
      type: "EmptyTranslation"
  QualityAssuranceRunDto:
    type: "object"
    properties:
      initialSegment:
        $ref: "#/definitions/SegmentReference"
      warningTypes:
        type: "array"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
        maxItems: 100
        minItems: 0
    example:
      warningTypes:
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      initialSegment:
        uid: "uid"
  QualityAssuranceBatchRunDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
      settings:
        $ref: "#/definitions/QualityAssuranceRunDto"
    example:
      settings:
        warningTypes:
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        initialSegment:
          uid: "uid"
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
  SearchJobsDto:
    type: "object"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/JobPartExtendedDto"
    example:
      jobs:
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        wordsCount: 5
        workUnit:
          id: "id"
        targetLang: "targetLang"
        workflowStep:
          name: "name"
          id: "id"
          workflowLevel: 1
          order: 6
        continuousJobInfo:
          dateUpdated: "2000-01-23T04:56:07.000+00:00"
        project:
          uid: "uid"
          name: "name"
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        lastWorkflowLevel: 7
        sourceLang: "sourceLang"
        endIndex: 2
        imported: true
        continuous: true
        beginIndex: 5
        workflowLevel: 0
        isParentJobSplit: true
        originalFileDirectory: "originalFileDirectory"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        wordsCount: 5
        workUnit:
          id: "id"
        targetLang: "targetLang"
        workflowStep:
          name: "name"
          id: "id"
          workflowLevel: 1
          order: 6
        continuousJobInfo:
          dateUpdated: "2000-01-23T04:56:07.000+00:00"
        project:
          uid: "uid"
          name: "name"
        uid: "uid"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        lastWorkflowLevel: 7
        sourceLang: "sourceLang"
        endIndex: 2
        imported: true
        continuous: true
        beginIndex: 5
        workflowLevel: 0
        isParentJobSplit: true
        originalFileDirectory: "originalFileDirectory"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
  SearchJobsRequestDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        description: "Max: 50 records"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 50
        minItems: 1
    example:
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
  PreviousWorkflowDto:
    type: "object"
    properties:
      completed:
        type: "boolean"
      counts:
        $ref: "#/definitions/SegmentsCountsDto"
    example:
      counts:
        confirmedLockedCharsCount: 5
        wordsCount: 7
        segmentGroupsCount: 3
        qualityAssuranceResolved: true
        confirmedCharsCount: 1
        lockedWordsCount: 6
        machineTranslationPostEditedSegmentsCount: 7
        lockedSegmentsCount: 9
        completedSegmentsCount: 7
        translatedSegmentsCount: 2
        completedWordsCount: 1
        qualityAssurance:
          ignoredWarningsCount: 9
          warningsCount: 5
          segmentsCount: 4
        confirmedWordsCount: 1
        allConfirmed: true
        completedCharsCount: 6
        translatedLockedSegmentsCount: 4
        confirmedLockedWordsCount: 1
        lockedCharsCount: 5
        machineTranslationRelevantSegmentsCount: 1
        charsCount: 0
        segmentsCount: 2
      completed: true
  QualityAssuranceDto:
    type: "object"
    properties:
      segmentsCount:
        type: "integer"
        format: "int64"
      warningsCount:
        type: "integer"
        format: "int64"
      ignoredWarningsCount:
        type: "integer"
        format: "int64"
    example:
      ignoredWarningsCount: 9
      warningsCount: 5
      segmentsCount: 4
  SegmentsCountsDto:
    type: "object"
    properties:
      allConfirmed:
        type: "boolean"
      charsCount:
        type: "integer"
        format: "int64"
      completedCharsCount:
        type: "integer"
        format: "int64"
      confirmedCharsCount:
        type: "integer"
        format: "int64"
      confirmedLockedCharsCount:
        type: "integer"
        format: "int64"
      lockedCharsCount:
        type: "integer"
        format: "int64"
      segmentsCount:
        type: "integer"
        format: "int64"
      completedSegmentsCount:
        type: "integer"
        format: "int64"
      lockedSegmentsCount:
        type: "integer"
        format: "int64"
      segmentGroupsCount:
        type: "integer"
        format: "int64"
      translatedSegmentsCount:
        type: "integer"
        format: "int64"
      translatedLockedSegmentsCount:
        type: "integer"
        format: "int64"
      wordsCount:
        type: "integer"
        format: "int64"
      completedWordsCount:
        type: "integer"
        format: "int64"
      confirmedWordsCount:
        type: "integer"
        format: "int64"
      confirmedLockedWordsCount:
        type: "integer"
        format: "int64"
      lockedWordsCount:
        type: "integer"
        format: "int64"
      machineTranslationPostEditedSegmentsCount:
        type: "integer"
        format: "int64"
      machineTranslationRelevantSegmentsCount:
        type: "integer"
        format: "int64"
      qualityAssurance:
        $ref: "#/definitions/QualityAssuranceDto"
      qualityAssuranceResolved:
        type: "boolean"
    example:
      confirmedLockedCharsCount: 5
      wordsCount: 7
      segmentGroupsCount: 3
      qualityAssuranceResolved: true
      confirmedCharsCount: 1
      lockedWordsCount: 6
      machineTranslationPostEditedSegmentsCount: 7
      lockedSegmentsCount: 9
      completedSegmentsCount: 7
      translatedSegmentsCount: 2
      completedWordsCount: 1
      qualityAssurance:
        ignoredWarningsCount: 9
        warningsCount: 5
        segmentsCount: 4
      confirmedWordsCount: 1
      allConfirmed: true
      completedCharsCount: 6
      translatedLockedSegmentsCount: 4
      confirmedLockedWordsCount: 1
      lockedCharsCount: 5
      machineTranslationRelevantSegmentsCount: 1
      charsCount: 0
      segmentsCount: 2
  SegmentsCountsResponseDto:
    type: "object"
    properties:
      jobPartUid:
        type: "string"
      counts:
        $ref: "#/definitions/SegmentsCountsDto"
      previousWorkflow:
        $ref: "#/definitions/PreviousWorkflowDto"
    example:
      previousWorkflow:
        counts:
          confirmedLockedCharsCount: 5
          wordsCount: 7
          segmentGroupsCount: 3
          qualityAssuranceResolved: true
          confirmedCharsCount: 1
          lockedWordsCount: 6
          machineTranslationPostEditedSegmentsCount: 7
          lockedSegmentsCount: 9
          completedSegmentsCount: 7
          translatedSegmentsCount: 2
          completedWordsCount: 1
          qualityAssurance:
            ignoredWarningsCount: 9
            warningsCount: 5
            segmentsCount: 4
          confirmedWordsCount: 1
          allConfirmed: true
          completedCharsCount: 6
          translatedLockedSegmentsCount: 4
          confirmedLockedWordsCount: 1
          lockedCharsCount: 5
          machineTranslationRelevantSegmentsCount: 1
          charsCount: 0
          segmentsCount: 2
        completed: true
      counts:
        confirmedLockedCharsCount: 5
        wordsCount: 7
        segmentGroupsCount: 3
        qualityAssuranceResolved: true
        confirmedCharsCount: 1
        lockedWordsCount: 6
        machineTranslationPostEditedSegmentsCount: 7
        lockedSegmentsCount: 9
        completedSegmentsCount: 7
        translatedSegmentsCount: 2
        completedWordsCount: 1
        qualityAssurance:
          ignoredWarningsCount: 9
          warningsCount: 5
          segmentsCount: 4
        confirmedWordsCount: 1
        allConfirmed: true
        completedCharsCount: 6
        translatedLockedSegmentsCount: 4
        confirmedLockedWordsCount: 1
        lockedCharsCount: 5
        machineTranslationRelevantSegmentsCount: 1
        charsCount: 0
        segmentsCount: 2
      jobPartUid: "jobPartUid"
  SegmentsCountsResponseListDto:
    type: "object"
    properties:
      segmentsCountsResults:
        type: "array"
        items:
          $ref: "#/definitions/SegmentsCountsResponseDto"
    example:
      segmentsCountsResults:
      - previousWorkflow:
          counts:
            confirmedLockedCharsCount: 5
            wordsCount: 7
            segmentGroupsCount: 3
            qualityAssuranceResolved: true
            confirmedCharsCount: 1
            lockedWordsCount: 6
            machineTranslationPostEditedSegmentsCount: 7
            lockedSegmentsCount: 9
            completedSegmentsCount: 7
            translatedSegmentsCount: 2
            completedWordsCount: 1
            qualityAssurance:
              ignoredWarningsCount: 9
              warningsCount: 5
              segmentsCount: 4
            confirmedWordsCount: 1
            allConfirmed: true
            completedCharsCount: 6
            translatedLockedSegmentsCount: 4
            confirmedLockedWordsCount: 1
            lockedCharsCount: 5
            machineTranslationRelevantSegmentsCount: 1
            charsCount: 0
            segmentsCount: 2
          completed: true
        counts:
          confirmedLockedCharsCount: 5
          wordsCount: 7
          segmentGroupsCount: 3
          qualityAssuranceResolved: true
          confirmedCharsCount: 1
          lockedWordsCount: 6
          machineTranslationPostEditedSegmentsCount: 7
          lockedSegmentsCount: 9
          completedSegmentsCount: 7
          translatedSegmentsCount: 2
          completedWordsCount: 1
          qualityAssurance:
            ignoredWarningsCount: 9
            warningsCount: 5
            segmentsCount: 4
          confirmedWordsCount: 1
          allConfirmed: true
          completedCharsCount: 6
          translatedLockedSegmentsCount: 4
          confirmedLockedWordsCount: 1
          lockedCharsCount: 5
          machineTranslationRelevantSegmentsCount: 1
          charsCount: 0
          segmentsCount: 2
        jobPartUid: "jobPartUid"
      - previousWorkflow:
          counts:
            confirmedLockedCharsCount: 5
            wordsCount: 7
            segmentGroupsCount: 3
            qualityAssuranceResolved: true
            confirmedCharsCount: 1
            lockedWordsCount: 6
            machineTranslationPostEditedSegmentsCount: 7
            lockedSegmentsCount: 9
            completedSegmentsCount: 7
            translatedSegmentsCount: 2
            completedWordsCount: 1
            qualityAssurance:
              ignoredWarningsCount: 9
              warningsCount: 5
              segmentsCount: 4
            confirmedWordsCount: 1
            allConfirmed: true
            completedCharsCount: 6
            translatedLockedSegmentsCount: 4
            confirmedLockedWordsCount: 1
            lockedCharsCount: 5
            machineTranslationRelevantSegmentsCount: 1
            charsCount: 0
            segmentsCount: 2
          completed: true
        counts:
          confirmedLockedCharsCount: 5
          wordsCount: 7
          segmentGroupsCount: 3
          qualityAssuranceResolved: true
          confirmedCharsCount: 1
          lockedWordsCount: 6
          machineTranslationPostEditedSegmentsCount: 7
          lockedSegmentsCount: 9
          completedSegmentsCount: 7
          translatedSegmentsCount: 2
          completedWordsCount: 1
          qualityAssurance:
            ignoredWarningsCount: 9
            warningsCount: 5
            segmentsCount: 4
          confirmedWordsCount: 1
          allConfirmed: true
          completedCharsCount: 6
          translatedLockedSegmentsCount: 4
          confirmedLockedWordsCount: 1
          lockedCharsCount: 5
          machineTranslationRelevantSegmentsCount: 1
          charsCount: 0
          segmentsCount: 2
        jobPartUid: "jobPartUid"
  SplitJobActionDto:
    type: "object"
    required:
    - "segmentOrdinals"
    properties:
      segmentOrdinals:
        type: "array"
        items:
          type: "integer"
          format: "int64"
        maxItems: 2147483647
        minItems: 1
      partCount:
        type: "integer"
        format: "int32"
      partSize:
        type: "integer"
        format: "int32"
      wordCount:
        type: "integer"
        format: "int32"
      byDocumentPart:
        type: "boolean"
        description: "Can be used only for PowerPoint files"
    example:
      partCount: 6
      wordCount: 5
      partSize: 1
      byDocumentPart: true
      segmentOrdinals:
      - 0
      - 0
      - 0
      - 0
      - 0
      - 0
      - 0
      - 0
      - 0
      - 0
  AssignmentPerTargetLangDto:
    type: "object"
    properties:
      targetLang:
        type: "string"
      providers:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
    example:
      targetLang: "targetLang"
      providers:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
  ProjectTemplateNotifyProviderDto:
    type: "object"
    required:
    - "organizationEmailTemplate"
    properties:
      organizationEmailTemplate:
        $ref: "#/definitions/IdReference"
      notificationIntervalInMinutes:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 1440
    example:
      organizationEmailTemplate:
        id: "id"
      notificationIntervalInMinutes: 115
  WorkflowStepSettingsDto:
    type: "object"
    properties:
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      assignedTo:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTemplateWorkflowSettingsAssignedToDto"
      notifyProvider:
        $ref: "#/definitions/ProjectTemplateNotifyProviderDto"
    example:
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      notifyProvider:
        organizationEmailTemplate:
          id: "id"
        notificationIntervalInMinutes: 115
      assignedTo:
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
  ProjectTemplateCreateActionDto:
    type: "object"
    required:
    - "name"
    - "project"
    properties:
      project:
        $ref: "#/definitions/UidReference"
      name:
        type: "string"
        minLength: 0
        maxLength: 255
    example:
      name: "name"
      project:
        uid: "uid"
  ProjectTemplateEditDto:
    type: "object"
    required:
    - "templateName"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      templateName:
        type: "string"
        minLength: 0
        maxLength: 255
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      notifyProvider:
        description: "use to notify assigned providers,\n        notificationIntervalInMinutes\
          \ 0 or empty value means immediate notification to all providers"
        $ref: "#/definitions/ProjectTemplateNotifyProviderDto"
      workFlowSettings:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepSettingsEditDto"
      client:
        $ref: "#/definitions/IdReference"
      costCenter:
        $ref: "#/definitions/IdReference"
      businessUnit:
        $ref: "#/definitions/IdReference"
      domain:
        $ref: "#/definitions/IdReference"
      subDomain:
        $ref: "#/definitions/IdReference"
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
      assignedTo:
        type: "array"
        description: "only use for projects without workflows; otherwise specify in\
          \ the workflowSettings object"
        items:
          $ref: "#/definitions/ProjectTemplateWorkflowSettingsAssignedToDto"
    example:
      note: "note"
      businessUnit:
        id: "id"
      costCenter:
        id: "id"
      subDomain:
        id: "id"
      workFlowSettings:
      - workflowStep:
          id: "id"
        notifyProvider:
          organizationEmailTemplate:
            id: "id"
          notificationIntervalInMinutes: 115
        assignedTo:
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
      - workflowStep:
          id: "id"
        notifyProvider:
          organizationEmailTemplate:
            id: "id"
          notificationIntervalInMinutes: 115
        assignedTo:
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
        - targetLang: "targetLang"
          providers:
          - id: "id"
            type: "type"
          - id: "id"
            type: "type"
      assignedTo:
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
      templateName: "templateName"
      sourceLang: "sourceLang"
      domain:
        id: "id"
      name: "name"
      notifyProvider:
        organizationEmailTemplate:
          id: "id"
        notificationIntervalInMinutes: 115
      client:
        id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  WorkflowStepSettingsEditDto:
    type: "object"
    properties:
      workflowStep:
        $ref: "#/definitions/IdReference"
      assignedTo:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTemplateWorkflowSettingsAssignedToDto"
      notifyProvider:
        $ref: "#/definitions/ProjectTemplateNotifyProviderDto"
    example:
      workflowStep:
        id: "id"
      notifyProvider:
        organizationEmailTemplate:
          id: "id"
        notificationIntervalInMinutes: 115
      assignedTo:
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
      - targetLang: "targetLang"
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
  PageDtoProjectTemplateReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTemplateReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - owner:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        templateName: "templateName"
        sourceLang: "sourceLang"
        subDomain:
          name: "name"
          id: "id"
        costCenter:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      - owner:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        templateName: "templateName"
        sourceLang: "sourceLang"
        subDomain:
          name: "name"
          id: "id"
        costCenter:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      totalElements: 0
  ProjectTemplateReference:
    type: "object"
    properties:
      templateName:
        type: "string"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      id:
        type: "string"
      owner:
        $ref: "#/definitions/UserReference"
      domain:
        $ref: "#/definitions/DomainReference"
      subDomain:
        $ref: "#/definitions/SubDomainReference"
      costCenter:
        $ref: "#/definitions/CostCenterReference"
      businessUnit:
        $ref: "#/definitions/BusinessUnitReference"
      note:
        type: "string"
      client:
        $ref: "#/definitions/ClientReference"
    example:
      owner:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      note: "note"
      businessUnit:
        name: "name"
        id: "id"
      templateName: "templateName"
      sourceLang: "sourceLang"
      subDomain:
        name: "name"
        id: "id"
      costCenter:
        name: "name"
        id: "id"
      domain:
        name: "name"
        id: "id"
      client:
        name: "name"
        id: "id"
      id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  ProjectTemplateTermBaseDto:
    type: "object"
    properties:
      targetLocale:
        type: "string"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      readMode:
        type: "boolean"
      writeMode:
        type: "boolean"
      termBase:
        $ref: "#/definitions/TermBaseDto"
      qualityAssurance:
        type: "boolean"
    example:
      qualityAssurance: true
      targetLocale: "targetLocale"
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      termBase:
        internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        langs:
        - "langs"
        - "langs"
        id: "id"
      writeMode: true
      readMode: true
  ProjectTemplateTermBaseListDto:
    type: "object"
    properties:
      termBases:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTemplateTermBaseDto"
    example:
      termBases:
      - qualityAssurance: true
        targetLocale: "targetLocale"
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        writeMode: true
        readMode: true
      - qualityAssurance: true
        targetLocale: "targetLocale"
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        writeMode: true
        readMode: true
  SetProjectTemplateTermBaseDto:
    type: "object"
    properties:
      readTermBases:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      writeTermBase:
        $ref: "#/definitions/IdReference"
      qualityAssuranceTermBases:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      targetLang:
        type: "string"
      workflowStep:
        $ref: "#/definitions/IdReference"
    example:
      qualityAssuranceTermBases:
      - id: "id"
      - id: "id"
      targetLang: "targetLang"
      writeTermBase:
        id: "id"
      readTermBases:
      - id: "id"
      - id: "id"
      workflowStep:
        id: "id"
  ProjectTemplateTransMemoryDto:
    type: "object"
    properties:
      targetLocale:
        type: "string"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      readMode:
        type: "boolean"
      writeMode:
        type: "boolean"
      transMemory:
        $ref: "#/definitions/TransMemoryDto"
      penalty:
        type: "number"
        format: "double"
      applyPenaltyTo101Only:
        type: "boolean"
    example:
      transMemory:
        internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        sourceLang: "sourceLang"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      targetLocale: "targetLocale"
      applyPenaltyTo101Only: true
      penalty: 6.02745618307040320615897144307382404804229736328125
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      writeMode: true
      readMode: true
  ProjectTemplateTransMemoryListDto:
    type: "object"
    properties:
      transMemories:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTemplateTransMemoryDto"
    example:
      transMemories:
      - transMemory:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          sourceLang: "sourceLang"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        targetLocale: "targetLocale"
        applyPenaltyTo101Only: true
        penalty: 6.02745618307040320615897144307382404804229736328125
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        writeMode: true
        readMode: true
      - transMemory:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          sourceLang: "sourceLang"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        targetLocale: "targetLocale"
        applyPenaltyTo101Only: true
        penalty: 6.02745618307040320615897144307382404804229736328125
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        writeMode: true
        readMode: true
  TransMemoryDto:
    type: "object"
    properties:
      id:
        type: "string"
      internalId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      client:
        $ref: "#/definitions/ClientReference"
      businessUnit:
        $ref: "#/definitions/BusinessUnitReference"
      domain:
        $ref: "#/definitions/DomainReference"
      subDomain:
        $ref: "#/definitions/SubDomainReference"
      note:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
    example:
      internalId: 0
      note: "note"
      businessUnit:
        name: "name"
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      sourceLang: "sourceLang"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      subDomain:
        name: "name"
        id: "id"
      domain:
        name: "name"
        id: "id"
      name: "name"
      client:
        name: "name"
        id: "id"
      id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  SetProjectTemplateTransMemoriesDto:
    type: "object"
    properties:
      transMemories:
        type: "array"
        items:
          $ref: "#/definitions/SetProjectTemplateTransMemoryDto"
      targetLang:
        type: "string"
        description: "Set translation memory only for the specific project template\
          \ target language"
      workflowStep:
        description: "Set translation memory only for the specific workflow step"
        $ref: "#/definitions/IdReference"
    example:
      targetLang: "targetLang"
      transMemories:
      - transMemory:
          id: "id"
        applyPenaltyTo101Only: true
        penalty: 0.80082819046101150206595775671303272247314453125
        writeMode: true
        readMode: true
      - transMemory:
          id: "id"
        applyPenaltyTo101Only: true
        penalty: 0.80082819046101150206595775671303272247314453125
        writeMode: true
        readMode: true
      workflowStep:
        id: "id"
  SetProjectTemplateTransMemoryDto:
    type: "object"
    required:
    - "transMemory"
    properties:
      transMemory:
        $ref: "#/definitions/IdReference"
      readMode:
        type: "boolean"
        description: "Default: false"
      writeMode:
        type: "boolean"
        description: "Can be set only for Translation Memory with read == true.<br/>\n\
          \        Max 2 write TMs allowed per project.<br/>\n        Default: false"
      penalty:
        type: "number"
        format: "double"
      applyPenaltyTo101Only:
        type: "boolean"
        description: "Can be set only for penalty == 1<br/>Default: false"
    example:
      transMemory:
        id: "id"
      applyPenaltyTo101Only: true
      penalty: 0.80082819046101150206595775671303272247314453125
      writeMode: true
      readMode: true
  SearchResponseListTbDto:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/SearchResponseTbDto"
    example:
      searchResults:
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        conceptId: "conceptId"
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        conceptId: "conceptId"
  SearchResponseTbDto:
    type: "object"
    properties:
      termBase:
        $ref: "#/definitions/TermBaseDto"
      conceptId:
        type: "string"
      sourceTerm:
        $ref: "#/definitions/TermDto"
      translationTerms:
        type: "array"
        items:
          $ref: "#/definitions/TermDto"
    example:
      translationTerms:
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
      sourceTerm:
        note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
      termBase:
        internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        langs:
        - "langs"
        - "langs"
        id: "id"
      conceptId: "conceptId"
  TermDto:
    type: "object"
    required:
    - "text"
    properties:
      id:
        type: "string"
      text:
        type: "string"
      lang:
        type: "string"
      rtl:
        type: "boolean"
      modifiedAt:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
      modifiedBy:
        $ref: "#/definitions/UserReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      caseSensitive:
        type: "boolean"
      exactMatch:
        type: "boolean"
      forbidden:
        type: "boolean"
      preferred:
        type: "boolean"
      status:
        type: "string"
        enum:
        - "New"
        - "Approved"
      conceptId:
        type: "string"
      usage:
        type: "string"
      note:
        type: "string"
      writable:
        type: "boolean"
      shortTranslation:
        type: "string"
      termType:
        type: "string"
      partOfSpeech:
        type: "string"
      gender:
        type: "string"
      number:
        type: "string"
      definition:
        type: "string"
      domain:
        type: "string"
      subDomains:
        type: "array"
        items:
          type: "string"
      url:
        type: "string"
      conceptNote:
        type: "string"
    example:
      note: "note"
      exactMatch: true
      gender: "gender"
      modifiedAt: "2000-01-23T04:56:07.000+00:00"
      usage: "usage"
      termType: "termType"
      shortTranslation: "shortTranslation"
      writable: true
      createdAt: "2000-01-23T04:56:07.000+00:00"
      number: "number"
      conceptId: "conceptId"
      modifiedBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      definition: "definition"
      id: "id"
      text: "text"
      lang: "lang"
      preferred: true
      caseSensitive: true
      forbidden: true
      partOfSpeech: "partOfSpeech"
      rtl: true
      url: "url"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      domain: "domain"
      subDomains:
      - "subDomains"
      - "subDomains"
      conceptNote: "conceptNote"
      status: "New"
  SearchTBByJobRequestDto:
    type: "object"
    required:
    - "query"
    properties:
      query:
        type: "string"
      count:
        type: "integer"
        format: "int32"
        description: "Default: 15"
      offset:
        type: "integer"
        format: "int32"
        description: "Default: 0"
      reverse:
        type: "boolean"
        description: "Default: false"
  TermPairDto:
    type: "object"
    required:
    - "sourceTerm"
    - "targetTerm"
    properties:
      sourceTerm:
        $ref: "#/definitions/TermDto"
      targetTerm:
        $ref: "#/definitions/TermDto"
    example:
      sourceTerm:
        note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
      targetTerm:
        note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
  CreateTermsDto:
    type: "object"
    required:
    - "sourceTerm"
    - "targetTerm"
    properties:
      sourceTerm:
        $ref: "#/definitions/TermCreateByJobDto"
      targetTerm:
        $ref: "#/definitions/TermCreateByJobDto"
    example:
      sourceTerm:
        note: "note"
        number: "SINGULAR"
        exactMatch: true
        gender: "MASCULINE"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "ADJECTIVE"
        termType: "FULL_FORM"
        shortTranslation: "shortTranslation"
        text: "text"
        preferred: true
      targetTerm:
        note: "note"
        number: "SINGULAR"
        exactMatch: true
        gender: "MASCULINE"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "ADJECTIVE"
        termType: "FULL_FORM"
        shortTranslation: "shortTranslation"
        text: "text"
        preferred: true
  TermCreateByJobDto:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
      caseSensitive:
        type: "boolean"
        description: "Default: false"
      exactMatch:
        type: "boolean"
        description: "Default: false"
      forbidden:
        type: "boolean"
        description: "Default: false"
      preferred:
        type: "boolean"
        description: "Default: false"
      usage:
        type: "string"
      note:
        type: "string"
      shortTranslation:
        type: "string"
      termType:
        type: "string"
        enum:
        - "FULL_FORM"
        - "SHORT_FORM"
        - "ACRONYM"
        - "ABBREVIATION"
        - "PHRASE"
        - "VARIANT"
      partOfSpeech:
        type: "string"
        enum:
        - "ADJECTIVE"
        - "NOUN"
        - "VERB"
        - "ADVERB"
      gender:
        type: "string"
        enum:
        - "MASCULINE"
        - "FEMININE"
        - "NEUTRAL"
      number:
        type: "string"
        enum:
        - "SINGULAR"
        - "PLURAL"
        - "UNCOUNTABLE"
    example:
      note: "note"
      number: "SINGULAR"
      exactMatch: true
      gender: "MASCULINE"
      caseSensitive: true
      forbidden: true
      usage: "usage"
      partOfSpeech: "ADJECTIVE"
      termType: "FULL_FORM"
      shortTranslation: "shortTranslation"
      text: "text"
      preferred: true
  Match:
    type: "object"
    properties:
      beginIndex:
        type: "integer"
        format: "int32"
      text:
        type: "string"
    example:
      beginIndex: 0
      text: "text"
  SearchInTextResponseDto:
    type: "object"
    properties:
      termBase:
        $ref: "#/definitions/TermBaseDto"
      conceptId:
        type: "string"
      sourceTerm:
        $ref: "#/definitions/TermDto"
      translationTerms:
        type: "array"
        items:
          $ref: "#/definitions/TermDto"
      subTerm:
        type: "boolean"
      matches:
        type: "array"
        items:
          $ref: "#/definitions/Match"
    example:
      translationTerms:
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
      sourceTerm:
        note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        usage: "usage"
        termType: "termType"
        shortTranslation: "shortTranslation"
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        definition: "definition"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        caseSensitive: true
        forbidden: true
        partOfSpeech: "partOfSpeech"
        rtl: true
        url: "url"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        conceptNote: "conceptNote"
        status: "New"
      termBase:
        internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        langs:
        - "langs"
        - "langs"
        id: "id"
      conceptId: "conceptId"
      subTerm: true
      matches:
      - beginIndex: 0
        text: "text"
      - beginIndex: 0
        text: "text"
  SearchInTextResponseListDto:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/SearchInTextResponseDto"
    example:
      searchResults:
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        conceptId: "conceptId"
        subTerm: true
        matches:
        - beginIndex: 0
          text: "text"
        - beginIndex: 0
          text: "text"
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        termBase:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          langs:
          - "langs"
          - "langs"
          id: "id"
        conceptId: "conceptId"
        subTerm: true
        matches:
        - beginIndex: 0
          text: "text"
        - beginIndex: 0
          text: "text"
  SearchInTextByJobRequestDto:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
      reverse:
        type: "boolean"
        description: "Default: false"
      zeroLengthSeparator:
        type: "string"
    example:
      zeroLengthSeparator: "zeroLengthSeparator"
      text: "text"
      reverse: true
  ProjectTransMemoryDto:
    type: "object"
    properties:
      targetLocale:
        type: "string"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      readMode:
        type: "boolean"
      writeMode:
        type: "boolean"
      transMemory:
        $ref: "#/definitions/TransMemoryDto"
      penalty:
        type: "number"
        format: "double"
      applyPenaltyTo101Only:
        type: "boolean"
    example:
      transMemory:
        internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        sourceLang: "sourceLang"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      targetLocale: "targetLocale"
      applyPenaltyTo101Only: true
      penalty: 0.80082819046101150206595775671303272247314453125
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      writeMode: true
      readMode: true
  ProjectTransMemoryListDto:
    type: "object"
    properties:
      transMemories:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTransMemoryDto"
    example:
      transMemories:
      - transMemory:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          sourceLang: "sourceLang"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        targetLocale: "targetLocale"
        applyPenaltyTo101Only: true
        penalty: 0.80082819046101150206595775671303272247314453125
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        writeMode: true
        readMode: true
      - transMemory:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          sourceLang: "sourceLang"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        targetLocale: "targetLocale"
        applyPenaltyTo101Only: true
        penalty: 0.80082819046101150206595775671303272247314453125
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        writeMode: true
        readMode: true
  SetProjectTransMemoriesDto:
    type: "object"
    properties:
      readTransMemories:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      writeTransMemories:
        type: "array"
        description: "Write translation memory must be included in the read translation\
          \ memories, too; max 2 write TMs allowed"
        items:
          $ref: "#/definitions/IdReference"
        maxItems: 2
        minItems: 0
      penalties:
        type: "array"
        description: "A list of penalties for each read translation memory"
        items:
          type: "number"
          format: "double"
      targetLang:
        type: "string"
        description: "Set translation memories only for the specific project target\
          \ language"
      workflowStep:
        description: "set translation memories only for the specific workflow step"
        $ref: "#/definitions/IdReference"
    example:
      targetLang: "targetLang"
      penalties:
      - 0.80082819046101150206595775671303272247314453125
      - 0.80082819046101150206595775671303272247314453125
      readTransMemories:
      - id: "id"
      - id: "id"
      workflowStep:
        id: "id"
      writeTransMemories:
      - id: "id"
      - id: "id"
  SearchTMRequestDto:
    type: "object"
    required:
    - "segment"
    - "targetLangs"
    properties:
      segment:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 15
      scoreThreshold:
        type: "number"
        format: "double"
        minimum: 0
        maximum: 1.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      previousSegment:
        type: "string"
      nextSegment:
        type: "string"
      contextKey:
        type: "string"
      maxSegments:
        type: "integer"
        format: "int32"
        description: "Default: 5"
        minimum: 0
        maximum: 5
      maxSubSegments:
        type: "integer"
        format: "int32"
        description: "Default: 5"
        minimum: 0
        maximum: 5
      tagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadataDto"
      targetLangs:
        type: "array"
        items:
          type: "string"
        maxItems: 2147483647
        minItems: 1
  QuoteCreateDto:
    type: "object"
    required:
    - "analyse"
    - "name"
    - "priceList"
    - "project"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      project:
        $ref: "#/definitions/UidReference"
      analyse:
        $ref: "#/definitions/IdReference"
      priceList:
        $ref: "#/definitions/IdReference"
      netRateScheme:
        $ref: "#/definitions/IdReference"
      workflowStepList:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      provider:
        $ref: "#/definitions/ProviderReference"
    example:
      provider:
        id: "id"
        type: "type"
      workflowStepList:
      - id: "id"
      - id: "id"
      name: "name"
      analyse:
        id: "id"
      project:
        uid: "uid"
      netRateScheme:
        id: "id"
      priceList:
        id: "id"
  AuthSchema:
    type: "object"
    properties:
      type:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      specUrl:
        type: "string"
      primary:
        type: "boolean"
    example:
      name: "name"
      description: "description"
      type: "type"
      specUrl: "specUrl"
      primary: true
  ServiceProviderConfigDto:
    type: "object"
    properties:
      authenticationSchemes:
        type: "array"
        items:
          $ref: "#/definitions/AuthSchema"
      schemas:
        type: "array"
        items:
          type: "string"
      patch:
        $ref: "#/definitions/Supported"
      bulk:
        $ref: "#/definitions/Supported"
      filter:
        $ref: "#/definitions/Supported"
      changePassword:
        $ref: "#/definitions/Supported"
      sort:
        $ref: "#/definitions/Supported"
      etag:
        $ref: "#/definitions/Supported"
      xmlDataFormat:
        $ref: "#/definitions/Supported"
    example:
      patch:
        supported: true
      filter:
        supported: true
      authenticationSchemes:
      - name: "name"
        description: "description"
        type: "type"
        specUrl: "specUrl"
        primary: true
      - name: "name"
        description: "description"
        type: "type"
        specUrl: "specUrl"
        primary: true
      schemas:
      - "schemas"
      - "schemas"
      etag:
        supported: true
      sort:
        supported: true
      xmlDataFormat:
        supported: true
      bulk:
        supported: true
      changePassword:
        supported: true
  Supported:
    type: "object"
    properties:
      supported:
        type: "boolean"
    example:
      supported: true
  Attribute:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
        enum:
        - "STRING"
        - "BOOLEAN"
        - "DECIMAL"
        - "INTEGER"
        - "DATE_TIME"
        - "BINARY"
        - "REFERENCE"
        - "COMPLEX"
      subAttributes:
        type: "array"
        items:
          $ref: "#/definitions/Attribute"
      multiValued:
        type: "boolean"
      description:
        type: "string"
      required:
        type: "boolean"
      caseExact:
        type: "boolean"
      mutability:
        type: "string"
        enum:
        - "READ_ONLY"
        - "READ_WRITE"
        - "IMMUTABLE"
        - "WRITE_ONLY"
      returned:
        type: "string"
        enum:
        - "ALWAYS"
        - "NEVER"
        - "DEFAULT"
        - "REQUEST"
      uniqueness:
        type: "string"
        enum:
        - "NONE"
        - "SERVER"
        - "GLOBAL"
    example:
      uniqueness: "NONE"
      name: "name"
      description: "description"
      mutability: "READ_ONLY"
      type: "STRING"
      multiValued: true
      caseExact: true
      returned: "ALWAYS"
      required: true
      subAttributes:
      - null
      - null
  ScimResourceSchema:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/Attribute"
    example:
      name: "name"
      description: "description"
      attributes:
      - uniqueness: "NONE"
        name: "name"
        description: "description"
        mutability: "READ_ONLY"
        type: "STRING"
        multiValued: true
        caseExact: true
        returned: "ALWAYS"
        required: true
        subAttributes:
        - null
        - null
      - uniqueness: "NONE"
        name: "name"
        description: "description"
        mutability: "READ_ONLY"
        type: "STRING"
        multiValued: true
        caseExact: true
        returned: "ALWAYS"
        required: true
        subAttributes:
        - null
        - null
      id: "id"
  SchemaExtension:
    type: "object"
    properties:
      schema:
        type: "string"
      required:
        type: "boolean"
    example:
      schema: "schema"
      required: true
  ScimResourceTypeSchema:
    type: "object"
    properties:
      schemas:
        type: "array"
        items:
          type: "string"
      id:
        type: "string"
      name:
        type: "string"
      endpoint:
        type: "string"
      description:
        type: "string"
      schema:
        type: "string"
      schemaExtensions:
        type: "array"
        items:
          $ref: "#/definitions/SchemaExtension"
    example:
      schema: "schema"
      endpoint: "endpoint"
      schemas:
      - "schemas"
      - "schemas"
      name: "name"
      description: "description"
      schemaExtensions:
      - schema: "schema"
        required: true
      - schema: "schema"
        required: true
      id: "id"
  Email:
    type: "object"
    properties:
      value:
        type: "string"
      type:
        type: "string"
      primary:
        type: "boolean"
        description: "Default: false"
    example:
      type: "type"
      value: "value"
      primary: true
  Name:
    type: "object"
    required:
    - "familyName"
    - "givenName"
    properties:
      givenName:
        type: "string"
      familyName:
        type: "string"
    example:
      givenName: "givenName"
      familyName: "familyName"
  ScimMeta:
    type: "object"
    properties:
      created:
        type: "string"
        format: "date-time"
      location:
        type: "string"
    example:
      created: "2000-01-23T04:56:07.000+00:00"
      location: "location"
  ScimUserCoreDto:
    type: "object"
    required:
    - "emails"
    - "name"
    - "userName"
    properties:
      id:
        type: "string"
        readOnly: true
      userName:
        type: "string"
      name:
        $ref: "#/definitions/Name"
      active:
        type: "boolean"
        description: "Default: true"
      emails:
        type: "array"
        items:
          $ref: "#/definitions/Email"
        maxItems: 2147483647
        minItems: 1
      meta:
        $ref: "#/definitions/ScimMeta"
    example:
      emails:
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      - type: "type"
        value: "value"
        primary: true
      meta:
        created: "2000-01-23T04:56:07.000+00:00"
        location: "location"
      name:
        givenName: "givenName"
        familyName: "familyName"
      active: true
      id: "id"
      userName: "userName"
  ScimResourceDto:
    type: "object"
    properties:
      totalResults:
        type: "integer"
        format: "int32"
      itemsPerPage:
        type: "integer"
        format: "int32"
      startIndex:
        type: "integer"
        format: "int32"
      schemas:
        type: "array"
        items:
          type: "string"
      resources:
        type: "array"
        items:
          type: "object"
          properties: {}
    example:
      totalResults: 0
      startIndex: 1
      itemsPerPage: 6
      schemas:
      - "schemas"
      - "schemas"
      resources:
      - "{}"
      - "{}"
  SegmentationRuleDto:
    type: "object"
    required:
    - "filename"
    - "name"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      locale:
        type: "string"
      primary:
        type: "boolean"
        description: "Default: false"
      filename:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
        readOnly: true
      createdBy:
        description: "created by user"
        $ref: "#/definitions/UserReference"
    description: "segmentation rule object"
    example:
      filename: "filename"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
      id: "id"
      locale: "locale"
      primary: true
  EditSegmentationRuleDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      primary:
        type: "boolean"
        description: "Default: false"
    description: "segmentation rule object for editing"
    example:
      name: "name"
      primary: true
  PageDtoSegmentationRuleReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/SegmentationRuleReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        locale: "locale"
        primary: true
      - filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        locale: "locale"
        primary: true
      totalElements: 0
  SegmentationRuleReference:
    type: "object"
    required:
    - "filename"
    - "name"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      locale:
        type: "string"
      primary:
        type: "boolean"
        description: "Default: false"
      filename:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
        readOnly: true
    example:
      filename: "filename"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      locale: "locale"
      primary: true
  SuggestResponse:
    type: "object"
    properties:
      word:
        type: "string"
      suggestions:
        type: "array"
        items:
          $ref: "#/definitions/Suggestion"
    example:
      suggestions:
      - distance: 0
        word: "word"
      - distance: 0
        word: "word"
      word: "word"
  SuggestResponseDto:
    type: "object"
    properties:
      suggestResults:
        type: "array"
        items:
          $ref: "#/definitions/SuggestResponse"
    example:
      suggestResults:
      - suggestions:
        - distance: 0
          word: "word"
        - distance: 0
          word: "word"
        word: "word"
      - suggestions:
        - distance: 0
          word: "word"
        - distance: 0
          word: "word"
        word: "word"
  Suggestion:
    type: "object"
    properties:
      word:
        type: "string"
      distance:
        type: "integer"
        format: "int32"
    example:
      distance: 0
      word: "word"
  SuggestRequestDto:
    type: "object"
    required:
    - "lang"
    - "words"
    properties:
      lang:
        type: "string"
      words:
        type: "array"
        items:
          type: "string"
      referenceTexts:
        type: "array"
        items:
          type: "string"
    example:
      referenceTexts:
      - "referenceTexts"
      - "referenceTexts"
      words:
      - "words"
      - "words"
      lang: "lang"
  CheckResponse:
    type: "object"
    properties:
      text:
        type: "string"
      misspelledWords:
        type: "array"
        items:
          $ref: "#/definitions/MisspelledWord"
    example:
      misspelledWords:
      - offset: 0
        word: "word"
      - offset: 0
        word: "word"
      text: "text"
  MisspelledWord:
    type: "object"
    properties:
      word:
        type: "string"
      offset:
        type: "integer"
        format: "int32"
    example:
      offset: 0
      word: "word"
  SpellCheckResponseDto:
    type: "object"
    properties:
      spellCheckResults:
        type: "array"
        items:
          $ref: "#/definitions/CheckResponse"
    example:
      spellCheckResults:
      - misspelledWords:
        - offset: 0
          word: "word"
        - offset: 0
          word: "word"
        text: "text"
      - misspelledWords:
        - offset: 0
          word: "word"
        - offset: 0
          word: "word"
        text: "text"
  SpellCheckRequestDto:
    type: "object"
    required:
    - "lang"
    - "texts"
    properties:
      lang:
        type: "string"
      texts:
        type: "array"
        items:
          type: "string"
      referenceTexts:
        type: "array"
        items:
          type: "string"
      zeroLengthSeparator:
        type: "string"
    example:
      texts:
      - "texts"
      - "texts"
      referenceTexts:
      - "referenceTexts"
      - "referenceTexts"
      zeroLengthSeparator: "zeroLengthSeparator"
      lang: "lang"
  DictionaryItemDto:
    type: "object"
    required:
    - "lang"
    - "word"
    properties:
      lang:
        type: "string"
      word:
        type: "string"
    example:
      lang: "lang"
      word: "word"
  SubDomainDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  SubDomainEditDto:
    type: "object"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
    example:
      name: "name"
  PageDtoSubDomainDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/SubDomainDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      totalElements: 0
  PageDtoTermBaseDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/TermBaseDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        langs:
        - "langs"
        - "langs"
        id: "id"
      - internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        langs:
        - "langs"
        - "langs"
        id: "id"
      totalElements: 0
  TermBaseEditDto:
    type: "object"
    required:
    - "langs"
    - "name"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      langs:
        type: "array"
        items:
          type: "string"
        maxItems: 2147483647
        minItems: 1
      client:
        $ref: "#/definitions/IdReference"
      domain:
        $ref: "#/definitions/IdReference"
      subDomain:
        $ref: "#/definitions/IdReference"
      businessUnit:
        $ref: "#/definitions/IdReference"
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
    example:
      note: "note"
      businessUnit:
        id: "id"
      subDomain:
        id: "id"
      domain:
        id: "id"
      name: "name"
      client:
        id: "id"
      langs:
      - "langs"
      - "langs"
      - "langs"
      - "langs"
      - "langs"
      - "langs"
      - "langs"
      - "langs"
      - "langs"
      - "langs"
  ImportResponse:
    type: "object"
    properties:
      acceptedSegmentsCount:
        type: "integer"
        format: "int32"
      createdSegmentsCount:
        type: "integer"
        format: "int32"
      updatedSegmentsCount:
        type: "integer"
        format: "int32"
      skippedSegmentsCount:
        type: "integer"
        format: "int32"
      empty:
        type: "boolean"
    example:
      acceptedSegmentsCount: 0
      updatedSegmentsCount: 1
      createdSegmentsCount: 6
      skippedSegmentsCount: 5
      empty: true
  TermCreateDto:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
      lang:
        type: "string"
      caseSensitive:
        type: "boolean"
        description: "Default: false"
      exactMatch:
        type: "boolean"
        description: "Default: false"
      forbidden:
        type: "boolean"
        description: "Default: false"
      preferred:
        type: "boolean"
        description: "Default: false"
      status:
        type: "string"
        enum:
        - "New"
        - "Approved"
      conceptId:
        type: "string"
      usage:
        type: "string"
      note:
        type: "string"
      shortTranslation:
        type: "string"
      termType:
        type: "string"
        enum:
        - "FULL_FORM"
        - "SHORT_FORM"
        - "ACRONYM"
        - "ABBREVIATION"
        - "PHRASE"
        - "VARIANT"
      partOfSpeech:
        type: "string"
        enum:
        - "ADJECTIVE"
        - "NOUN"
        - "VERB"
        - "ADVERB"
      gender:
        type: "string"
        enum:
        - "MASCULINE"
        - "FEMININE"
        - "NEUTRAL"
      number:
        type: "string"
        enum:
        - "SINGULAR"
        - "PLURAL"
        - "UNCOUNTABLE"
    example:
      note: "note"
      exactMatch: true
      gender: "MASCULINE"
      caseSensitive: true
      forbidden: true
      usage: "usage"
      partOfSpeech: "ADJECTIVE"
      termType: "FULL_FORM"
      shortTranslation: "shortTranslation"
      number: "SINGULAR"
      conceptId: "conceptId"
      text: "text"
      lang: "lang"
      preferred: true
      status: "New"
  TermEditDto:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
      lang:
        type: "string"
      caseSensitive:
        type: "boolean"
        description: "Default: false"
      exactMatch:
        type: "boolean"
        description: "Default: false"
      forbidden:
        type: "boolean"
        description: "Default: false"
      preferred:
        type: "boolean"
        description: "Default: false"
      status:
        type: "string"
        enum:
        - "New"
        - "Approved"
      usage:
        type: "string"
      note:
        type: "string"
      shortTranslation:
        type: "string"
      termType:
        type: "string"
        enum:
        - "FULL_FORM"
        - "SHORT_FORM"
        - "ACRONYM"
        - "ABBREVIATION"
        - "PHRASE"
        - "VARIANT"
      partOfSpeech:
        type: "string"
        enum:
        - "ADJECTIVE"
        - "NOUN"
        - "VERB"
        - "ADVERB"
      gender:
        type: "string"
        enum:
        - "MASCULINE"
        - "FEMININE"
        - "NEUTRAL"
      number:
        type: "string"
        enum:
        - "SINGULAR"
        - "PLURAL"
        - "UNCOUNTABLE"
    example:
      note: "note"
      exactMatch: true
      gender: "MASCULINE"
      caseSensitive: true
      forbidden: true
      usage: "usage"
      partOfSpeech: "ADJECTIVE"
      termType: "FULL_FORM"
      shortTranslation: "shortTranslation"
      number: "SINGULAR"
      text: "text"
      lang: "lang"
      preferred: true
      status: "New"
  ConceptListReference:
    type: "object"
    required:
    - "concepts"
    properties:
      concepts:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
        maxItems: 100
        minItems: 1
    example:
      concepts:
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
  ConceptDto:
    type: "object"
    properties:
      id:
        type: "string"
      writable:
        type: "boolean"
      terms:
        type: "array"
        items:
          type: "array"
          items:
            $ref: "#/definitions/TermDto"
    example:
      terms:
      - - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
      - - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          usage: "usage"
          termType: "termType"
          shortTranslation: "shortTranslation"
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          definition: "definition"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          caseSensitive: true
          forbidden: true
          partOfSpeech: "partOfSpeech"
          rtl: true
          url: "url"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          conceptNote: "conceptNote"
          status: "New"
      id: "id"
      writable: true
  BackgroundTasksTbDto:
    type: "object"
    properties:
      status:
        type: "string"
      finishedDataText:
        type: "string"
      asyncRequest:
        $ref: "#/definitions/AsyncRequestDto"
      lastTaskString:
        type: "string"
      metadata:
        $ref: "#/definitions/MetadataResponse"
      lastTaskOk:
        type: "string"
      lastTaskError:
        type: "string"
      lastTaskErrorHtml:
        type: "string"
    example:
      lastTaskOk: "lastTaskOk"
      metadata:
        deduplicatedSegmentsCount: 6
        segmentsCount: 0
        metadataByLanguage:
          key:
            segmentsCount: 1
      lastTaskString: "lastTaskString"
      lastTaskErrorHtml: "lastTaskErrorHtml"
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      finishedDataText: "finishedDataText"
      lastTaskError: "lastTaskError"
      status: "status"
  MetadataResponse:
    type: "object"
    properties:
      segmentsCount:
        type: "integer"
        format: "int64"
      deduplicatedSegmentsCount:
        type: "integer"
        format: "int64"
      metadataByLanguage:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/LanguageMetadata1"
    example:
      deduplicatedSegmentsCount: 6
      segmentsCount: 0
      metadataByLanguage:
        key:
          segmentsCount: 1
  BrowseResponseListDto:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/ConceptDto"
    example:
      searchResults:
      - terms:
        - - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
          - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
        - - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
          - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
        id: "id"
        writable: true
      - terms:
        - - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
          - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
        - - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
          - note: "note"
            exactMatch: true
            gender: "gender"
            modifiedAt: "2000-01-23T04:56:07.000+00:00"
            usage: "usage"
            termType: "termType"
            shortTranslation: "shortTranslation"
            writable: true
            createdAt: "2000-01-23T04:56:07.000+00:00"
            number: "number"
            conceptId: "conceptId"
            modifiedBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            definition: "definition"
            id: "id"
            text: "text"
            lang: "lang"
            preferred: true
            caseSensitive: true
            forbidden: true
            partOfSpeech: "partOfSpeech"
            rtl: true
            url: "url"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            domain: "domain"
            subDomains:
            - "subDomains"
            - "subDomains"
            conceptNote: "conceptNote"
            status: "New"
        id: "id"
        writable: true
  BrowseRequestDto:
    type: "object"
    properties:
      queryLang:
        type: "string"
      query:
        type: "string"
      status:
        type: "string"
      pageNumber:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 50
    example:
      pageNumber: 0
      query: "query"
      pageSize: 30
      queryLang: "queryLang"
      status: "status"
  TermBaseSearchRequestDto:
    type: "object"
    required:
    - "query"
    - "sourceLang"
    - "targetLangs"
    properties:
      targetLangs:
        type: "array"
        items:
          type: "string"
      sourceLang:
        type: "string"
      query:
        type: "string"
      status:
        type: "string"
        enum:
        - "New"
        - "Approved"
    example:
      sourceLang: "sourceLang"
      query: "query"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
      status: "New"
  MetadataTbDto:
    type: "object"
    properties:
      termsCount:
        type: "integer"
        format: "int64"
      metadataByLanguage:
        type: "object"
        additionalProperties:
          type: "integer"
          format: "int64"
    example:
      termsCount: 0
      metadataByLanguage:
        key: 6
  BackgroundTasksTmDto:
    type: "object"
    properties:
      status:
        type: "string"
      finishedDataText:
        type: "string"
      asyncRequest:
        $ref: "#/definitions/AsyncRequestDto"
      lastTaskString:
        type: "string"
      metadata:
        $ref: "#/definitions/MetadataResponse"
      lastTaskOk:
        type: "string"
      lastTaskError:
        type: "string"
      lastTaskErrorHtml:
        type: "string"
    example:
      lastTaskOk: "lastTaskOk"
      metadata:
        deduplicatedSegmentsCount: 6
        segmentsCount: 0
        metadataByLanguage:
          key:
            segmentsCount: 1
      lastTaskString: "lastTaskString"
      lastTaskErrorHtml: "lastTaskErrorHtml"
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      finishedDataText: "finishedDataText"
      lastTaskError: "lastTaskError"
      status: "status"
  LanguageMetadata1:
    type: "object"
    properties:
      segmentsCount:
        type: "integer"
        format: "int64"
    example:
      segmentsCount: 1
  TransMemoryCreateDto:
    type: "object"
    required:
    - "name"
    - "sourceLang"
    - "targetLangs"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      client:
        $ref: "#/definitions/IdReference"
      businessUnit:
        $ref: "#/definitions/IdReference"
      domain:
        $ref: "#/definitions/IdReference"
      subDomain:
        $ref: "#/definitions/IdReference"
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
    example:
      note: "note"
      businessUnit:
        id: "id"
      sourceLang: "sourceLang"
      subDomain:
        id: "id"
      domain:
        id: "id"
      name: "name"
      client:
        id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  PageDtoTransMemoryDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/TransMemoryDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        sourceLang: "sourceLang"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      - internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        sourceLang: "sourceLang"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      totalElements: 0
  TransMemoryEditDto:
    type: "object"
    required:
    - "name"
    - "targetLangs"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      targetLangs:
        type: "array"
        description: "New target languages to add. No languages can be removed"
        items:
          type: "string"
      client:
        $ref: "#/definitions/IdReference"
      businessUnit:
        $ref: "#/definitions/IdReference"
      domain:
        $ref: "#/definitions/IdReference"
      subDomain:
        $ref: "#/definitions/IdReference"
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
    example:
      note: "note"
      businessUnit:
        id: "id"
      subDomain:
        id: "id"
      domain:
        id: "id"
      name: "name"
      client:
        id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  TargetLanguageDto:
    type: "object"
    required:
    - "language"
    properties:
      language:
        type: "string"
    example:
      language: "language"
  SegmentDto:
    type: "object"
    required:
    - "sourceSegment"
    - "targetLang"
    - "targetSegment"
    properties:
      targetLang:
        type: "string"
      sourceSegment:
        type: "string"
      targetSegment:
        type: "string"
      previousSourceSegment:
        type: "string"
      nextSourceSegment:
        type: "string"
      sourceTagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadataDto"
      targetTagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadataDto"
    example:
      targetLang: "targetLang"
      sourceTagMetadata:
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      targetTagMetadata:
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      targetSegment: "targetSegment"
      nextSourceSegment: "nextSourceSegment"
      sourceSegment: "sourceSegment"
      previousSourceSegment: "previousSourceSegment"
  TranslationDto:
    type: "object"
    required:
    - "lang"
    - "text"
    properties:
      lang:
        type: "string"
      text:
        type: "string"
    example:
      text: "text"
      lang: "lang"
  WildCardSearchRequestDto:
    type: "object"
    required:
    - "query"
    - "sourceLang"
    properties:
      query:
        type: "string"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      count:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 50
      offset:
        type: "integer"
        format: "int32"
      sourceLangs:
        type: "array"
        items:
          type: "string"
    example:
      offset: 6
      sourceLang: "sourceLang"
      query: "query"
      count: 4
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  AsyncExportTMByQueryDto:
    type: "object"
    properties:
      asyncRequest:
        $ref: "#/definitions/IdReference"
      transMemory:
        $ref: "#/definitions/IdReference"
      exportTargetLangs:
        type: "array"
        items:
          type: "string"
      queries:
        type: "array"
        items:
          $ref: "#/definitions/Query"
    example:
      transMemory:
        id: "id"
      asyncRequest:
        id: "id"
      exportTargetLangs:
      - "exportTargetLangs"
      - "exportTargetLangs"
      queries:
      - query: "query"
        lang: "lang"
      - query: "query"
        lang: "lang"
  AsyncExportTMByQueryResponseDto:
    type: "object"
    properties:
      asyncRequest:
        $ref: "#/definitions/AsyncRequestDto"
      asyncExport:
        $ref: "#/definitions/AsyncExportTMByQueryDto"
    example:
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      asyncExport:
        transMemory:
          id: "id"
        asyncRequest:
          id: "id"
        exportTargetLangs:
        - "exportTargetLangs"
        - "exportTargetLangs"
        queries:
        - query: "query"
          lang: "lang"
        - query: "query"
          lang: "lang"
  Query:
    type: "object"
    properties:
      query:
        type: "string"
      lang:
        type: "string"
    example:
      query: "query"
      lang: "lang"
  ExportByQueryDto:
    type: "object"
    required:
    - "exportTargetLangs"
    - "queries"
    - "queryLangs"
    properties:
      exportTargetLangs:
        type: "array"
        items:
          type: "string"
      queries:
        type: "array"
        items:
          type: "string"
      queryLangs:
        type: "array"
        items:
          type: "string"
      createdAtMin:
        type: "string"
        format: "date-time"
      createdAtMax:
        type: "string"
        format: "date-time"
      modifiedAtMin:
        type: "string"
        format: "date-time"
      modifiedAtMax:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/IdReference"
      modifiedBy:
        $ref: "#/definitions/IdReference"
      filename:
        type: "string"
      project:
        $ref: "#/definitions/UidReference"
      callbackUrl:
        type: "string"
    example:
      modifiedAtMax: "2000-01-23T04:56:07.000+00:00"
      filename: "filename"
      createdBy:
        id: "id"
      createdAtMax: "2000-01-23T04:56:07.000+00:00"
      queryLangs:
      - "queryLangs"
      - "queryLangs"
      createdAtMin: "2000-01-23T04:56:07.000+00:00"
      project:
        uid: "uid"
      exportTargetLangs:
      - "exportTargetLangs"
      - "exportTargetLangs"
      modifiedBy:
        id: "id"
      callbackUrl: "callbackUrl"
      queries:
      - "queries"
      - "queries"
      modifiedAtMin: "2000-01-23T04:56:07.000+00:00"
  SearchRequestDto:
    type: "object"
    required:
    - "query"
    - "sourceLang"
    properties:
      query:
        type: "string"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      previousSegment:
        type: "string"
      nextSegment:
        type: "string"
      tagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadataDto"
      trimQuery:
        type: "boolean"
        description: "Remove leading and trailing whitespace from query. Default:\
          \ true"
      phraseQuery:
        type: "boolean"
        description: "Return both wildcard and exact search results. Default: true"
    example:
      trimQuery: true
      sourceLang: "sourceLang"
      query: "query"
      nextSegment: "nextSegment"
      previousSegment: "previousSegment"
      tagMetadata:
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      phraseQuery: true
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  TranslationRequestDto:
    type: "object"
    required:
    - "sourceTexts"
    properties:
      sourceTexts:
        type: "array"
        items:
          type: "string"
        maxItems: 2147483647
        minItems: 1
    example:
      sourceTexts:
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
      - "sourceTexts"
  TranslationPriceDto:
    type: "object"
    properties:
      workflowStep:
        $ref: "#/definitions/WorkflowStepDto"
      price:
        type: "number"
        format: "double"
    description: "connection between language pair and workflow steps, contains price"
    example:
      price: 7.061401241503109105224211816675961017608642578125
      workflowStep:
        name: "name"
        id: "id"
        abbr: "abbr"
  TranslationPriceListDto:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
        readOnly: true
      dateCreated:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      currencyCode:
        type: "string"
      billingUnit:
        type: "string"
        enum:
        - "Character"
        - "Word"
        - "Page"
        - "Hour"
      priceSets:
        type: "array"
        items:
          $ref: "#/definitions/TranslationPriceSetDto"
    description: "Price list with set of prices for language pairs"
    example:
      priceSets:
      - targetLang: "targetLang"
        sourceLang: "sourceLang"
        minimumPrice: 2.3021358869347654518833223846741020679473876953125
        prices:
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
      - targetLang: "targetLang"
        sourceLang: "sourceLang"
        minimumPrice: 2.3021358869347654518833223846741020679473876953125
        prices:
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      currencyCode: "currencyCode"
      billingUnit: "Character"
  TranslationPriceSetDto:
    type: "object"
    properties:
      sourceLang:
        type: "string"
      targetLang:
        type: "string"
      minimumPrice:
        type: "number"
        format: "double"
      prices:
        type: "array"
        items:
          $ref: "#/definitions/TranslationPriceDto"
    description: "Language pair for translation price list, owns minimalPrice"
    example:
      targetLang: "targetLang"
      sourceLang: "sourceLang"
      minimumPrice: 2.3021358869347654518833223846741020679473876953125
      prices:
      - price: 7.061401241503109105224211816675961017608642578125
        workflowStep:
          name: "name"
          id: "id"
          abbr: "abbr"
      - price: 7.061401241503109105224211816675961017608642578125
        workflowStep:
          name: "name"
          id: "id"
          abbr: "abbr"
  TranslationPriceListCreateDto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      currencyCode:
        type: "string"
      billingUnit:
        type: "string"
        description: "Default: Word"
        enum:
        - "Word"
        - "Page"
        - "Character"
        - "Hour"
    example:
      name: "name"
      currencyCode: "currencyCode"
      billingUnit: "Word"
  PageDtoTranslationPriceListDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/TranslationPriceListDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - priceSets:
        - targetLang: "targetLang"
          sourceLang: "sourceLang"
          minimumPrice: 2.3021358869347654518833223846741020679473876953125
          prices:
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
        - targetLang: "targetLang"
          sourceLang: "sourceLang"
          minimumPrice: 2.3021358869347654518833223846741020679473876953125
          prices:
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        currencyCode: "currencyCode"
        billingUnit: "Character"
      - priceSets:
        - targetLang: "targetLang"
          sourceLang: "sourceLang"
          minimumPrice: 2.3021358869347654518833223846741020679473876953125
          prices:
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
        - targetLang: "targetLang"
          sourceLang: "sourceLang"
          minimumPrice: 2.3021358869347654518833223846741020679473876953125
          prices:
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
          - price: 7.061401241503109105224211816675961017608642578125
            workflowStep:
              name: "name"
              id: "id"
              abbr: "abbr"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        currencyCode: "currencyCode"
        billingUnit: "Character"
      totalElements: 0
  TranslationPriceSetListDto:
    type: "object"
    properties:
      priceSets:
        type: "array"
        items:
          $ref: "#/definitions/TranslationPriceSetDto"
    example:
      priceSets:
      - targetLang: "targetLang"
        sourceLang: "sourceLang"
        minimumPrice: 2.3021358869347654518833223846741020679473876953125
        prices:
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
      - targetLang: "targetLang"
        sourceLang: "sourceLang"
        minimumPrice: 2.3021358869347654518833223846741020679473876953125
        prices:
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
  TranslationPriceSetCreateDto:
    type: "object"
    required:
    - "sourceLanguages"
    - "targetLanguages"
    properties:
      sourceLanguages:
        type: "array"
        items:
          type: "string"
        maxItems: 100
        minItems: 1
      targetLanguages:
        type: "array"
        items:
          type: "string"
        maxItems: 100
        minItems: 1
    example:
      targetLanguages:
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      - "targetLanguages"
      sourceLanguages:
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
      - "sourceLanguages"
  TranslationPriceSetBulkDeleteDto:
    type: "object"
    properties:
      sourceLanguages:
        type: "array"
        items:
          type: "string"
      targetLanguages:
        type: "array"
        items:
          type: "string"
    example:
      targetLanguages:
      - "targetLanguages"
      - "targetLanguages"
      sourceLanguages:
      - "sourceLanguages"
      - "sourceLanguages"
  PageDtoTranslationPriceSetDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/TranslationPriceSetDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - targetLang: "targetLang"
        sourceLang: "sourceLang"
        minimumPrice: 2.3021358869347654518833223846741020679473876953125
        prices:
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
      - targetLang: "targetLang"
        sourceLang: "sourceLang"
        minimumPrice: 2.3021358869347654518833223846741020679473876953125
        prices:
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
        - price: 7.061401241503109105224211816675961017608642578125
          workflowStep:
            name: "name"
            id: "id"
            abbr: "abbr"
      totalElements: 0
  TranslationPriceSetBulkMinimumPricesDto:
    type: "object"
    properties:
      sourceLanguages:
        type: "array"
        items:
          type: "string"
      targetLanguages:
        type: "array"
        items:
          type: "string"
      minimumPrice:
        type: "number"
        format: "double"
    example:
      targetLanguages:
      - "targetLanguages"
      - "targetLanguages"
      sourceLanguages:
      - "sourceLanguages"
      - "sourceLanguages"
      minimumPrice: 0.80082819046101150206595775671303272247314453125
  TranslationPriceSetBulkPricesDto:
    type: "object"
    properties:
      sourceLanguages:
        type: "array"
        items:
          type: "string"
      targetLanguages:
        type: "array"
        items:
          type: "string"
      price:
        type: "number"
        format: "double"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
        maxItems: 15
        minItems: 0
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      - id: "id"
      targetLanguages:
      - "targetLanguages"
      - "targetLanguages"
      sourceLanguages:
      - "sourceLanguages"
      - "sourceLanguages"
      price: 0.80082819046101150206595775671303272247314453125
  PageDtoUserDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/UserDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - lastName: "lastName"
        note: "note"
        role: "SYS_ADMIN"
        timezone: "timezone"
        active: true
        sourceLangs:
        - "sourceLangs"
        - "sourceLangs"
        userName: "userName"
        dateDeleted: "2000-01-23T04:56:07.000+00:00"
        priceList:
          name: "name"
          id: "id"
        firstName: "firstName"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        terminologist: true
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        email: "email"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      - lastName: "lastName"
        note: "note"
        role: "SYS_ADMIN"
        timezone: "timezone"
        active: true
        sourceLangs:
        - "sourceLangs"
        - "sourceLangs"
        userName: "userName"
        dateDeleted: "2000-01-23T04:56:07.000+00:00"
        priceList:
          name: "name"
          id: "id"
        firstName: "firstName"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        terminologist: true
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        email: "email"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      totalElements: 0
  UserDto:
    type: "object"
    properties:
      id:
        type: "string"
      userName:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      dateDeleted:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
      role:
        type: "string"
        enum:
        - "SYS_ADMIN"
        - "SYS_ADMIN_READ"
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      timezone:
        type: "string"
      note:
        type: "string"
      terminologist:
        type: "boolean"
      sourceLangs:
        type: "array"
        items:
          type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      active:
        type: "boolean"
      priceList:
        $ref: "#/definitions/PriceListReference"
      netRateScheme:
        $ref: "#/definitions/DiscountSchemeReference"
    example:
      lastName: "lastName"
      note: "note"
      role: "SYS_ADMIN"
      timezone: "timezone"
      active: true
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      userName: "userName"
      dateDeleted: "2000-01-23T04:56:07.000+00:00"
      priceList:
        name: "name"
        id: "id"
      firstName: "firstName"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      terminologist: true
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      id: "id"
      email: "email"
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  AssignedJobDto:
    type: "object"
    properties:
      uid:
        type: "string"
      filename:
        type: "string"
      dateDue:
        type: "string"
        format: "date-time"
      dateCreated:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      targetLang:
        type: "string"
      sourceLang:
        type: "string"
      project:
        $ref: "#/definitions/ProjectReference"
      workflowStep:
        $ref: "#/definitions/ProjectWorkflowStepReference"
      imported:
        type: "boolean"
    example:
      dateDue: "2000-01-23T04:56:07.000+00:00"
      uid: "uid"
      targetLang: "targetLang"
      filename: "filename"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      sourceLang: "sourceLang"
      imported: true
      workflowStep:
        name: "name"
        id: "id"
        workflowLevel: 1
        order: 6
      project:
        uid: "uid"
        name: "name"
      status: "NEW"
  PageDtoAssignedJobDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/AssignedJobDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        uid: "uid"
        targetLang: "targetLang"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        sourceLang: "sourceLang"
        imported: true
        workflowStep:
          name: "name"
          id: "id"
          workflowLevel: 1
          order: 6
        project:
          uid: "uid"
          name: "name"
        status: "NEW"
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        uid: "uid"
        targetLang: "targetLang"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        sourceLang: "sourceLang"
        imported: true
        workflowStep:
          name: "name"
          id: "id"
          workflowLevel: 1
          order: 6
        project:
          uid: "uid"
          name: "name"
        status: "NEW"
      totalElements: 0
  UserCreateDto:
    type: "object"
    required:
    - "email"
    - "firstName"
    - "lastName"
    - "password"
    - "role"
    - "timezone"
    - "userName"
    properties:
      userName:
        type: "string"
        minLength: 0
        maxLength: 255
      firstName:
        type: "string"
        minLength: 0
        maxLength: 255
      lastName:
        type: "string"
        minLength: 0
        maxLength: 255
      email:
        type: "string"
        minLength: 0
        maxLength: 255
      password:
        type: "string"
        minLength: 0
        maxLength: 255
      role:
        type: "string"
        enum:
        - "SYS_ADMIN"
        - "SYS_ADMIN_READ"
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      timezone:
        type: "string"
        minLength: 0
        maxLength: 255
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
      terminologist:
        type: "boolean"
        description: "Default: false"
      sourceLangs:
        type: "array"
        items:
          type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      subDomains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      projectBusinessUnits:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      lastName: "lastName"
      note: "note"
      role: "SYS_ADMIN"
      clients:
      - id: "id"
      - id: "id"
      timezone: "timezone"
      domains:
      - id: "id"
      - id: "id"
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      userName: "userName"
      firstName: "firstName"
      projectBusinessUnits:
      - id: "id"
      - id: "id"
      password: "password"
      terminologist: true
      subDomains:
      - id: "id"
      - id: "id"
      email: "email"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  UserEditDto:
    type: "object"
    required:
    - "email"
    - "firstName"
    - "lastName"
    - "role"
    - "timezone"
    - "userName"
    properties:
      userName:
        type: "string"
        minLength: 0
        maxLength: 255
      firstName:
        type: "string"
        minLength: 0
        maxLength: 255
      lastName:
        type: "string"
        minLength: 0
        maxLength: 255
      email:
        type: "string"
        minLength: 0
        maxLength: 255
      role:
        type: "string"
        enum:
        - "SYS_ADMIN"
        - "SYS_ADMIN_READ"
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      timezone:
        type: "string"
        minLength: 0
        maxLength: 255
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
      terminologist:
        type: "boolean"
        description: "Default: false"
      sourceLangs:
        type: "array"
        items:
          type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      active:
        type: "boolean"
        description: "Default: true"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      subDomains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      projectBusinessUnits:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
    description: "User object to update. Optional empty fields will be set to null"
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      lastName: "lastName"
      note: "note"
      role: "SYS_ADMIN"
      clients:
      - id: "id"
      - id: "id"
      timezone: "timezone"
      active: true
      domains:
      - id: "id"
      - id: "id"
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      userName: "userName"
      firstName: "firstName"
      projectBusinessUnits:
      - id: "id"
      - id: "id"
      terminologist: true
      subDomains:
      - id: "id"
      - id: "id"
      email: "email"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  UserPasswordEditDto:
    type: "object"
    required:
    - "password"
    properties:
      password:
        type: "string"
        minLength: 0
        maxLength: 255
    example:
      password: "password"
  UserStatisticsDto:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date-time"
      ipAddress:
        type: "string"
      ipCountry:
        type: "string"
      userAgent:
        type: "string"
    description: "user login statistics"
    example:
      date: "2000-01-23T04:56:07.000+00:00"
      ipAddress: "ipAddress"
      ipCountry: "ipCountry"
      userAgent: "userAgent"
  UserStatisticsListDto:
    type: "object"
    required:
    - "userStatistics"
    properties:
      userStatistics:
        type: "array"
        items:
          $ref: "#/definitions/UserStatisticsDto"
    description: "envelope for user statistics"
    example:
      userStatistics:
      - date: "2000-01-23T04:56:07.000+00:00"
        ipAddress: "ipAddress"
        ipCountry: "ipCountry"
        userAgent: "userAgent"
      - date: "2000-01-23T04:56:07.000+00:00"
        ipAddress: "ipAddress"
        ipCountry: "ipCountry"
        userAgent: "userAgent"
  PageDtoWorkflowStepReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - name: "name"
        id: "id"
        order: 6
      - name: "name"
        id: "id"
        order: 6
      totalElements: 0
  PageDtoString:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          type: "string"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - "content"
      - "content"
      totalElements: 0
  PageDtoProjectReference:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/ProjectReference"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - uid: "uid"
        name: "name"
      - uid: "uid"
        name: "name"
      totalElements: 0
  LastLoginDto:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/UserReference"
      lastLoginDate:
        type: "string"
        format: "date-time"
    example:
      lastLoginDate: "2000-01-23T04:56:07.000+00:00"
      user:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
  PageDtoLastLoginDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/LastLoginDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - lastLoginDate: "2000-01-23T04:56:07.000+00:00"
        user:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
      - lastLoginDate: "2000-01-23T04:56:07.000+00:00"
        user:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
      totalElements: 0
  VendorDto:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      vendorToken:
        type: "string"
      priceList:
        $ref: "#/definitions/PriceListReference"
      netRateScheme:
        $ref: "#/definitions/DiscountSchemeReference"
    example:
      vendorToken: "vendorToken"
      name: "name"
      id: "id"
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      priceList:
        name: "name"
        id: "id"
  PageDtoVendorDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/VendorDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - vendorToken: "vendorToken"
        name: "name"
        id: "id"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        priceList:
          name: "name"
          id: "id"
      - vendorToken: "vendorToken"
        name: "name"
        id: "id"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        priceList:
          name: "name"
          id: "id"
      totalElements: 0
  DiscoveredVendorDto:
    type: "object"
    properties:
      vendor:
        $ref: "#/definitions/VendorDto"
      org:
        $ref: "#/definitions/OrganizationInfo"
      totalResponses:
        type: "integer"
        format: "int64"
      lastResponses:
        type: "array"
        items:
          $ref: "#/definitions/JobBoardResponseDto"
    example:
      totalResponses: 2
      org:
        deleted: true
        name: "name"
      vendor:
        vendorToken: "vendorToken"
        name: "name"
        id: "id"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        priceList:
          name: "name"
          id: "id"
      lastResponses:
      - profileUrl: "profileUrl"
        note: "note"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        wordRate: 7.061401241503109105224211816675961017608642578125
        name: "name"
        email: "email"
        sampleTranslation: "sampleTranslation"
      - profileUrl: "profileUrl"
        note: "note"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        wordRate: 7.061401241503109105224211816675961017608642578125
        name: "name"
        email: "email"
        sampleTranslation: "sampleTranslation"
  JobBoardResponseDto:
    type: "object"
    properties:
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      email:
        type: "string"
      sampleTranslation:
        type: "string"
      wordRate:
        type: "number"
        format: "double"
      profileUrl:
        type: "string"
      note:
        type: "string"
    example:
      profileUrl: "profileUrl"
      note: "note"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      wordRate: 7.061401241503109105224211816675961017608642578125
      name: "name"
      email: "email"
      sampleTranslation: "sampleTranslation"
  OrganizationInfo:
    type: "object"
    properties:
      name:
        type: "string"
      deleted:
        type: "boolean"
    example:
      deleted: true
      name: "name"
  PageDtoDiscoveredVendorDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/DiscoveredVendorDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - totalResponses: 2
        org:
          deleted: true
          name: "name"
        vendor:
          vendorToken: "vendorToken"
          name: "name"
          id: "id"
          netRateScheme:
            dateCreated: "2000-01-23T04:56:07.000+00:00"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            name: "name"
            id: "id"
          priceList:
            name: "name"
            id: "id"
        lastResponses:
        - profileUrl: "profileUrl"
          note: "note"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          wordRate: 7.061401241503109105224211816675961017608642578125
          name: "name"
          email: "email"
          sampleTranslation: "sampleTranslation"
        - profileUrl: "profileUrl"
          note: "note"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          wordRate: 7.061401241503109105224211816675961017608642578125
          name: "name"
          email: "email"
          sampleTranslation: "sampleTranslation"
      - totalResponses: 2
        org:
          deleted: true
          name: "name"
        vendor:
          vendorToken: "vendorToken"
          name: "name"
          id: "id"
          netRateScheme:
            dateCreated: "2000-01-23T04:56:07.000+00:00"
            createdBy:
              firstName: "firstName"
              lastName: "lastName"
              uid: "uid"
              role: "SYS_ADMIN"
              id: "id"
              userName: "userName"
              email: "email"
            name: "name"
            id: "id"
          priceList:
            name: "name"
            id: "id"
        lastResponses:
        - profileUrl: "profileUrl"
          note: "note"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          wordRate: 7.061401241503109105224211816675961017608642578125
          name: "name"
          email: "email"
          sampleTranslation: "sampleTranslation"
        - profileUrl: "profileUrl"
          note: "note"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          wordRate: 7.061401241503109105224211816675961017608642578125
          name: "name"
          email: "email"
          sampleTranslation: "sampleTranslation"
      totalElements: 0
  PageDtoWebHookDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/WebHookDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - hidden: true
        id: "id"
        event: "JOB_STATUS_CHANGED"
        url: "url"
      - hidden: true
        id: "id"
        event: "JOB_STATUS_CHANGED"
        url: "url"
      totalElements: 0
  WebHookDto:
    type: "object"
    required:
    - "url"
    properties:
      id:
        type: "string"
      url:
        type: "string"
      event:
        type: "string"
        enum:
        - "JOB_STATUS_CHANGED"
        - "JOB_CREATED"
        - "JOB_ASSIGNED"
        - "JOB_DUE_DATE_CHANGED"
      hidden:
        type: "boolean"
        description: "Default: false"
    example:
      hidden: true
      id: "id"
      event: "JOB_STATUS_CHANGED"
      url: "url"
  PageDtoWorkflowStepDto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepDto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - name: "name"
        id: "id"
        abbr: "abbr"
      - name: "name"
        id: "id"
        abbr: "abbr"
      totalElements: 0
  AnalyseLanguagePartV2Dto:
    type: "object"
    properties:
      id:
        type: "string"
      sourceLang:
        type: "string"
      targetLang:
        type: "string"
      data:
        $ref: "#/definitions/DataDto"
      discountedData:
        $ref: "#/definitions/DataDto"
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseJobReference"
    example:
      targetLang: "targetLang"
      data:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
      sourceLang: "sourceLang"
      discountedData:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
      jobs:
      - uid: "uid"
        filename: "filename"
      - uid: "uid"
        filename: "filename"
      id: "id"
  AnalyseV2Dto:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
        enum:
        - "PreAnalyse"
        - "PostAnalyse"
        - "PreAnalyseTarget"
        - "Compare"
      name:
        type: "string"
      provider:
        $ref: "#/definitions/ProviderReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      netRateScheme:
        $ref: "#/definitions/NetRateSchemeReference"
      analyseLanguageParts:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseLanguagePartV2Dto"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      provider:
        id: "id"
        type: "type"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
      id: "id"
      type: "PreAnalyse"
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      analyseLanguageParts:
      - targetLang: "targetLang"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        sourceLang: "sourceLang"
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        jobs:
        - uid: "uid"
          filename: "filename"
        - uid: "uid"
          filename: "filename"
        id: "id"
      - targetLang: "targetLang"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        sourceLang: "sourceLang"
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        jobs:
        - uid: "uid"
          filename: "filename"
        - uid: "uid"
          filename: "filename"
        id: "id"
  AsyncAnalyseListResponseV2Dto:
    type: "object"
    properties:
      asyncRequests:
        type: "array"
        items:
          $ref: "#/definitions/AsyncAnalyseResponseV2Dto"
    example:
      asyncRequests:
      - asyncRequest:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          action: "PRE_ANALYSE"
          project:
            uid: "uid"
            name: "name"
          id: "id"
          asyncResponse:
            dateCreated: "2000-01-23T04:56:07.000+00:00"
            errorDesc: "errorDesc"
            warnings:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
            errorCode: "errorCode"
            errorDetails:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
        analyse:
          id: "id"
      - asyncRequest:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          action: "PRE_ANALYSE"
          project:
            uid: "uid"
            name: "name"
          id: "id"
          asyncResponse:
            dateCreated: "2000-01-23T04:56:07.000+00:00"
            errorDesc: "errorDesc"
            warnings:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
            errorCode: "errorCode"
            errorDetails:
            - args:
                key: "{}"
              code: "code"
              message: "message"
            - args:
                key: "{}"
              code: "code"
              message: "message"
        analyse:
          id: "id"
  AsyncAnalyseResponseV2Dto:
    type: "object"
    properties:
      asyncRequest:
        $ref: "#/definitions/AsyncRequestV2Dto"
      analyse:
        $ref: "#/definitions/IdReference"
    example:
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      analyse:
        id: "id"
  AsyncRequestV2Dto:
    type: "object"
    properties:
      id:
        type: "string"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      action:
        type: "string"
        enum:
        - "PRE_ANALYSE"
        - "POST_ANALYSE"
        - "COMPARE_ANALYSE"
        - "PRE_TRANSLATE"
        - "ASYNC_TRANSLATE"
        - "IMPORT_JOB"
        - "IMPORT_FILE"
        - "ALIGN"
        - "EXPORT_TMX_BY_QUERY"
        - "EXPORT_TMX"
        - "IMPORT_TMX"
        - "INSERT_INTO_TM"
        - "QA"
        - "UPDATE_CONTINUOUS_JOB"
        - "MIGRATE_TM"
        - "MIGRATE_TM_OWN_SERVICE"
      asyncResponse:
        $ref: "#/definitions/AsyncResponseV2Dto"
      parent:
        $ref: "#/definitions/AsyncRequestV2Dto"
      project:
        $ref: "#/definitions/ProjectReference"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      action: "PRE_ANALYSE"
      project:
        uid: "uid"
        name: "name"
      id: "id"
      asyncResponse:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        errorDesc: "errorDesc"
        warnings:
        - args:
            key: "{}"
          code: "code"
          message: "message"
        - args:
            key: "{}"
          code: "code"
          message: "message"
        errorCode: "errorCode"
        errorDetails:
        - args:
            key: "{}"
          code: "code"
          message: "message"
        - args:
            key: "{}"
          code: "code"
          message: "message"
  AsyncResponseV2Dto:
    type: "object"
    properties:
      dateCreated:
        type: "string"
        format: "date-time"
      errorCode:
        type: "string"
      errorDesc:
        type: "string"
      errorDetails:
        type: "array"
        items:
          $ref: "#/definitions/ErrorDetailDtoV2"
      warnings:
        type: "array"
        items:
          $ref: "#/definitions/ErrorDetailDtoV2"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      errorDesc: "errorDesc"
      warnings:
      - args:
          key: "{}"
        code: "code"
        message: "message"
      - args:
          key: "{}"
        code: "code"
        message: "message"
      errorCode: "errorCode"
      errorDetails:
      - args:
          key: "{}"
        code: "code"
        message: "message"
      - args:
          key: "{}"
        code: "code"
        message: "message"
  ErrorDetailDtoV2:
    type: "object"
    properties:
      code:
        type: "string"
        description: "Code, e.g. NOT_FOUND."
      args:
        type: "object"
        description: "Related arguments, e.g. number => \"hello world\""
        additionalProperties:
          type: "object"
          properties: {}
      message:
        type: "string"
        description: "Optional human-readable message."
    example:
      args:
        key: "{}"
      code: "code"
      message: "message"
  CreateAnalyseAsyncV2Dto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 50000
        minItems: 1
      type:
        type: "string"
        description: "default: PreAnalyse"
        enum:
        - "PreAnalyse"
        - "PostAnalyse"
        - "Compare"
      includeFuzzyRepetitions:
        type: "boolean"
        description: "Default: true"
      includeConfirmedSegments:
        type: "boolean"
        description: "Default: true"
      includeNumbers:
        type: "boolean"
        description: "Default: true"
      includeLockedSegments:
        type: "boolean"
        description: "Default: true"
      countSourceUnits:
        type: "boolean"
        description: "Default: true"
      includeTransMemory:
        type: "boolean"
        description: "Default: true"
      includeNonTranslatables:
        type: "boolean"
        description: "Default: false. Works only for type=PreAnalyse."
      includeMachineTranslationMatches:
        type: "boolean"
        description: "Default: false. Works only for type=PreAnalyse."
      transMemoryPostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      nonTranslatablePostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      machineTranslatePostEditing:
        type: "boolean"
        description: "Default: false. Works only for type=PostAnalyse."
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      netRateScheme:
        $ref: "#/definitions/IdReference"
      compareWorkflowLevel:
        type: "integer"
        format: "int32"
        description: "Required for type=Compare"
        minimum: 1
        maximum: 15
      useProjectAnalysisSettings:
        type: "boolean"
        description: "Default: false. Use default project settings. Will be overwritten\
          \ with setting sent\n        in the API call."
      callbackUrl:
        type: "string"
      provider:
        $ref: "#/definitions/ProviderReference"
    example:
      includeConfirmedSegments: true
      includeNonTranslatables: true
      includeLockedSegments: true
      countSourceUnits: true
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      includeMachineTranslationMatches: true
      type: "PreAnalyse"
      includeTransMemory: true
      nonTranslatablePostEditing: true
      includeNumbers: true
      includeFuzzyRepetitions: true
      provider:
        id: "id"
        type: "type"
      transMemoryPostEditing: true
      name: "name"
      callbackUrl: "callbackUrl"
      compareWorkflowLevel: 2
      netRateScheme:
        id: "id"
      useProjectAnalysisSettings: true
      machineTranslatePostEditing: true
  AnalysesV2Dto:
    type: "object"
    properties:
      analyses:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseV2Dto"
    example:
      analyses:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        provider:
          id: "id"
          type: "type"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
        type: "PreAnalyse"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        analyseLanguageParts:
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        provider:
          id: "id"
          type: "type"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
        type: "PreAnalyse"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        analyseLanguageParts:
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
  BulkEditAnalyseV2Dto:
    type: "object"
    required:
    - "analyses"
    properties:
      analyses:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
        maxItems: 100
        minItems: 1
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      provider:
        $ref: "#/definitions/ProviderReference"
  WorkflowChangesDto:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 100
        minItems: 1
  SearchResponseListTmDtoV2:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/SearchTMResponseDtoV2"
    example:
      searchResults:
      - transMemory:
          name: "name"
          id: "id"
          reverse: true
        score: 9.301444243932575517419536481611430644989013671875
        translations:
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        segmentId: "segmentId"
        subSegment: true
        source:
          modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        grossScore: 7.061401241503109105224211816675961017608642578125
      - transMemory:
          name: "name"
          id: "id"
          reverse: true
        score: 9.301444243932575517419536481611430644989013671875
        translations:
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        segmentId: "segmentId"
        subSegment: true
        source:
          modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        grossScore: 7.061401241503109105224211816675961017608642578125
  SearchTMClientDtoV2:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 5
  SearchTMDomainDtoV2:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 5
  SearchTMProjectDtoV2:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      uid:
        type: "string"
      name:
        type: "string"
    example:
      uid: "uid"
      name: "name"
      id: 1
  SearchTMResponseDtoV2:
    type: "object"
    properties:
      segmentId:
        type: "string"
      source:
        $ref: "#/definitions/SearchTMSegmentDtoV2"
      translations:
        type: "array"
        items:
          $ref: "#/definitions/SearchTMSegmentDtoV2"
      transMemory:
        $ref: "#/definitions/SearchTMTransMemoryDtoV2"
      grossScore:
        type: "number"
        format: "double"
      score:
        type: "number"
        format: "double"
      subSegment:
        type: "boolean"
    example:
      transMemory:
        name: "name"
        id: "id"
        reverse: true
      score: 9.301444243932575517419536481611430644989013671875
      translations:
      - modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      - modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      segmentId: "segmentId"
      subSegment: true
      source:
        modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      grossScore: 7.061401241503109105224211816675961017608642578125
  SearchTMSegmentDtoV2:
    type: "object"
    properties:
      id:
        type: "string"
      text:
        type: "string"
      lang:
        type: "string"
      rtl:
        type: "boolean"
      modifiedAt:
        type: "integer"
        format: "int64"
      createdAt:
        type: "integer"
        format: "int64"
      modifiedBy:
        $ref: "#/definitions/UserReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      filename:
        type: "string"
      project:
        $ref: "#/definitions/SearchTMProjectDtoV2"
      client:
        $ref: "#/definitions/SearchTMClientDtoV2"
      domain:
        $ref: "#/definitions/SearchTMDomainDtoV2"
      subDomain:
        $ref: "#/definitions/SearchTMSubDomainDtoV2"
      tagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadata"
      previousSegment:
        type: "string"
      nextSegment:
        type: "string"
      key:
        type: "string"
    example:
      modifiedAt: 0
      subDomain:
        name: "name"
        id: 2
      project:
        uid: "uid"
        name: "name"
        id: 1
      rtl: true
      tagMetadata:
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      createdAt: 6
      filename: "filename"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      domain:
        name: "name"
        id: 5
      nextSegment: "nextSegment"
      client:
        name: "name"
        id: 5
      modifiedBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      previousSegment: "previousSegment"
      id: "id"
      text: "text"
      lang: "lang"
      key: "key"
  SearchTMSubDomainDtoV2:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 2
  SearchTMTransMemoryDtoV2:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      reverse:
        type: "boolean"
    example:
      name: "name"
      id: "id"
      reverse: true
  WildCardSearchByJobRequestDtoV2:
    type: "object"
    required:
    - "query"
    properties:
      query:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 15
      reverse:
        type: "boolean"
        description: "Default: false"
      count:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 50
      offset:
        type: "integer"
        format: "int32"
    example:
      offset: 1
      query: "query"
      count: 30
      workflowLevel: 2
      reverse: true
  SearchTMByJobRequestDtoV2:
    type: "object"
    required:
    - "query"
    properties:
      query:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
        description: "Default: 0"
        minimum: 0
      reverse:
        type: "boolean"
        description: "Default: false"
      scoreThreshold:
        type: "number"
        format: "double"
        description: "Default: 0.0"
        minimum: 0
        maximum: 1.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      maxResults:
        type: "integer"
        format: "int32"
        description: "Default: 15"
        minimum: 1
        maximum: 100
  ProjectTransMemoryDtoV2:
    type: "object"
    properties:
      targetLocale:
        type: "string"
      workflowStep:
        $ref: "#/definitions/WorkflowStepReference"
      readMode:
        type: "boolean"
      writeMode:
        type: "boolean"
      transMemory:
        $ref: "#/definitions/TransMemoryDtoV2"
      penalty:
        type: "number"
        format: "double"
      applyPenaltyTo101Only:
        type: "boolean"
    example:
      transMemory:
        internalId: 0
        note: "note"
        businessUnit:
          name: "name"
          id: "id"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        sourceLang: "sourceLang"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        subDomain:
          name: "name"
          id: "id"
        domain:
          name: "name"
          id: "id"
        name: "name"
        client:
          name: "name"
          id: "id"
        id: "id"
        targetLangs:
        - "targetLangs"
        - "targetLangs"
      targetLocale: "targetLocale"
      applyPenaltyTo101Only: true
      penalty: 6.02745618307040320615897144307382404804229736328125
      workflowStep:
        name: "name"
        id: "id"
        order: 6
      writeMode: true
      readMode: true
  ProjectTransMemoryListDtoV2:
    type: "object"
    properties:
      transMemories:
        type: "array"
        items:
          $ref: "#/definitions/ProjectTransMemoryDtoV2"
    example:
      transMemories:
      - transMemory:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          sourceLang: "sourceLang"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        targetLocale: "targetLocale"
        applyPenaltyTo101Only: true
        penalty: 6.02745618307040320615897144307382404804229736328125
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        writeMode: true
        readMode: true
      - transMemory:
          internalId: 0
          note: "note"
          businessUnit:
            name: "name"
            id: "id"
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          sourceLang: "sourceLang"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          subDomain:
            name: "name"
            id: "id"
          domain:
            name: "name"
            id: "id"
          name: "name"
          client:
            name: "name"
            id: "id"
          id: "id"
          targetLangs:
          - "targetLangs"
          - "targetLangs"
        targetLocale: "targetLocale"
        applyPenaltyTo101Only: true
        penalty: 6.02745618307040320615897144307382404804229736328125
        workflowStep:
          name: "name"
          id: "id"
          order: 6
        writeMode: true
        readMode: true
  TransMemoryDtoV2:
    type: "object"
    properties:
      id:
        type: "string"
      internalId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      client:
        $ref: "#/definitions/ClientReference"
      businessUnit:
        $ref: "#/definitions/BusinessUnitReference"
      domain:
        $ref: "#/definitions/DomainReference"
      subDomain:
        $ref: "#/definitions/SubDomainReference"
      note:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
    example:
      internalId: 0
      note: "note"
      businessUnit:
        name: "name"
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      sourceLang: "sourceLang"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      subDomain:
        name: "name"
        id: "id"
      domain:
        name: "name"
        id: "id"
      name: "name"
      client:
        name: "name"
        id: "id"
      id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  SetProjectTransMemoriesV2Dto:
    type: "object"
    properties:
      transMemories:
        type: "array"
        items:
          $ref: "#/definitions/SetProjectTransMemoryDto"
      targetLang:
        type: "string"
        description: "Set translation memory only for the specific project target\
          \ language"
      workflowStep:
        description: "Set translation memory only for the specific workflow step"
        $ref: "#/definitions/IdReference"
    example:
      targetLang: "targetLang"
      transMemories:
      - transMemory:
          id: "id"
        applyPenaltyTo101Only: true
        penalty: 8.0082819046101150206595775671303272247314453125
        writeMode: true
        readMode: true
      - transMemory:
          id: "id"
        applyPenaltyTo101Only: true
        penalty: 8.0082819046101150206595775671303272247314453125
        writeMode: true
        readMode: true
      workflowStep:
        id: "id"
  SetProjectTransMemoryDto:
    type: "object"
    required:
    - "transMemory"
    properties:
      transMemory:
        $ref: "#/definitions/IdReference"
      readMode:
        type: "boolean"
        description: "Default: false"
      writeMode:
        type: "boolean"
        description: "Can be set only for Translation Memory with read == true.<br/>\n\
          \        Max 2 write TMs allowed per project.<br/>\n        Default: false"
      penalty:
        type: "number"
        format: "double"
        minimum: 0
        maximum: 100
        exclusiveMinimum: false
        exclusiveMaximum: false
      applyPenaltyTo101Only:
        type: "boolean"
        description: "Can be set only for penalty == 1<br/>Default: false"
    example:
      transMemory:
        id: "id"
      applyPenaltyTo101Only: true
      penalty: 8.0082819046101150206595775671303272247314453125
      writeMode: true
      readMode: true
  MORAVIA:
    allOf:
    - $ref: "#/definitions/QACheckDtoV2"
    - type: "object"
      properties:
        enabled:
          type: "boolean"
        profile:
          type: "string"
        ignorable:
          type: "boolean"
  NUMBER:
    allOf:
    - $ref: "#/definitions/QACheckDtoV2"
    - type: "object"
      properties:
        ignorable:
          type: "boolean"
        enabled:
          type: "boolean"
        value:
          $ref: "#/definitions/Number"
  Number:
    type: "object"
  QACheckDtoV2:
    type: "object"
    required:
    - "name"
    - "type"
    discriminator: "type"
    properties:
      type:
        type: "string"
        enum:
        - "VOID"
        - "NUMBER"
        - "STRING"
        - "REGEX"
        - "MORAVIA"
      name:
        type: "string"
        enum:
        - "emptyTarget"
        - "inconsistentTranslation"
        - "joinMarksInconsistency"
        - "missingNumber"
        - "segmentNotConfirmed"
        - "nonConformingTerms"
        - "multipleSpaces"
        - "endPunctuation"
        - "targetLength"
        - "inconsistentFormatting"
        - "unresolvedComment"
        - "emptyPairTags"
        - "strictJobStatus"
        - "forbiddenStringsEnabled"
        - "excludeLockedSegments"
        - "ignoreNotApprovedTerms"
        - "spellCheck"
        - "repeatedWords"
        - "inconsistentTagContent"
        - "emptyTagContent"
        - "malformed"
        - "forbiddenTerms"
        - "targetLengthPercent"
        - "targetLengthPerSegment"
        - "newerAtLowerLevel"
        - "leadingAndTrailingSpaces"
        - "targetSourceIdentical"
        - "ignoreInAllWorkflowSteps"
        - "regexp"
        - "unmodifiedFuzzyTranslation"
        - "moravia"
        - "extraNumbers"
        - "nestedTags"
    example:
      name: "emptyTarget"
      type: "VOID"
  QASettingsDtoV2:
    type: "object"
    properties:
      checks:
        type: "array"
        items:
          $ref: "#/definitions/QACheckDtoV2"
    example:
      checks:
      - name: "emptyTarget"
        type: "VOID"
      - name: "emptyTarget"
        type: "VOID"
  REGEX:
    allOf:
    - $ref: "#/definitions/QACheckDtoV2"
    - type: "object"
      properties:
        rules:
          type: "array"
          items:
            $ref: "#/definitions/RegexpCheckRuleDtoV2"
  RegexpCheckRuleDtoV2:
    type: "object"
    properties:
      description:
        type: "string"
      sourceRegexp:
        type: "string"
      targetRegexp:
        type: "string"
      id:
        type: "string"
      ignorable:
        type: "boolean"
      instant:
        type: "boolean"
    example:
      targetRegexp: "targetRegexp"
      sourceRegexp: "sourceRegexp"
      description: "description"
      id: "id"
      ignorable: true
      instant: true
  STRING:
    allOf:
    - $ref: "#/definitions/QACheckDtoV2"
    - type: "object"
      properties:
        ignorable:
          type: "boolean"
        enabled:
          type: "boolean"
        value:
          type: "string"
  VOID:
    allOf:
    - $ref: "#/definitions/QACheckDtoV2"
    - type: "object"
      properties:
        ignorable:
          type: "boolean"
        enabled:
          type: "boolean"
  EditQASettingsDtoV2:
    type: "object"
    properties:
      checks:
        type: "array"
        example: "\n        {\n            \"ignorable\": false,\n            \"enabled\"\
          : true,\n            \"type\": \"VOID\",\n            \"name\": \"emptyTarget\"\
          \n        },\n        {\n            \"ignorable\": false,\n           \
          \ \"enabled\": true,\n            \"value\": 12,\n            \"type\":\
          \ \"NUMBER\",\n            \"name\": \"targetLength\"\n        },\n    \
          \    {\n            \"ignorable\": false,\n            \"enabled\": true,\n\
          \            \"value\": \"ASAP, irony\",\n            \"type\": \"STRING\"\
          ,\n            \"name\": \"forbiddenStrings\"\n        },\n        {\n \
          \           \"enabled\": true,\n            \"profile\": \"jiris\",\n  \
          \          \"ignorable\": true,\n            \"type\": \"MORAVIA\",\n  \
          \          \"name\": \"moravia\"\n        },\n        {\n            \"\
          rules\": [\n                {\n                    \"description\": \"Description\"\
          ,\n                    \"sourceRegexp\": \".+\",\n                    \"\
          targetRegexp\": \".+\",\n                    \"ignorable\": true\n     \
          \           },\n                {\n                    \"description\":\
          \ \"Description\",\n                    \"sourceRegexp\": \"i+\",\n    \
          \                \"targetRegexp\": \"e+\",\n                    \"ignorable\"\
          : false\n                }\n            ],\n            \"type\": \"REGEX\"\
          ,\n            \"name\": \"regexp\"\n        }\n    "
        description: "checks"
        items:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
  AbstractProjectDtoV2:
    type: "object"
    discriminator: "userRole"
    properties:
      uid:
        type: "string"
      internalId:
        type: "integer"
        format: "int32"
      id:
        type: "string"
      name:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      domain:
        $ref: "#/definitions/DomainReference"
      subDomain:
        $ref: "#/definitions/SubDomainReference"
      owner:
        $ref: "#/definitions/UserReference"
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      references:
        type: "array"
        items:
          $ref: "#/definitions/ReferenceFileReference"
      userRole:
        type: "string"
        description: "Response differs based on user's role"
        readOnly: true
    description: "Base projectDto"
    example:
      owner:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      uid: "uid"
      internalId: 0
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      references:
      - note: "note"
        filename: "filename"
        id: "id"
      - note: "note"
        filename: "filename"
        id: "id"
      sourceLang: "sourceLang"
      subDomain:
        name: "name"
        id: "id"
      domain:
        name: "name"
        id: "id"
      name: "name"
      id: "id"
      userRole: "userRole"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  Admin, Project Manager (v2):
    allOf:
    - $ref: "#/definitions/AbstractProjectDtoV2"
    - type: "object"
      properties:
        shared:
          type: "boolean"
          description: "Default: false"
        progress:
          $ref: "#/definitions/ProgressDtoV2"
        client:
          $ref: "#/definitions/ClientReference"
        costCenter:
          $ref: "#/definitions/CostCenterReference"
        businessUnit:
          $ref: "#/definitions/BusinessUnitReference"
        dateDue:
          type: "string"
          format: "date-time"
        status:
          type: "string"
          enum:
          - "NEW"
          - "ASSIGNED"
          - "COMPLETED"
          - "ACCEPTED_BY_VENDOR"
          - "DECLINED_BY_VENDOR"
          - "COMPLETED_BY_VENDOR"
          - "CANCELLED"
        purchaseOrder:
          type: "string"
        isPublishedOnJobBoard:
          type: "boolean"
          description: "Default: false"
        note:
          type: "string"
        createdBy:
          $ref: "#/definitions/UserReference"
        qualityAssuranceSettings:
          $ref: "#/definitions/IdReference"
        workflowSteps:
          type: "array"
          items:
            $ref: "#/definitions/ProjectWorkflowStepDtoV2"
        analyseSettings:
          $ref: "#/definitions/IdReference"
        accessSettings:
          $ref: "#/definitions/IdReference"
        financialSettings:
          $ref: "#/definitions/IdReference"
        mtSettingsPerLanguageList:
          type: "array"
          items:
            $ref: "#/definitions/MTSettingsPerLanguageReference"
  Linguist (v2):
    allOf:
    - $ref: "#/definitions/AbstractProjectDtoV2"
    - type: "object"
  ProgressDtoV2:
    type: "object"
    properties:
      totalCount:
        type: "integer"
        format: "int32"
      finishedCount:
        type: "integer"
        format: "int32"
      overdueCount:
        type: "integer"
        format: "int32"
  ProjectWorkflowStepDtoV2:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      abbreviation:
        type: "string"
      name:
        type: "string"
      workflowLevel:
        type: "integer"
        format: "int32"
      workflowStep:
        $ref: "#/definitions/IdReference"
  CreateProjectFromTemplateV2Dto:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      sourceLang:
        type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      dateDue:
        type: "string"
        format: "date-time"
      note:
        type: "string"
      client:
        $ref: "#/definitions/IdReference"
      businessUnit:
        $ref: "#/definitions/IdReference"
      domain:
        $ref: "#/definitions/IdReference"
      subDomain:
        $ref: "#/definitions/IdReference"
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      dateDue: "2000-01-23T04:56:07.000+00:00"
      note: "note"
      businessUnit:
        id: "id"
      sourceLang: "sourceLang"
      subDomain:
        id: "id"
      domain:
        id: "id"
      name: "name"
      client:
        id: "id"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  PageDtoAnalyseV2Dto:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseV2Dto"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        provider:
          id: "id"
          type: "type"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
        type: "PreAnalyse"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        analyseLanguageParts:
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
      - dateCreated: "2000-01-23T04:56:07.000+00:00"
        provider:
          id: "id"
          type: "type"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
        type: "PreAnalyse"
        netRateScheme:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          name: "name"
          id: "id"
        analyseLanguageParts:
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
        - targetLang: "targetLang"
          data:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          sourceLang: "sourceLang"
          discountedData:
            all:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            nonTranslatablesMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            available: true
            transMemoryMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match101:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
            repetitions:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            machineTranslationMatches:
              match0:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match85:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match100:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match75:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match50:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
              match95:
                characters: 1.46581298050294517310021547018550336360931396484375
                words: 6.02745618307040320615897144307382404804229736328125
                normalizedPages: 5.962133916683182377482808078639209270477294921875
                percent: 5.63737665663332876420099637471139430999755859375
                segments: 0.80082819046101150206595775671303272247314453125
          jobs:
          - uid: "uid"
            filename: "filename"
          - uid: "uid"
            filename: "filename"
          id: "id"
      totalElements: 0
  JobPartReferenceV2:
    type: "object"
    properties:
      uid:
        type: "string"
      status:
        type: "string"
        enum:
        - "NEW"
        - "ACCEPTED"
        - "DECLINED"
        - "REJECTED"
        - "DELIVERED"
        - "EMAILED"
        - "COMPLETED"
        - "CANCELLED"
      providers:
        type: "array"
        items:
          $ref: "#/definitions/ProviderReference"
      targetLang:
        type: "string"
      workflowStep:
        $ref: "#/definitions/ProjectWorkflowStepReference"
      filename:
        type: "string"
      dateDue:
        type: "string"
        format: "date-time"
      dateCreated:
        type: "string"
        format: "date-time"
      imported:
        type: "boolean"
        description: "Default: false"
      continuous:
        type: "boolean"
    example:
      dateDue: "2000-01-23T04:56:07.000+00:00"
      uid: "uid"
      targetLang: "targetLang"
      filename: "filename"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      imported: true
      continuous: true
      workflowStep:
        name: "name"
        id: "id"
        workflowLevel: 1
        order: 6
      providers:
      - id: "id"
        type: "type"
      - id: "id"
        type: "type"
      status: "NEW"
  PageDtoJobPartReferenceV2:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/JobPartReferenceV2"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        uid: "uid"
        targetLang: "targetLang"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        workflowStep:
          name: "name"
          id: "id"
          workflowLevel: 1
          order: 6
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      - dateDue: "2000-01-23T04:56:07.000+00:00"
        uid: "uid"
        targetLang: "targetLang"
        filename: "filename"
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        imported: true
        continuous: true
        workflowStep:
          name: "name"
          id: "id"
          workflowLevel: 1
          order: 6
        providers:
        - id: "id"
          type: "type"
        - id: "id"
          type: "type"
        status: "NEW"
      totalElements: 0
  QualityAssuranceRunDtoV2:
    type: "object"
    properties:
      initialSegment:
        $ref: "#/definitions/SegmentReference"
      maxQaWarningsCount:
        type: "integer"
        format: "int32"
        description: "Maximum number of QA warnings in result, default: 100. For efficiency\
          \ reasons QA\nwarnings are processed with minimum segments chunk size 10,\
          \ therefore slightly more warnings are returned."
        minimum: 1
        maximum: 1000
      warningTypes:
        type: "array"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
        maxItems: 100
        minItems: 0
    example:
      warningTypes:
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      initialSegment:
        uid: "uid"
      maxQaWarningsCount: 81
  QualityAssuranceBatchRunDtoV2:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 500
        minItems: 1
      settings:
        $ref: "#/definitions/QualityAssuranceRunDtoV2"
      maxQaWarningsCount:
        type: "integer"
        format: "int32"
        description: "Maximum number of QA warnings in result, default: 100. For efficiency\
          \ reasons QA\nwarnings are processed with minimum segments chunk size 10,\
          \ therefore slightly more warnings are returned."
        minimum: 1
        maximum: 1000
    example:
      settings:
        warningTypes:
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        initialSegment:
          uid: "uid"
        maxQaWarningsCount: 81
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      maxQaWarningsCount: 81
  JobPartSegmentsDto:
    type: "object"
    required:
    - "job"
    - "segments"
    properties:
      job:
        $ref: "#/definitions/UidReference"
      segments:
        type: "array"
        items:
          type: "string"
    example:
      job:
        uid: "uid"
      segments:
      - "segments"
      - "segments"
  QualityAssuranceSegmentsRunDto:
    type: "object"
    required:
    - "jobsAndSegments"
    properties:
      jobsAndSegments:
        type: "array"
        items:
          $ref: "#/definitions/JobPartSegmentsDto"
        maxItems: 100
        minItems: 1
      warningTypes:
        type: "array"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
        maxItems: 100
        minItems: 0
      maxQaWarningsCount:
        type: "integer"
        format: "int32"
        description: "Maximum number of QA warnings in result, default: 100. For efficiency\
          \ reasons QA\nwarnings are processed with minimum segments chunk size 10,\
          \ therefore slightly more warnings are returned."
        minimum: 1
        maximum: 1000
    example:
      warningTypes:
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      maxQaWarningsCount: 81
      jobsAndSegments:
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
  EnabledCheckDto:
    type: "object"
    properties:
      checkerType:
        type: "string"
  QualityAssuranceChecksDto:
    type: "object"
    properties:
      forbiddenStrings:
        type: "array"
        items:
          type: "string"
      enabledChecks:
        type: "array"
        example: "\n   [\n      {\n         \"checkerType\":\"EmptyTranslation\",\n\
          \         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
          :\"TrailingPunctuation\",\n         \"ignorable\":false\n      },\n    \
          \  {\n         \"checkerType\":\"Formatting\",\n         \"ignorable\":false\n\
          \      },\n      {\n         \"checkerType\":\"JoinTags\",\n         \"\
          ignorable\":false\n      },\n      {\n         \"checkerType\":\"MissingNumbers\"\
          ,\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
          :\"MultipleSpaces\",\n         \"ignorable\":false\n      },\n      {\n\
          \         \"checkerType\":\"NonConformingTerm\",\n         \"ignorable\"\
          :false\n      },\n      {\n         \"checkerType\":\"NotConfirmed\",\n\
          \         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
          :\"TranslationLength\",\n         \"ignorable\":false\n      },\n      {\n\
          \         \"checkerType\": \"AbsoluteLength\",\n         \"ignorable\":\
          \ false\n      },\n      {\n         \"checkerType\": \"RelativeLength\"\
          ,\n         \"ignorable\": false\n      },\n      {\n         \"checkerType\"\
          :\"EmptyPairTags\",\n         \"ignorable\":false\n      },\n      {\n \
          \        \"checkerType\":\"InconsistentTranslationTargetSource\",\n    \
          \     \"ignorable\":true\n      },\n      {\n         \"checkerType\":\"\
          InconsistentTranslationSourceTarget\",\n         \"ignorable\":true\n  \
          \    },\n      {\n         \"checkerType\":\"ForbiddenString\",\n      \
          \   \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"\
          SpellCheck\",\n         \"ignorable\":false\n      },\n      {\n       \
          \  \"checkerType\":\"RepeatedWords\",\n         \"ignorable\":false\n  \
          \    },\n      {\n         \"checkerType\":\"InconsistentTagContent\",\n\
          \         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
          :\"EmptyTagContent\",\n         \"ignorable\":false\n      },\n      {\n\
          \         \"checkerType\":\"Malformed\",\n         \"ignorable\":false\n\
          \      },\n      {\n         \"checkerType\":\"ForbiddenTerm\",\n      \
          \   \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"\
          NewerAtLowerLevel\",\n         \"ignorable\":false\n      },\n      {\n\
          \         \"checkerType\":\"LeadingAndTrailingSpaces\",\n         \"ignorable\"\
          :false\n      },\n      {\n         \"checkerType\":\"TargetSourceIdentical\"\
          ,\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
          :\"SourceOrTargetRegexp\"\n      },\n      {\n         \"checkerType\":\"\
          UnmodifiedFuzzyTranslationTM\",\n         \"ignorable\":true\n      },\n\
          \      {\n         \"checkerType\":\"UnmodifiedFuzzyTranslationMTNT\",\n\
          \         \"ignorable\":true\n      },\n      {\n         \"checkerType\"\
          :\"Moravia\",\n         \"ignorable\":false\n      },\n      {\n       \
          \  \"checkerType\":\"ExtraNumbers\",\n         \"ignorable\":true\n    \
          \  },\n      {\n         \"checkerType\":\"UnresolvedConversation\",\n \
          \        \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
          :\"NestedTags\",\n         \"ignorable\":false\n      }\n   ]\n"
        description: "enabledChecks"
        items:
          $ref: "#/definitions/EnabledCheckDto"
      excludeLockedSegments:
        type: "boolean"
      userCanSetInstantQA:
        type: "boolean"
      regexpRules:
        type: "array"
        items:
          $ref: "#/definitions/RegexpCheckRuleDtoV2"
    example:
      enabledChecks: "\n   [\n      {\n         \"checkerType\":\"EmptyTranslation\"\
        ,\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
        :\"TrailingPunctuation\",\n         \"ignorable\":false\n      },\n      {\n\
        \         \"checkerType\":\"Formatting\",\n         \"ignorable\":false\n\
        \      },\n      {\n         \"checkerType\":\"JoinTags\",\n         \"ignorable\"\
        :false\n      },\n      {\n         \"checkerType\":\"MissingNumbers\",\n\
        \         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
        :\"MultipleSpaces\",\n         \"ignorable\":false\n      },\n      {\n  \
        \       \"checkerType\":\"NonConformingTerm\",\n         \"ignorable\":false\n\
        \      },\n      {\n         \"checkerType\":\"NotConfirmed\",\n         \"\
        ignorable\":false\n      },\n      {\n         \"checkerType\":\"TranslationLength\"\
        ,\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
        : \"AbsoluteLength\",\n         \"ignorable\": false\n      },\n      {\n\
        \         \"checkerType\": \"RelativeLength\",\n         \"ignorable\": false\n\
        \      },\n      {\n         \"checkerType\":\"EmptyPairTags\",\n        \
        \ \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"InconsistentTranslationTargetSource\"\
        ,\n         \"ignorable\":true\n      },\n      {\n         \"checkerType\"\
        :\"InconsistentTranslationSourceTarget\",\n         \"ignorable\":true\n \
        \     },\n      {\n         \"checkerType\":\"ForbiddenString\",\n       \
        \  \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"SpellCheck\"\
        ,\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
        :\"RepeatedWords\",\n         \"ignorable\":false\n      },\n      {\n   \
        \      \"checkerType\":\"InconsistentTagContent\",\n         \"ignorable\"\
        :false\n      },\n      {\n         \"checkerType\":\"EmptyTagContent\",\n\
        \         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
        :\"Malformed\",\n         \"ignorable\":false\n      },\n      {\n       \
        \  \"checkerType\":\"ForbiddenTerm\",\n         \"ignorable\":false\n    \
        \  },\n      {\n         \"checkerType\":\"NewerAtLowerLevel\",\n        \
        \ \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"LeadingAndTrailingSpaces\"\
        ,\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\"\
        :\"TargetSourceIdentical\",\n         \"ignorable\":false\n      },\n    \
        \  {\n         \"checkerType\":\"SourceOrTargetRegexp\"\n      },\n      {\n\
        \         \"checkerType\":\"UnmodifiedFuzzyTranslationTM\",\n         \"ignorable\"\
        :true\n      },\n      {\n         \"checkerType\":\"UnmodifiedFuzzyTranslationMTNT\"\
        ,\n         \"ignorable\":true\n      },\n      {\n         \"checkerType\"\
        :\"Moravia\",\n         \"ignorable\":false\n      },\n      {\n         \"\
        checkerType\":\"ExtraNumbers\",\n         \"ignorable\":true\n      },\n \
        \     {\n         \"checkerType\":\"UnresolvedConversation\",\n         \"\
        ignorable\":false\n      },\n      {\n         \"checkerType\":\"NestedTags\"\
        ,\n         \"ignorable\":false\n      }\n   ]\n"
      excludeLockedSegments: true
      userCanSetInstantQA: true
      forbiddenStrings:
      - "forbiddenStrings"
      - "forbiddenStrings"
      regexpRules:
      - targetRegexp: "targetRegexp"
        sourceRegexp: "sourceRegexp"
        description: "description"
        id: "id"
        ignorable: true
        instant: true
      - targetRegexp: "targetRegexp"
        sourceRegexp: "sourceRegexp"
        description: "description"
        id: "id"
        ignorable: true
        instant: true
  WebEditorLinkDtoV2:
    type: "object"
    properties:
      url:
        type: "string"
      warnings:
        type: "array"
        items:
          $ref: "#/definitions/ErrorDetailDtoV2"
    example:
      warnings:
      - args:
          key: "{}"
        code: "code"
        message: "message"
      - args:
          key: "{}"
        code: "code"
        message: "message"
      url: "url"
  CreateWebEditorLinkDtoV2:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 2147483647
        minItems: 1
  QuoteV2Dto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      status:
        type: "string"
        enum:
        - "APPROVED"
        - "DECLINED"
        - "DRAFT"
        - "FOR_APPROVAL"
        - "NEW"
      currency:
        type: "string"
      billingUnit:
        type: "string"
        enum:
        - "Character"
        - "Word"
        - "Page"
        - "Hour"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      totalPrice:
        type: "number"
        format: "double"
      netRateScheme:
        $ref: "#/definitions/NetRateSchemeReference"
      priceList:
        $ref: "#/definitions/PriceListReference"
      workflowStepList:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepReference"
      provider:
        $ref: "#/definitions/ProviderReference"
      customerEmail:
        type: "string"
      quoteType:
        type: "string"
        enum:
        - "BUYER"
        - "PROVIDER"
    example:
      totalPrice: 6.02745618307040320615897144307382404804229736328125
      quoteType: "BUYER"
      priceList:
        name: "name"
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      provider:
        id: "id"
        type: "type"
      workflowStepList:
      - name: "name"
        id: "id"
        order: 6
      - name: "name"
        id: "id"
        order: 6
      customerEmail: "customerEmail"
      name: "name"
      currency: "currency"
      id: 0
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      status: "APPROVED"
      billingUnit: "Character"
  QuoteCreateV2Dto:
    type: "object"
    required:
    - "analyse"
    - "name"
    - "priceList"
    - "project"
    properties:
      name:
        type: "string"
        minLength: 0
        maxLength: 255
      project:
        $ref: "#/definitions/UidReference"
      analyse:
        $ref: "#/definitions/IdReference"
      priceList:
        $ref: "#/definitions/IdReference"
      netRateScheme:
        $ref: "#/definitions/IdReference"
      provider:
        $ref: "#/definitions/ProviderReference"
      workflowSettings:
        type: "array"
        items:
          $ref: "#/definitions/QuoteWorkflowSettingDto"
      units:
        type: "array"
        items:
          $ref: "#/definitions/QuoteUnitsDto"
    example:
      workflowSettings:
      - workflowStep:
          id: "id"
        units:
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
      - workflowStep:
          id: "id"
        units:
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
        - analyseLanguagePart:
            id: "id"
          value: 0.080082819046101150206595775671303272247314453125
      provider:
        id: "id"
        type: "type"
      name: "name"
      analyse:
        id: "id"
      project:
        uid: "uid"
      units:
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      netRateScheme:
        id: "id"
      priceList:
        id: "id"
  QuoteUnitsDto:
    type: "object"
    required:
    - "analyseLanguagePart"
    properties:
      analyseLanguagePart:
        $ref: "#/definitions/IdReference"
      value:
        type: "number"
        format: "double"
        minimum: 0
    example:
      analyseLanguagePart:
        id: "id"
      value: 0.080082819046101150206595775671303272247314453125
  QuoteWorkflowSettingDto:
    type: "object"
    required:
    - "workflowStep"
    properties:
      workflowStep:
        $ref: "#/definitions/IdReference"
      units:
        type: "array"
        items:
          $ref: "#/definitions/QuoteUnitsDto"
        maxItems: 100
        minItems: 0
    example:
      workflowStep:
        id: "id"
      units:
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
      - analyseLanguagePart:
          id: "id"
        value: 0.080082819046101150206595775671303272247314453125
  AsyncExportTMDto:
    type: "object"
    properties:
      transMemory:
        $ref: "#/definitions/IdReference"
      exportTargetLangs:
        type: "array"
        items:
          type: "string"
    example:
      transMemory:
        id: "id"
      exportTargetLangs:
      - "exportTargetLangs"
      - "exportTargetLangs"
  AsyncExportTMResponseDto:
    type: "object"
    properties:
      asyncRequest:
        $ref: "#/definitions/AsyncRequestV2Dto"
      asyncExport:
        $ref: "#/definitions/AsyncExportTMDto"
    example:
      asyncRequest:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        action: "PRE_ANALYSE"
        project:
          uid: "uid"
          name: "name"
        id: "id"
        asyncResponse:
          dateCreated: "2000-01-23T04:56:07.000+00:00"
          errorDesc: "errorDesc"
          warnings:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
          errorCode: "errorCode"
          errorDetails:
          - args:
              key: "{}"
            code: "code"
            message: "message"
          - args:
              key: "{}"
            code: "code"
            message: "message"
      asyncExport:
        transMemory:
          id: "id"
        exportTargetLangs:
        - "exportTargetLangs"
        - "exportTargetLangs"
  ExportTMDto:
    type: "object"
    properties:
      exportTargetLangs:
        type: "array"
        items:
          type: "string"
      callbackUrl:
        type: "string"
  JobWidgetReference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
  UserDetailsDtoV2:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      userName:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      dateDeleted:
        type: "string"
        format: "date-time"
      createdBy:
        $ref: "#/definitions/UserReference"
      role:
        type: "string"
        enum:
        - "SYS_ADMIN"
        - "SYS_ADMIN_READ"
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      timezone:
        type: "string"
      note:
        type: "string"
      mayEditApprovedTerms:
        type: "boolean"
        description: "Default: false"
      mayRejectJobs:
        type: "boolean"
        description: "Default: false"
      editorMachineTranslateEnabled:
        type: "boolean"
        description: "Default: true"
      receiveNewsletter:
        type: "boolean"
        description: "Default: true"
      mayEditTranslationMemory:
        type: "boolean"
        description: "Default: false"
      sourceLangs:
        type: "array"
        items:
          type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/WorkflowStepReference"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/ClientReference"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/DomainReference"
      subDomains:
        type: "array"
        items:
          $ref: "#/definitions/SubDomainReference"
      projectBusinessUnits:
        type: "array"
        items:
          $ref: "#/definitions/BusinessUnitReference"
      organization:
        $ref: "#/definitions/IdReference"
      priceList:
        $ref: "#/definitions/PriceListReference"
      netRateScheme:
        $ref: "#/definitions/DiscountSchemeReference"
      automationWidgets:
        type: "array"
        items:
          $ref: "#/definitions/JobWidgetReference"
      active:
        type: "boolean"
    description: "User with all belonging objects"
    example:
      workflowSteps:
      - name: "name"
        id: "id"
        order: 6
      - name: "name"
        id: "id"
        order: 6
      lastName: "lastName"
      note: "note"
      role: "SYS_ADMIN"
      clients:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      timezone: "timezone"
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      editorMachineTranslateEnabled: true
      receiveNewsletter: true
      priceList:
        name: "name"
        id: "id"
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      automationWidgets:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      id: "id"
      email: "email"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
      mayRejectJobs: true
      domains:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      active: true
      userName: "userName"
      mayEditApprovedTerms: true
      dateDeleted: "2000-01-23T04:56:07.000+00:00"
      firstName: "firstName"
      projectBusinessUnits:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      organization:
        id: "id"
      subDomains:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      mayEditTranslationMemory: true
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
  UserEditDtoV2:
    type: "object"
    required:
    - "email"
    - "firstName"
    - "lastName"
    - "role"
    - "timezone"
    - "userName"
    properties:
      userName:
        type: "string"
        minLength: 0
        maxLength: 255
      firstName:
        type: "string"
        minLength: 0
        maxLength: 255
      lastName:
        type: "string"
        minLength: 0
        maxLength: 255
      email:
        type: "string"
        minLength: 0
        maxLength: 255
      role:
        type: "string"
        enum:
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      timezone:
        type: "string"
        minLength: 0
        maxLength: 255
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
      mayEditApprovedTerms:
        type: "boolean"
        description: "In previous version as terminologist. Default: false"
      mayRejectJobs:
        type: "boolean"
        description: "Default: false"
      editorMachineTranslateEnabled:
        type: "boolean"
        description: "Applies only to Linguist or Guest. Default: true"
      receiveNewsletter:
        type: "boolean"
        description: "Default: true"
      mayEditTranslationMemory:
        type: "boolean"
        description: "Default: false"
      sourceLangs:
        type: "array"
        items:
          type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      active:
        type: "boolean"
        description: "Default: true"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      subDomains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      projectBusinessUnits:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      automationWidgets:
        type: "array"
        description: "Applies only to Submitters, where it must contain at least one\
          \ assigned automation widget"
        items:
          $ref: "#/definitions/IdReference"
    description: "User object to update. Optional empty fields will be set to null"
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      lastName: "lastName"
      note: "note"
      role: "ADMIN"
      clients:
      - id: "id"
      - id: "id"
      mayRejectJobs: true
      timezone: "timezone"
      active: true
      domains:
      - id: "id"
      - id: "id"
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      userName: "userName"
      editorMachineTranslateEnabled: true
      receiveNewsletter: true
      mayEditApprovedTerms: true
      firstName: "firstName"
      projectBusinessUnits:
      - id: "id"
      - id: "id"
      subDomains:
      - id: "id"
      - id: "id"
      automationWidgets:
      - id: "id"
      - id: "id"
      mayEditTranslationMemory: true
      email: "email"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  UserCreateDtoV2:
    type: "object"
    required:
    - "email"
    - "firstName"
    - "lastName"
    - "password"
    - "role"
    - "timezone"
    - "userName"
    properties:
      userName:
        type: "string"
        minLength: 0
        maxLength: 255
      firstName:
        type: "string"
        minLength: 0
        maxLength: 255
      lastName:
        type: "string"
        minLength: 0
        maxLength: 255
      email:
        type: "string"
        minLength: 0
        maxLength: 255
      password:
        type: "string"
        minLength: 0
        maxLength: 255
      role:
        type: "string"
        enum:
        - "ADMIN"
        - "PROJECT_MANAGER"
        - "LINGUIST"
        - "GUEST"
        - "SUBMITTER"
      timezone:
        type: "string"
        minLength: 0
        maxLength: 255
      note:
        type: "string"
        minLength: 0
        maxLength: 4096
      mayEditApprovedTerms:
        type: "boolean"
        description: "In previous version as terminologist. Default: false"
      mayRejectJobs:
        type: "boolean"
        description: "Default: false"
      editorMachineTranslateEnabled:
        type: "boolean"
        description: "Applies only to Linguist or Guest. Default: true"
      receiveNewsletter:
        type: "boolean"
        description: "Default: true"
      mayEditTranslationMemory:
        type: "boolean"
        description: "Default: false"
      sourceLangs:
        type: "array"
        items:
          type: "string"
      targetLangs:
        type: "array"
        items:
          type: "string"
      workflowSteps:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      clients:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      domains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      subDomains:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
      projectBusinessUnits:
        type: "array"
        items:
          $ref: "#/definitions/IdReference"
    example:
      workflowSteps:
      - id: "id"
      - id: "id"
      lastName: "lastName"
      note: "note"
      role: "ADMIN"
      clients:
      - id: "id"
      - id: "id"
      mayRejectJobs: true
      timezone: "timezone"
      domains:
      - id: "id"
      - id: "id"
      sourceLangs:
      - "sourceLangs"
      - "sourceLangs"
      userName: "userName"
      editorMachineTranslateEnabled: true
      receiveNewsletter: true
      mayEditApprovedTerms: true
      firstName: "firstName"
      projectBusinessUnits:
      - id: "id"
      - id: "id"
      password: "password"
      subDomains:
      - id: "id"
      - id: "id"
      mayEditTranslationMemory: true
      email: "email"
      targetLangs:
      - "targetLangs"
      - "targetLangs"
  PageDtoWebHookDtoV2:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      pageNumber:
        type: "integer"
        format: "int32"
      numberOfElements:
        type: "integer"
        format: "int32"
      content:
        type: "array"
        items:
          $ref: "#/definitions/WebHookDtoV2"
    example:
      pageNumber: 5
      numberOfElements: 5
      totalPages: 6
      pageSize: 1
      content:
      - hidden: true
        id: "id"
        url: "url"
        events:
        - "JOB_STATUS_CHANGED"
        - "JOB_STATUS_CHANGED"
      - hidden: true
        id: "id"
        url: "url"
        events:
        - "JOB_STATUS_CHANGED"
        - "JOB_STATUS_CHANGED"
      totalElements: 0
  WebHookDtoV2:
    type: "object"
    required:
    - "url"
    properties:
      id:
        type: "string"
      url:
        type: "string"
      events:
        type: "array"
        items:
          type: "string"
          enum:
          - "JOB_STATUS_CHANGED"
          - "JOB_CREATED"
          - "JOB_ASSIGNED"
          - "JOB_DUE_DATE_CHANGED"
          - "PROJECT_CREATED"
          - "PROJECT_STATUS_CHANGED"
          - "PROJECT_DUE_DATE_CHANGED"
          - "SHARED_PROJECT_ASSIGNED"
          - "PROJECT_METADATA_UPDATED"
          - "PRE_TRANSLATION_FINISHED"
          - "ANALYSIS_CREATED"
          - "CONTINUOUS_JOB_UPDATED"
      hidden:
        type: "boolean"
        description: "Default: false"
    example:
      hidden: true
      id: "id"
      url: "url"
      events:
      - "JOB_STATUS_CHANGED"
      - "JOB_STATUS_CHANGED"
  ConceptDtov2:
    type: "object"
    properties:
      id:
        type: "string"
      definition:
        type: "string"
      domain:
        type: "string"
      subDomains:
        type: "array"
        items:
          type: "string"
      url:
        type: "string"
      note:
        type: "string"
    example:
      note: "note"
      domain: "domain"
      subDomains:
      - "subDomains"
      - "subDomains"
      definition: "definition"
      id: "id"
      url: "url"
  SearchTbResponseDto:
    type: "object"
    properties:
      termBase:
        $ref: "#/definitions/TermBaseReference"
      concept:
        $ref: "#/definitions/ConceptDtov2"
      sourceTerm:
        $ref: "#/definitions/TermV2Dto"
      translationTerms:
        type: "array"
        items:
          $ref: "#/definitions/TermV2Dto"
    example:
      translationTerms:
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "partOfSpeech"
        termType: "termType"
        shortTranslation: "shortTranslation"
        rtl: true
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        status: "New"
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "partOfSpeech"
        termType: "termType"
        shortTranslation: "shortTranslation"
        rtl: true
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        status: "New"
      concept:
        note: "note"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        definition: "definition"
        id: "id"
        url: "url"
      sourceTerm:
        note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "partOfSpeech"
        termType: "termType"
        shortTranslation: "shortTranslation"
        rtl: true
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        status: "New"
      termBase:
        name: "name"
        id: "id"
  SearchTbResponseListDto:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/SearchTbResponseDto"
    example:
      searchResults:
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        concept:
          note: "note"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          definition: "definition"
          id: "id"
          url: "url"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        termBase:
          name: "name"
          id: "id"
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        concept:
          note: "note"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          definition: "definition"
          id: "id"
          url: "url"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        termBase:
          name: "name"
          id: "id"
  TermBaseReference:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
    example:
      name: "name"
      id: "id"
  TermV2Dto:
    type: "object"
    required:
    - "text"
    properties:
      id:
        type: "string"
      text:
        type: "string"
      lang:
        type: "string"
      rtl:
        type: "boolean"
      modifiedAt:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
      modifiedBy:
        $ref: "#/definitions/UserReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      caseSensitive:
        type: "boolean"
      exactMatch:
        type: "boolean"
      forbidden:
        type: "boolean"
      preferred:
        type: "boolean"
      status:
        type: "string"
        enum:
        - "New"
        - "Approved"
      conceptId:
        type: "string"
      usage:
        type: "string"
      note:
        type: "string"
      writable:
        type: "boolean"
      shortTranslation:
        type: "string"
      termType:
        type: "string"
      partOfSpeech:
        type: "string"
      gender:
        type: "string"
      number:
        type: "string"
    example:
      note: "note"
      exactMatch: true
      gender: "gender"
      modifiedAt: "2000-01-23T04:56:07.000+00:00"
      caseSensitive: true
      forbidden: true
      usage: "usage"
      partOfSpeech: "partOfSpeech"
      termType: "termType"
      shortTranslation: "shortTranslation"
      rtl: true
      writable: true
      createdAt: "2000-01-23T04:56:07.000+00:00"
      number: "number"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      conceptId: "conceptId"
      modifiedBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      id: "id"
      text: "text"
      lang: "lang"
      preferred: true
      status: "New"
  SearchTbByJobRequestDto:
    type: "object"
    required:
    - "query"
    properties:
      query:
        type: "string"
      count:
        type: "integer"
        format: "int32"
        description: "Default: 15"
      offset:
        type: "integer"
        format: "int32"
        description: "Default: 0"
      reverse:
        type: "boolean"
        description: "Default: false"
    example:
      offset: 6
      query: "query"
      count: 0
      reverse: true
  SearchInTextResponse2Dto:
    type: "object"
    properties:
      termBase:
        $ref: "#/definitions/TermBaseReference"
      sourceTerm:
        $ref: "#/definitions/TermV2Dto"
      concept:
        $ref: "#/definitions/ConceptDtov2"
      translationTerms:
        type: "array"
        items:
          $ref: "#/definitions/TermV2Dto"
      subTerm:
        type: "boolean"
      matches:
        type: "array"
        items:
          $ref: "#/definitions/Match"
    example:
      translationTerms:
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "partOfSpeech"
        termType: "termType"
        shortTranslation: "shortTranslation"
        rtl: true
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        status: "New"
      - note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "partOfSpeech"
        termType: "termType"
        shortTranslation: "shortTranslation"
        rtl: true
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        status: "New"
      sourceTerm:
        note: "note"
        exactMatch: true
        gender: "gender"
        modifiedAt: "2000-01-23T04:56:07.000+00:00"
        caseSensitive: true
        forbidden: true
        usage: "usage"
        partOfSpeech: "partOfSpeech"
        termType: "termType"
        shortTranslation: "shortTranslation"
        rtl: true
        writable: true
        createdAt: "2000-01-23T04:56:07.000+00:00"
        number: "number"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        conceptId: "conceptId"
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        id: "id"
        text: "text"
        lang: "lang"
        preferred: true
        status: "New"
      concept:
        note: "note"
        domain: "domain"
        subDomains:
        - "subDomains"
        - "subDomains"
        definition: "definition"
        id: "id"
        url: "url"
      termBase:
        name: "name"
        id: "id"
      subTerm: true
      matches:
      - beginIndex: 0
        text: "text"
      - beginIndex: 0
        text: "text"
  SearchInTextResponseList2Dto:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/SearchInTextResponse2Dto"
    example:
      searchResults:
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        concept:
          note: "note"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          definition: "definition"
          id: "id"
          url: "url"
        termBase:
          name: "name"
          id: "id"
        subTerm: true
        matches:
        - beginIndex: 0
          text: "text"
        - beginIndex: 0
          text: "text"
      - translationTerms:
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        - note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        sourceTerm:
          note: "note"
          exactMatch: true
          gender: "gender"
          modifiedAt: "2000-01-23T04:56:07.000+00:00"
          caseSensitive: true
          forbidden: true
          usage: "usage"
          partOfSpeech: "partOfSpeech"
          termType: "termType"
          shortTranslation: "shortTranslation"
          rtl: true
          writable: true
          createdAt: "2000-01-23T04:56:07.000+00:00"
          number: "number"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          conceptId: "conceptId"
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          id: "id"
          text: "text"
          lang: "lang"
          preferred: true
          status: "New"
        concept:
          note: "note"
          domain: "domain"
          subDomains:
          - "subDomains"
          - "subDomains"
          definition: "definition"
          id: "id"
          url: "url"
        termBase:
          name: "name"
          id: "id"
        subTerm: true
        matches:
        - beginIndex: 0
          text: "text"
        - beginIndex: 0
          text: "text"
  SearchTbInTextByJobRequestDto:
    type: "object"
    required:
    - "text"
    properties:
      text:
        type: "string"
      reverse:
        type: "boolean"
        description: "Default: false"
      zeroLengthSeparator:
        type: "string"
    example:
      zeroLengthSeparator: "zeroLengthSeparator"
      text: "text"
      reverse: true
  AnalyseLanguagePartV3Dto:
    type: "object"
    properties:
      id:
        type: "string"
      sourceLang:
        type: "string"
      targetLang:
        type: "string"
      data:
        $ref: "#/definitions/DataDto"
      discountedData:
        $ref: "#/definitions/DataDto"
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseJobReference"
    example:
      targetLang: "targetLang"
      data:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
      sourceLang: "sourceLang"
      discountedData:
        all:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        nonTranslatablesMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        available: true
        transMemoryMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match101:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
        repetitions:
          characters: 1.46581298050294517310021547018550336360931396484375
          words: 6.02745618307040320615897144307382404804229736328125
          normalizedPages: 5.962133916683182377482808078639209270477294921875
          percent: 5.63737665663332876420099637471139430999755859375
          segments: 0.80082819046101150206595775671303272247314453125
        machineTranslationMatches:
          match0:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match85:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match100:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match75:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match50:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          match95:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
      jobs:
      - uid: "uid"
        filename: "filename"
      - uid: "uid"
        filename: "filename"
      id: "id"
  AnalyseV3Dto:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
        enum:
        - "PreAnalyse"
        - "PostAnalyse"
        - "PreAnalyseTarget"
        - "Compare"
      name:
        type: "string"
      provider:
        $ref: "#/definitions/ProviderReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      dateCreated:
        type: "string"
        format: "date-time"
      netRateScheme:
        $ref: "#/definitions/NetRateSchemeReference"
      analyseLanguageParts:
        type: "array"
        items:
          $ref: "#/definitions/AnalyseLanguagePartV3Dto"
    example:
      dateCreated: "2000-01-23T04:56:07.000+00:00"
      provider:
        id: "id"
        type: "type"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      name: "name"
      id: "id"
      type: "PreAnalyse"
      netRateScheme:
        dateCreated: "2000-01-23T04:56:07.000+00:00"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        name: "name"
        id: "id"
      analyseLanguageParts:
      - targetLang: "targetLang"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        sourceLang: "sourceLang"
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        jobs:
        - uid: "uid"
          filename: "filename"
        - uid: "uid"
          filename: "filename"
        id: "id"
      - targetLang: "targetLang"
        data:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        sourceLang: "sourceLang"
        discountedData:
          all:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          nonTranslatablesMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          available: true
          transMemoryMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match101:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
          repetitions:
            characters: 1.46581298050294517310021547018550336360931396484375
            words: 6.02745618307040320615897144307382404804229736328125
            normalizedPages: 5.962133916683182377482808078639209270477294921875
            percent: 5.63737665663332876420099637471139430999755859375
            segments: 0.80082819046101150206595775671303272247314453125
          machineTranslationMatches:
            match0:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match85:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match100:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match75:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match50:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
            match95:
              characters: 1.46581298050294517310021547018550336360931396484375
              words: 6.02745618307040320615897144307382404804229736328125
              normalizedPages: 5.962133916683182377482808078639209270477294921875
              percent: 5.63737665663332876420099637471139430999755859375
              segments: 0.80082819046101150206595775671303272247314453125
        jobs:
        - uid: "uid"
          filename: "filename"
        - uid: "uid"
          filename: "filename"
        id: "id"
  SearchResponseListTmDtoV3:
    type: "object"
    properties:
      searchResults:
        type: "array"
        items:
          $ref: "#/definitions/SearchTMResponseDtoV3"
    example:
      searchResults:
      - transMemory:
          name: "name"
          id: "id"
          reverse: true
        score: 9.301444243932575517419536481611430644989013671875
        translations:
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        segmentId: "segmentId"
        subSegment: true
        source:
          modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        grossScore: 7.061401241503109105224211816675961017608642578125
      - transMemory:
          name: "name"
          id: "id"
          reverse: true
        score: 9.301444243932575517419536481611430644989013671875
        translations:
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        - modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        segmentId: "segmentId"
        subSegment: true
        source:
          modifiedAt: 0
          subDomain:
            name: "name"
            id: 2
          project:
            uid: "uid"
            name: "name"
            id: 1
          rtl: true
          tagMetadata:
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          - transAttributes: "transAttributes"
            id: "id"
            type: "type"
            content: "content"
          createdAt: 6
          filename: "filename"
          createdBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          domain:
            name: "name"
            id: 5
          nextSegment: "nextSegment"
          client:
            name: "name"
            id: 5
          modifiedBy:
            firstName: "firstName"
            lastName: "lastName"
            uid: "uid"
            role: "SYS_ADMIN"
            id: "id"
            userName: "userName"
            email: "email"
          previousSegment: "previousSegment"
          id: "id"
          text: "text"
          lang: "lang"
          key: "key"
        grossScore: 7.061401241503109105224211816675961017608642578125
  SearchTMClientDtoV3:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 5
  SearchTMDomainDtoV3:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 5
  SearchTMProjectDtoV3:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      uid:
        type: "string"
      name:
        type: "string"
    example:
      uid: "uid"
      name: "name"
      id: 1
  SearchTMResponseDtoV3:
    type: "object"
    properties:
      segmentId:
        type: "string"
      source:
        $ref: "#/definitions/SearchTMSegmentDtoV3"
      translations:
        type: "array"
        items:
          $ref: "#/definitions/SearchTMSegmentDtoV3"
      transMemory:
        $ref: "#/definitions/SearchTMTransMemoryDtoV3"
      grossScore:
        type: "number"
        format: "double"
      score:
        type: "number"
        format: "double"
      subSegment:
        type: "boolean"
    example:
      transMemory:
        name: "name"
        id: "id"
        reverse: true
      score: 9.301444243932575517419536481611430644989013671875
      translations:
      - modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      - modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      segmentId: "segmentId"
      subSegment: true
      source:
        modifiedAt: 0
        subDomain:
          name: "name"
          id: 2
        project:
          uid: "uid"
          name: "name"
          id: 1
        rtl: true
        tagMetadata:
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        - transAttributes: "transAttributes"
          id: "id"
          type: "type"
          content: "content"
        createdAt: 6
        filename: "filename"
        createdBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        domain:
          name: "name"
          id: 5
        nextSegment: "nextSegment"
        client:
          name: "name"
          id: 5
        modifiedBy:
          firstName: "firstName"
          lastName: "lastName"
          uid: "uid"
          role: "SYS_ADMIN"
          id: "id"
          userName: "userName"
          email: "email"
        previousSegment: "previousSegment"
        id: "id"
        text: "text"
        lang: "lang"
        key: "key"
      grossScore: 7.061401241503109105224211816675961017608642578125
  SearchTMSegmentDtoV3:
    type: "object"
    properties:
      id:
        type: "string"
      text:
        type: "string"
      lang:
        type: "string"
      rtl:
        type: "boolean"
      modifiedAt:
        type: "integer"
        format: "int64"
      createdAt:
        type: "integer"
        format: "int64"
      modifiedBy:
        $ref: "#/definitions/UserReference"
      createdBy:
        $ref: "#/definitions/UserReference"
      filename:
        type: "string"
      project:
        $ref: "#/definitions/SearchTMProjectDtoV3"
      client:
        $ref: "#/definitions/SearchTMClientDtoV3"
      domain:
        $ref: "#/definitions/SearchTMDomainDtoV3"
      subDomain:
        $ref: "#/definitions/SearchTMSubDomainDtoV3"
      tagMetadata:
        type: "array"
        items:
          $ref: "#/definitions/TagMetadata"
      previousSegment:
        type: "string"
      nextSegment:
        type: "string"
      key:
        type: "string"
    example:
      modifiedAt: 0
      subDomain:
        name: "name"
        id: 2
      project:
        uid: "uid"
        name: "name"
        id: 1
      rtl: true
      tagMetadata:
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      - transAttributes: "transAttributes"
        id: "id"
        type: "type"
        content: "content"
      createdAt: 6
      filename: "filename"
      createdBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      domain:
        name: "name"
        id: 5
      nextSegment: "nextSegment"
      client:
        name: "name"
        id: 5
      modifiedBy:
        firstName: "firstName"
        lastName: "lastName"
        uid: "uid"
        role: "SYS_ADMIN"
        id: "id"
        userName: "userName"
        email: "email"
      previousSegment: "previousSegment"
      id: "id"
      text: "text"
      lang: "lang"
      key: "key"
  SearchTMSubDomainDtoV3:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 2
  SearchTMTransMemoryDtoV3:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      reverse:
        type: "boolean"
    example:
      name: "name"
      id: "id"
      reverse: true
  SearchTMByJobRequestDtoV3:
    type: "object"
    required:
    - "query"
    properties:
      query:
        type: "string"
      reverse:
        type: "boolean"
        description: "Default: false"
      scoreThreshold:
        type: "number"
        format: "double"
        description: "Default: 0.0"
        minimum: 0
        maximum: 1.01
        exclusiveMinimum: false
        exclusiveMaximum: false
      maxResults:
        type: "integer"
        format: "int32"
        description: "Default: 15"
        minimum: 1
        maximum: 100
  WildCardSearchByJobRequestDtoV3:
    type: "object"
    required:
    - "query"
    properties:
      query:
        type: "string"
      reverse:
        type: "boolean"
        description: "Default: false"
      count:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 50
      offset:
        type: "integer"
        format: "int32"
    example:
      offset: 6
      query: "query"
      count: 4
      reverse: true
  AbsoluteTranslationLengthWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        limit:
          type: "string"
  EmptyPairTagsWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  EmptyTagContentWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  EmptyTranslationWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  ExtraNumbersWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        extraNumbers:
          type: "array"
          items:
            type: "string"
  ForbiddenStringWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        forbiddenString:
          type: "string"
  ForbiddenTermWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        term:
          type: "string"
  FormattingWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  InconsistentTagContentWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  InconsistentTranslationWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        segmentId:
          type: "string"
  JoinTagsWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        sourceTagsCount:
          type: "integer"
          format: "int32"
        translationTagsCount:
          type: "integer"
          format: "int32"
  LeadingAndTrailingSpacesWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  MalformedWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        message:
          type: "string"
  MissingNumbersWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        missingNumbers:
          type: "array"
          items:
            type: "string"
  MisspelledWordDto:
    type: "object"
    properties:
      word:
        type: "string"
      offset:
        type: "integer"
        format: "int32"
  MoraviaWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        message:
          type: "string"
        subType:
          type: "string"
  MultipleSpacesWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  NestedTagsWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        misplacedTargetTag:
          type: "string"
  NewerAtLowerLevelWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  NonConformingTermWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        term:
          type: "string"
  NotConfirmedWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  QualityAssuranceResponseDto:
    type: "object"
    properties:
      segmentWarnings:
        type: "array"
        items:
          $ref: "#/definitions/SegmentWarningsDto"
      finished:
        type: "boolean"
    example:
      segmentWarnings:
      - segmentId: "segmentId"
        warnings:
        - ignored: true
          repetitionGroupId: "repetitionGroupId"
          id: "id"
          type: "type"
        - ignored: true
          repetitionGroupId: "repetitionGroupId"
          id: "id"
          type: "type"
        ignoredChecks:
        - "ignoredChecks"
        - "ignoredChecks"
      - segmentId: "segmentId"
        warnings:
        - ignored: true
          repetitionGroupId: "repetitionGroupId"
          id: "id"
          type: "type"
        - ignored: true
          repetitionGroupId: "repetitionGroupId"
          id: "id"
          type: "type"
        ignoredChecks:
        - "ignoredChecks"
        - "ignoredChecks"
      finished: true
  RelativeTranslationLengthWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        limit:
          type: "string"
  RepeatedWordsWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        repeatedWords:
          type: "array"
          items:
            type: "string"
  SegmentWarningsDto:
    type: "object"
    properties:
      segmentId:
        type: "string"
      warnings:
        type: "array"
        items:
          $ref: "#/definitions/segmentWarning"
      ignoredChecks:
        type: "array"
        items:
          type: "string"
    example:
      segmentId: "segmentId"
      warnings:
      - ignored: true
        repetitionGroupId: "repetitionGroupId"
        id: "id"
        type: "type"
      - ignored: true
        repetitionGroupId: "repetitionGroupId"
        id: "id"
        type: "type"
      ignoredChecks:
      - "ignoredChecks"
      - "ignoredChecks"
  SourceTargetRegexpWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        description:
          type: "string"
  SpellCheckWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        misspelledWords:
          type: "array"
          items:
            $ref: "#/definitions/MisspelledWordDto"
  TargetSourceIdenticalWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  TerminologyWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        missingTerms:
          type: "array"
          items:
            type: "string"
        forbiddenTerms:
          type: "array"
          items:
            type: "string"
  TrailingPunctuationWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  TrailingSpaceWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  TranslationLengthWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  UnmodifiedFuzzyTranslationMTNTWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        transOrigin:
          type: "string"
  UnmodifiedFuzzyTranslationTMWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        transOrigin:
          type: "string"
  UnmodifiedFuzzyTranslationWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
      properties:
        transOrigin:
          type: "string"
  UnresolvedCommentWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  UnresolvedConversationWarningDto:
    allOf:
    - $ref: "#/definitions/segmentWarning"
    - type: "object"
  segmentWarning:
    type: "object"
    discriminator: "type"
    properties:
      id:
        type: "string"
      ignored:
        type: "boolean"
      type:
        type: "string"
      repetitionGroupId:
        type: "string"
    example:
      ignored: true
      repetitionGroupId: "repetitionGroupId"
      id: "id"
      type: "type"
  JobPartSegmentsDtoV3:
    type: "object"
    required:
    - "job"
    - "segments"
    properties:
      job:
        $ref: "#/definitions/UidReference"
      segments:
        type: "array"
        items:
          type: "string"
    example:
      job:
        uid: "uid"
      segments:
      - "segments"
      - "segments"
  QualityAssuranceSegmentsRunDtoV3:
    type: "object"
    required:
    - "jobsAndSegments"
    properties:
      jobsAndSegments:
        type: "array"
        items:
          $ref: "#/definitions/JobPartSegmentsDtoV3"
        maxItems: 100
        minItems: 1
      warningTypes:
        type: "array"
        description: "When empty only fast checks run"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
        maxItems: 100
        minItems: 0
      maxQaWarningsCount:
        type: "integer"
        format: "int32"
        description: "Maximum number of QA warnings in result, default: 100. For efficiency\
          \ reasons QA\nwarnings are processed with minimum segments chunk size 10,\
          \ therefore slightly more warnings are returned."
        minimum: 1
        maximum: 1000
    example:
      warningTypes:
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      maxQaWarningsCount: 81
      jobsAndSegments:
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
      - job:
          uid: "uid"
        segments:
        - "segments"
        - "segments"
  QualityAssuranceRunDtoV3:
    type: "object"
    properties:
      initialSegment:
        $ref: "#/definitions/SegmentReference"
      maxQaWarningsCount:
        type: "integer"
        format: "int32"
        description: "Maximum number of QA warnings in result, default: 100. For efficiency\
          \ reasons QA\nwarnings are processed with minimum segments chunk size 10,\
          \ therefore slightly more warnings are returned."
        minimum: 1
        maximum: 1000
      warningTypes:
        type: "array"
        items:
          type: "string"
          enum:
          - "EmptyTranslation"
          - "TrailingPunctuation"
          - "Formatting"
          - "JoinTags"
          - "MissingNumbers"
          - "MultipleSpaces"
          - "NonConformingTerm"
          - "NotConfirmed"
          - "TranslationLength"
          - "AbsoluteLength"
          - "RelativeLength"
          - "UnresolvedComment"
          - "EmptyPairTags"
          - "InconsistentTranslationTargetSource"
          - "InconsistentTranslationSourceTarget"
          - "ForbiddenString"
          - "SpellCheck"
          - "RepeatedWords"
          - "InconsistentTagContent"
          - "EmptyTagContent"
          - "Malformed"
          - "ForbiddenTerm"
          - "NewerAtLowerLevel"
          - "LeadingAndTrailingSpaces"
          - "TargetSourceIdentical"
          - "SourceOrTargetRegexp"
          - "UnmodifiedFuzzyTranslation"
          - "UnmodifiedFuzzyTranslationTM"
          - "UnmodifiedFuzzyTranslationMTNT"
          - "Moravia"
          - "ExtraNumbers"
          - "UnresolvedConversation"
          - "NestedTags"
        maxItems: 100
        minItems: 0
    example:
      warningTypes:
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      - "EmptyTranslation"
      initialSegment:
        uid: "uid"
      maxQaWarningsCount: 81
  QualityAssuranceBatchRunDtoV3:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        items:
          $ref: "#/definitions/UidReference"
        maxItems: 500
        minItems: 1
      settings:
        $ref: "#/definitions/QualityAssuranceRunDtoV3"
      maxQaWarningsCount:
        type: "integer"
        format: "int32"
        description: "Maximum number of QA warnings in result, default: 100. For efficiency\
          \ reasons QA\nwarnings are processed with minimum segments chunk size 10,\
          \ therefore slightly more warnings are returned."
        minimum: 1
        maximum: 1000
    example:
      settings:
        warningTypes:
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        - "EmptyTranslation"
        initialSegment:
          uid: "uid"
        maxQaWarningsCount: 81
      jobs:
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      - uid: "uid"
      maxQaWarningsCount: 81
